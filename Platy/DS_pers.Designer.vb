'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.42000
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



'''<summary>
'''Represents a strongly typed in-memory cache of data.
'''</summary>
<Global.System.Serializable(),  _
 Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
 Global.System.ComponentModel.ToolboxItem(true),  _
 Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema"),  _
 Global.System.Xml.Serialization.XmlRootAttribute("DS_pers"),  _
 Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")>  _
Partial Public Class DS_pers
    Inherits Global.System.Data.DataSet
    
    Private tablePERS As PERSDataTable
    
    Private _schemaSerializationMode As Global.System.Data.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Sub New()
        MyBase.New
        Me.BeginInit
        Me.InitClass
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler MyBase.Relations.CollectionChanged, schemaChangedHandler
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
        MyBase.New(info, context, false)
        If (Me.IsBinarySerialized(info, context) = true) Then
            Me.InitVars(false)
            Dim schemaChangedHandler1 As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
            AddHandler Me.Tables.CollectionChanged, schemaChangedHandler1
            AddHandler Me.Relations.CollectionChanged, schemaChangedHandler1
            Return
        End If
        Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(String)),String)
        If (Me.DetermineSchemaSerializationMode(info, context) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
            If (Not (ds.Tables("PERS")) Is Nothing) Then
                MyBase.Tables.Add(New PERSDataTable(ds.Tables("PERS")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
        End If
        Me.GetSerializationData(info, context)
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property PERS() As PERSDataTable
        Get
            Return Me.tablePERS
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.BrowsableAttribute(true),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Visible)>  _
    Public Overrides Property SchemaSerializationMode() As Global.System.Data.SchemaSerializationMode
        Get
            Return Me._schemaSerializationMode
        End Get
        Set
            Me._schemaSerializationMode = value
        End Set
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Tables() As Global.System.Data.DataTableCollection
        Get
            Return MyBase.Tables
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Relations() As Global.System.Data.DataRelationCollection
        Get
            Return MyBase.Relations
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Sub InitializeDerivedDataSet()
        Me.BeginInit
        Me.InitClass
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Overrides Function Clone() As Global.System.Data.DataSet
        Dim cln As DS_pers = CType(MyBase.Clone,DS_pers)
        cln.InitVars
        cln.SchemaSerializationMode = Me.SchemaSerializationMode
        Return cln
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Function ShouldSerializeTables() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Function ShouldSerializeRelations() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Sub ReadXmlSerializable(ByVal reader As Global.System.Xml.XmlReader)
        If (Me.DetermineSchemaSerializationMode(reader) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Me.Reset
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXml(reader)
            If (Not (ds.Tables("PERS")) Is Nothing) Then
                MyBase.Tables.Add(New PERSDataTable(ds.Tables("PERS")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXml(reader)
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Function GetSchemaSerializable() As Global.System.Xml.Schema.XmlSchema
        Dim stream As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
        Me.WriteXmlSchema(New Global.System.Xml.XmlTextWriter(stream, Nothing))
        stream.Position = 0
        Return Global.System.Xml.Schema.XmlSchema.Read(New Global.System.Xml.XmlTextReader(stream), Nothing)
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Friend Overloads Sub InitVars()
        Me.InitVars(true)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Friend Overloads Sub InitVars(ByVal initTable As Boolean)
        Me.tablePERS = CType(MyBase.Tables("PERS"),PERSDataTable)
        If (initTable = true) Then
            If (Not (Me.tablePERS) Is Nothing) Then
                Me.tablePERS.InitVars
            End If
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Sub InitClass()
        Me.DataSetName = "DS_pers"
        Me.Prefix = ""
        Me.Namespace = "http://tempuri.org/DS_pers.xsd"
        Me.EnforceConstraints = true
        Me.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
        Me.tablePERS = New PERSDataTable()
        MyBase.Tables.Add(Me.tablePERS)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializePERS() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Sub SchemaChanged(ByVal sender As Object, ByVal e As Global.System.ComponentModel.CollectionChangeEventArgs)
        If (e.Action = Global.System.ComponentModel.CollectionChangeAction.Remove) Then
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Shared Function GetTypedDataSetSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
        Dim ds As DS_pers = New DS_pers()
        Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
        Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
        Dim any As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
        any.Namespace = ds.Namespace
        sequence.Items.Add(any)
        type.Particle = sequence
        Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
        If xs.Contains(dsSchema.TargetNamespace) Then
            Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Try 
                Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                dsSchema.Write(s1)
                Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                Do While schemas.MoveNext
                    schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                    s2.SetLength(0)
                    schema.Write(s2)
                    If (s1.Length = s2.Length) Then
                        s1.Position = 0
                        s2.Position = 0
                        
                        Do While ((s1.Position <> s1.Length)  _
                                    AndAlso (s1.ReadByte = s2.ReadByte))
                            
                            
                        Loop
                        If (s1.Position = s1.Length) Then
                            Return type
                        End If
                    End If
                    
                Loop
            Finally
                If (Not (s1) Is Nothing) Then
                    s1.Close
                End If
                If (Not (s2) Is Nothing) Then
                    s2.Close
                End If
            End Try
        End If
        xs.Add(dsSchema)
        Return type
    End Function
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub PERSRowChangeEventHandler(ByVal sender As Object, ByVal e As PERSRowChangeEvent)
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class PERSDataTable
        Inherits Global.System.Data.TypedTableBase(Of PERSRow)
        
        Private columnID As Global.System.Data.DataColumn
        
        Private columnJMENO As Global.System.Data.DataColumn
        
        Private columnTITUL As Global.System.Data.DataColumn
        
        Private columnEV_CISLO As Global.System.Data.DataColumn
        
        Private columnPROV_CISLO As Global.System.Data.DataColumn
        
        Private columnROD_CISLO As Global.System.Data.DataColumn
        
        Private columnPPV As Global.System.Data.DataColumn
        
        Private columnBYD_PSC As Global.System.Data.DataColumn
        
        Private columnBYD_MISTO As Global.System.Data.DataColumn
        
        Private columnROZPETI As Global.System.Data.DataColumn
        
        Private columnVZD_DOSA As Global.System.Data.DataColumn
        
        Private columnVZD_POZA As Global.System.Data.DataColumn
        
        Private columnVZD_POZ_DA As Global.System.Data.DataColumn
        
        Private columnTYP_POZ As Global.System.Data.DataColumn
        
        Private columnODPOCET As Global.System.Data.DataColumn
        
        Private columnNEMINUS As Global.System.Data.DataColumn
        
        Private columnPRV_ZAR As Global.System.Data.DataColumn
        
        Private columnPRAX As Global.System.Data.DataColumn
        
        Private columnPRAX_DNY As Global.System.Data.DataColumn
        
        Private columnSTUPEN As Global.System.Data.DataColumn
        
        Private columnTRIDA As Global.System.Data.DataColumn
        
        Private columnTARIFKC As Global.System.Data.DataColumn
        
        Private columnTARIFZVYSPROC As Global.System.Data.DataColumn
        
        Private columnOSPRIPKC As Global.System.Data.DataColumn
        
        Private columnVEDENI As Global.System.Data.DataColumn
        
        Private columnZTIZENE As Global.System.Data.DataColumn
        
        Private columnSMENNOST As Global.System.Data.DataColumn
        
        Private columnZVLASTNI As Global.System.Data.DataColumn
        
        Private columnOD As Global.System.Data.DataColumn
        
        Private columnDATUMOD As Global.System.Data.DataColumn
        
        Private columnDAT_NOV_TR As Global.System.Data.DataColumn
        
        Private columnDAT_NOV_TR_TXT As Global.System.Data.DataColumn
        
        Private columnD_NASTUPU As Global.System.Data.DataColumn
        
        Private columnD_VYSTUPU As Global.System.Data.DataColumn
        
        Private columnUSEK As Global.System.Data.DataColumn
        
        Private columnTISK As Global.System.Data.DataColumn
        
        Private columnNEURCI As Global.System.Data.DataColumn
        
        Private columnURCI_DO As Global.System.Data.DataColumn
        
        Private columnZKUDOBA As Global.System.Data.DataColumn
        
        Private columnZKUD_DO As Global.System.Data.DataColumn
        
        Private columnDALUJ As Global.System.Data.DataColumn
        
        Private columnROD_PRIJ As Global.System.Data.DataColumn
        
        Private columnMIST_NAR As Global.System.Data.DataColumn
        
        Private columnZDR_POJ As Global.System.Data.DataColumn
        
        Private columnDUCHOD As Global.System.Data.DataColumn
        
        Private columnCESTY As Global.System.Data.DataColumn
        
        Private columnPED As Global.System.Data.DataColumn
        
        Private columnPREP As Global.System.Data.DataColumn
        
        Private columnZPUS As Global.System.Data.DataColumn
        
        Private columnZPUS_DAT As Global.System.Data.DataColumn
        
        Private columnDALUJ_TEXT As Global.System.Data.DataColumn
        
        Private columnCELEJMENO As Global.System.Data.DataColumn
        
        Private columnPPV_SOUB As Global.System.Data.DataColumn
        
        Private columnZPS As Global.System.Data.DataColumn
        
        Private columnPOZNAMKA As Global.System.Data.DataColumn
        
        Private columnPRIPVED As Global.System.Data.DataColumn
        
        Private columnPRACOV As Global.System.Data.DataColumn
        
        Private columnFUNKCE As Global.System.Data.DataColumn
        
        Private columnPLATCELK As Global.System.Data.DataColumn
        
        Private columnVOLIT4 As Global.System.Data.DataColumn
        
        Private columnVOLIT5 As Global.System.Data.DataColumn
        
        Private columnVOLIT6 As Global.System.Data.DataColumn
        
        Private columnZP25X As Global.System.Data.DataColumn
        
        Private columnNOVATRIDA As Global.System.Data.DataColumn
        
        Private columnZP25X_ZNAK As Global.System.Data.DataColumn
        
        Private columnDAT_NAROZ As Global.System.Data.DataColumn
        
        Private columnSPECPRIPPED As Global.System.Data.DataColumn
        
        Private columnZJED As Global.System.Data.DataColumn
        
        Private columnZJEDROKY As Global.System.Data.DataColumn
        
        Private columnZJEDDNY As Global.System.Data.DataColumn
        
        Private columnZJEDDAT As Global.System.Data.DataColumn
        
        Private columnTABULKA As Global.System.Data.DataColumn
        
        Private columnLH_ZDRAV As Global.System.Data.DataColumn
        
        Private columnLH_BOZP As Global.System.Data.DataColumn
        
        Private columnLH_SIPVZ As Global.System.Data.DataColumn
        
        Private columnLH_SKOL As Global.System.Data.DataColumn
        
        Private columnPRIJMENI As Global.System.Data.DataColumn
        
        Private columnDRUH_PRACDOB As Global.System.Data.DataColumn
        
        Private columnDRUH_PRACREZ As Global.System.Data.DataColumn
        
        Private columnDAT_KONEC_PP As Global.System.Data.DataColumn
        
        Private columnDAT_UZAV_PS As Global.System.Data.DataColumn
        
        Private columnERR As Global.System.Data.DataColumn
        
        Private columnZVLZDRAV As Global.System.Data.DataColumn
        
        Private columnVOLIT3 As Global.System.Data.DataColumn
        
        Private columnLH_MDRD As Global.System.Data.DataColumn
        
        Private columnBYD_ULICE As Global.System.Data.DataColumn
        
        Private columnPRAX_PV As Global.System.Data.DataColumn
        
        Private columnPRAX_PV_DNY As Global.System.Data.DataColumn
        
        Private columnPRAX_PV_DAT As Global.System.Data.DataColumn
        
        Private columnZIVVYR As Global.System.Data.DataColumn
        
        Private columnZIVVYR_DAT As Global.System.Data.DataColumn
        
        Private columnPED_ZARAZENI As Global.System.Data.DataColumn
        
        Private columnPED_ZPUSOBILOST As Global.System.Data.DataColumn
        
        Private columnOLDTABULKA As Global.System.Data.DataColumn
        
        Private columnVOLIT1 As Global.System.Data.DataColumn
        
        Private columnVOLIT2 As Global.System.Data.DataColumn
        
        Private columnVP_SJ As Global.System.Data.DataColumn
        
        Private columnVP_PL As Global.System.Data.DataColumn
        
        Private columnROZPETI_BLN As Global.System.Data.DataColumn
        
        Private columnCHRAN_TARIFKC As Global.System.Data.DataColumn
        
        Private columnCHRAN_OSOBA As Global.System.Data.DataColumn
        
        Private columnPRAX_VYKAZ As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "PERS"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property JMENOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnJMENO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TITULColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTITUL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property EV_CISLOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEV_CISLO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PROV_CISLOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPROV_CISLO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ROD_CISLOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnROD_CISLO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PPVColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPPV
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property BYD_PSCColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBYD_PSC
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property BYD_MISTOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBYD_MISTO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ROZPETIColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnROZPETI
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property VZD_DOSAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnVZD_DOSA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property VZD_POZAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnVZD_POZA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property VZD_POZ_DAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnVZD_POZ_DA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TYP_POZColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTYP_POZ
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ODPOCETColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnODPOCET
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NEMINUSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNEMINUS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PRV_ZARColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPRV_ZAR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PRAXColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPRAX
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PRAX_DNYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPRAX_DNY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property STUPENColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSTUPEN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TRIDAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTRIDA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TARIFKCColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTARIFKC
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TARIFZVYSPROCColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTARIFZVYSPROC
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property OSPRIPKCColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOSPRIPKC
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property VEDENIColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnVEDENI
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ZTIZENEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnZTIZENE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SMENNOSTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSMENNOST
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ZVLASTNIColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnZVLASTNI
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ODColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOD
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DATUMODColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDATUMOD
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DAT_NOV_TRColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDAT_NOV_TR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DAT_NOV_TR_TXTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDAT_NOV_TR_TXT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property D_NASTUPUColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnD_NASTUPU
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property D_VYSTUPUColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnD_VYSTUPU
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property USEKColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUSEK
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TISKColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTISK
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NEURCIColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNEURCI
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property URCI_DOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnURCI_DO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ZKUDOBAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnZKUDOBA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ZKUD_DOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnZKUD_DO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DALUJColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDALUJ
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ROD_PRIJColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnROD_PRIJ
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MIST_NARColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMIST_NAR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ZDR_POJColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnZDR_POJ
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DUCHODColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDUCHOD
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CESTYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCESTY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PEDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPED
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PREPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPREP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ZPUSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnZPUS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ZPUS_DATColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnZPUS_DAT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DALUJ_TEXTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDALUJ_TEXT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CELEJMENOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCELEJMENO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PPV_SOUBColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPPV_SOUB
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ZPSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnZPS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property POZNAMKAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPOZNAMKA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PRIPVEDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPRIPVED
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PRACOVColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPRACOV
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FUNKCEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFUNKCE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PLATCELKColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPLATCELK
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property VOLIT4Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnVOLIT4
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property VOLIT5Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnVOLIT5
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property VOLIT6Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnVOLIT6
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ZP25XColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnZP25X
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NOVATRIDAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNOVATRIDA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ZP25X_ZNAKColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnZP25X_ZNAK
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DAT_NAROZColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDAT_NAROZ
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SPECPRIPPEDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSPECPRIPPED
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ZJEDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnZJED
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ZJEDROKYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnZJEDROKY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ZJEDDNYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnZJEDDNY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ZJEDDATColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnZJEDDAT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TABULKAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTABULKA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property LH_ZDRAVColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLH_ZDRAV
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property LH_BOZPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLH_BOZP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property LH_SIPVZColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLH_SIPVZ
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property LH_SKOLColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLH_SKOL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PRIJMENIColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPRIJMENI
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DRUH_PRACDOBColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDRUH_PRACDOB
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DRUH_PRACREZColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDRUH_PRACREZ
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DAT_KONEC_PPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDAT_KONEC_PP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DAT_UZAV_PSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDAT_UZAV_PS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ERRColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnERR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ZVLZDRAVColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnZVLZDRAV
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property VOLIT3Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnVOLIT3
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property LH_MDRDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLH_MDRD
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property BYD_ULICEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBYD_ULICE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PRAX_PVColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPRAX_PV
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PRAX_PV_DNYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPRAX_PV_DNY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PRAX_PV_DATColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPRAX_PV_DAT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ZIVVYRColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnZIVVYR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ZIVVYR_DATColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnZIVVYR_DAT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PED_ZARAZENIColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPED_ZARAZENI
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PED_ZPUSOBILOSTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPED_ZPUSOBILOST
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property OLDTABULKAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOLDTABULKA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property VOLIT1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnVOLIT1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property VOLIT2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnVOLIT2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property VP_SJColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnVP_SJ
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property VP_PLColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnVP_PL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ROZPETI_BLNColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnROZPETI_BLN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CHRAN_TARIFKCColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCHRAN_TARIFKC
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CHRAN_OSOBAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCHRAN_OSOBA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PRAX_VYKAZColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPRAX_VYKAZ
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As PERSRow
            Get
                Return CType(Me.Rows(index),PERSRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event PERSRowChanging As PERSRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event PERSRowChanged As PERSRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event PERSRowDeleting As PERSRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event PERSRowDeleted As PERSRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddPERSRow(ByVal row As PERSRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddPERSRow( _
                    ByVal JMENO As String,  _
                    ByVal TITUL As String,  _
                    ByVal EV_CISLO As Integer,  _
                    ByVal PROV_CISLO As String,  _
                    ByVal ROD_CISLO As String,  _
                    ByVal PPV As Byte,  _
                    ByVal BYD_PSC As String,  _
                    ByVal BYD_MISTO As String,  _
                    ByVal ROZPETI As Byte,  _
                    ByVal VZD_DOSA As Byte,  _
                    ByVal VZD_POZA As Byte,  _
                    ByVal VZD_POZ_DA As Date,  _
                    ByVal TYP_POZ As Byte,  _
                    ByVal ODPOCET As Double,  _
                    ByVal NEMINUS As Double,  _
                    ByVal PRV_ZAR As Date,  _
                    ByVal PRAX As Double,  _
                    ByVal PRAX_DNY As Double,  _
                    ByVal STUPEN As Short,  _
                    ByVal TRIDA As Short,  _
                    ByVal TARIFKC As Integer,  _
                    ByVal TARIFZVYSPROC As Single,  _
                    ByVal OSPRIPKC As Integer,  _
                    ByVal VEDENI As Integer,  _
                    ByVal ZTIZENE As Integer,  _
                    ByVal SMENNOST As Integer,  _
                    ByVal ZVLASTNI As Integer,  _
                    ByVal OD As Byte,  _
                    ByVal DATUMOD As Date,  _
                    ByVal DAT_NOV_TR As Date,  _
                    ByVal DAT_NOV_TR_TXT As String,  _
                    ByVal D_NASTUPU As Date,  _
                    ByVal D_VYSTUPU As Date,  _
                    ByVal USEK As String,  _
                    ByVal TISK As Boolean,  _
                    ByVal NEURCI As Boolean,  _
                    ByVal URCI_DO As String,  _
                    ByVal ZKUDOBA As Boolean,  _
                    ByVal ZKUD_DO As String,  _
                    ByVal DALUJ As Boolean,  _
                    ByVal ROD_PRIJ As String,  _
                    ByVal MIST_NAR As String,  _
                    ByVal ZDR_POJ As Short,  _
                    ByVal DUCHOD As Byte,  _
                    ByVal CESTY As Boolean,  _
                    ByVal PED As Boolean,  _
                    ByVal PREP As Double,  _
                    ByVal ZPUS As Boolean,  _
                    ByVal ZPUS_DAT As Date,  _
                    ByVal DALUJ_TEXT As String,  _
                    ByVal CELEJMENO As String,  _
                    ByVal PPV_SOUB As Boolean,  _
                    ByVal ZPS As Boolean,  _
                    ByVal POZNAMKA As String,  _
                    ByVal PRIPVED As Byte,  _
                    ByVal PRACOV As String,  _
                    ByVal FUNKCE As String,  _
                    ByVal PLATCELK As Double,  _
                    ByVal VOLIT4 As String,  _
                    ByVal VOLIT5 As Double,  _
                    ByVal VOLIT6 As Double,  _
                    ByVal ZP25X As Boolean,  _
                    ByVal NOVATRIDA As Short,  _
                    ByVal ZP25X_ZNAK As String,  _
                    ByVal DAT_NAROZ As Date,  _
                    ByVal SPECPRIPPED As Short,  _
                    ByVal ZJED As Boolean,  _
                    ByVal ZJEDROKY As Short,  _
                    ByVal ZJEDDNY As Short,  _
                    ByVal ZJEDDAT As Date,  _
                    ByVal TABULKA As Short,  _
                    ByVal LH_ZDRAV As Date,  _
                    ByVal LH_BOZP As Date,  _
                    ByVal LH_SIPVZ As Date,  _
                    ByVal LH_SKOL As Date,  _
                    ByVal PRIJMENI As String,  _
                    ByVal DRUH_PRACDOB As Short,  _
                    ByVal DRUH_PRACREZ As Short,  _
                    ByVal DAT_KONEC_PP As Date,  _
                    ByVal DAT_UZAV_PS As Date,  _
                    ByVal ERR As String,  _
                    ByVal ZVLZDRAV As Short,  _
                    ByVal VOLIT3 As String,  _
                    ByVal LH_MDRD As Date,  _
                    ByVal BYD_ULICE As String,  _
                    ByVal PRAX_PV As Double,  _
                    ByVal PRAX_PV_DNY As Double,  _
                    ByVal PRAX_PV_DAT As String,  _
                    ByVal ZIVVYR As Integer,  _
                    ByVal ZIVVYR_DAT As Date,  _
                    ByVal PED_ZARAZENI As Boolean,  _
                    ByVal PED_ZPUSOBILOST As Boolean,  _
                    ByVal OLDTABULKA As Short,  _
                    ByVal VOLIT1 As String,  _
                    ByVal VOLIT2 As String,  _
                    ByVal VP_SJ As Single,  _
                    ByVal VP_PL As Single,  _
                    ByVal ROZPETI_BLN As Boolean,  _
                    ByVal CHRAN_TARIFKC As Integer,  _
                    ByVal CHRAN_OSOBA As Boolean,  _
                    ByVal PRAX_VYKAZ As String) As PERSRow
            Dim rowPERSRow As PERSRow = CType(Me.NewRow,PERSRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, JMENO, TITUL, EV_CISLO, PROV_CISLO, ROD_CISLO, PPV, BYD_PSC, BYD_MISTO, ROZPETI, VZD_DOSA, VZD_POZA, VZD_POZ_DA, TYP_POZ, ODPOCET, NEMINUS, PRV_ZAR, PRAX, PRAX_DNY, STUPEN, TRIDA, TARIFKC, TARIFZVYSPROC, OSPRIPKC, VEDENI, ZTIZENE, SMENNOST, ZVLASTNI, OD, DATUMOD, DAT_NOV_TR, DAT_NOV_TR_TXT, D_NASTUPU, D_VYSTUPU, USEK, TISK, NEURCI, URCI_DO, ZKUDOBA, ZKUD_DO, DALUJ, ROD_PRIJ, MIST_NAR, ZDR_POJ, DUCHOD, CESTY, PED, PREP, ZPUS, ZPUS_DAT, DALUJ_TEXT, CELEJMENO, PPV_SOUB, ZPS, POZNAMKA, PRIPVED, PRACOV, FUNKCE, PLATCELK, VOLIT4, VOLIT5, VOLIT6, ZP25X, NOVATRIDA, ZP25X_ZNAK, DAT_NAROZ, SPECPRIPPED, ZJED, ZJEDROKY, ZJEDDNY, ZJEDDAT, TABULKA, LH_ZDRAV, LH_BOZP, LH_SIPVZ, LH_SKOL, PRIJMENI, DRUH_PRACDOB, DRUH_PRACREZ, DAT_KONEC_PP, DAT_UZAV_PS, ERR, ZVLZDRAV, VOLIT3, LH_MDRD, BYD_ULICE, PRAX_PV, PRAX_PV_DNY, PRAX_PV_DAT, ZIVVYR, ZIVVYR_DAT, PED_ZARAZENI, PED_ZPUSOBILOST, OLDTABULKA, VOLIT1, VOLIT2, VP_SJ, VP_PL, ROZPETI_BLN, CHRAN_TARIFKC, CHRAN_OSOBA, PRAX_VYKAZ}
            rowPERSRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowPERSRow)
            Return rowPERSRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function FindByID(ByVal ID As Integer) As PERSRow
            Return CType(Me.Rows.Find(New Object() {ID}),PERSRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As PERSDataTable = CType(MyBase.Clone,PERSDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New PERSDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnID = MyBase.Columns("ID")
            Me.columnJMENO = MyBase.Columns("JMENO")
            Me.columnTITUL = MyBase.Columns("TITUL")
            Me.columnEV_CISLO = MyBase.Columns("EV_CISLO")
            Me.columnPROV_CISLO = MyBase.Columns("PROV_CISLO")
            Me.columnROD_CISLO = MyBase.Columns("ROD_CISLO")
            Me.columnPPV = MyBase.Columns("PPV")
            Me.columnBYD_PSC = MyBase.Columns("BYD_PSC")
            Me.columnBYD_MISTO = MyBase.Columns("BYD_MISTO")
            Me.columnROZPETI = MyBase.Columns("ROZPETI")
            Me.columnVZD_DOSA = MyBase.Columns("VZD_DOSA")
            Me.columnVZD_POZA = MyBase.Columns("VZD_POZA")
            Me.columnVZD_POZ_DA = MyBase.Columns("VZD_POZ_DA")
            Me.columnTYP_POZ = MyBase.Columns("TYP_POZ")
            Me.columnODPOCET = MyBase.Columns("ODPOCET")
            Me.columnNEMINUS = MyBase.Columns("NEMINUS")
            Me.columnPRV_ZAR = MyBase.Columns("PRV_ZAR")
            Me.columnPRAX = MyBase.Columns("PRAX")
            Me.columnPRAX_DNY = MyBase.Columns("PRAX_DNY")
            Me.columnSTUPEN = MyBase.Columns("STUPEN")
            Me.columnTRIDA = MyBase.Columns("TRIDA")
            Me.columnTARIFKC = MyBase.Columns("TARIFKC")
            Me.columnTARIFZVYSPROC = MyBase.Columns("TARIFZVYSPROC")
            Me.columnOSPRIPKC = MyBase.Columns("OSPRIPKC")
            Me.columnVEDENI = MyBase.Columns("VEDENI")
            Me.columnZTIZENE = MyBase.Columns("ZTIZENE")
            Me.columnSMENNOST = MyBase.Columns("SMENNOST")
            Me.columnZVLASTNI = MyBase.Columns("ZVLASTNI")
            Me.columnOD = MyBase.Columns("OD")
            Me.columnDATUMOD = MyBase.Columns("DATUMOD")
            Me.columnDAT_NOV_TR = MyBase.Columns("DAT_NOV_TR")
            Me.columnDAT_NOV_TR_TXT = MyBase.Columns("DAT_NOV_TR_TXT")
            Me.columnD_NASTUPU = MyBase.Columns("D_NASTUPU")
            Me.columnD_VYSTUPU = MyBase.Columns("D_VYSTUPU")
            Me.columnUSEK = MyBase.Columns("USEK")
            Me.columnTISK = MyBase.Columns("TISK")
            Me.columnNEURCI = MyBase.Columns("NEURCI")
            Me.columnURCI_DO = MyBase.Columns("URCI_DO")
            Me.columnZKUDOBA = MyBase.Columns("ZKUDOBA")
            Me.columnZKUD_DO = MyBase.Columns("ZKUD_DO")
            Me.columnDALUJ = MyBase.Columns("DALUJ")
            Me.columnROD_PRIJ = MyBase.Columns("ROD_PRIJ")
            Me.columnMIST_NAR = MyBase.Columns("MIST_NAR")
            Me.columnZDR_POJ = MyBase.Columns("ZDR_POJ")
            Me.columnDUCHOD = MyBase.Columns("DUCHOD")
            Me.columnCESTY = MyBase.Columns("CESTY")
            Me.columnPED = MyBase.Columns("PED")
            Me.columnPREP = MyBase.Columns("PREP")
            Me.columnZPUS = MyBase.Columns("ZPUS")
            Me.columnZPUS_DAT = MyBase.Columns("ZPUS_DAT")
            Me.columnDALUJ_TEXT = MyBase.Columns("DALUJ_TEXT")
            Me.columnCELEJMENO = MyBase.Columns("CELEJMENO")
            Me.columnPPV_SOUB = MyBase.Columns("PPV_SOUB")
            Me.columnZPS = MyBase.Columns("ZPS")
            Me.columnPOZNAMKA = MyBase.Columns("POZNAMKA")
            Me.columnPRIPVED = MyBase.Columns("PRIPVED")
            Me.columnPRACOV = MyBase.Columns("PRACOV")
            Me.columnFUNKCE = MyBase.Columns("FUNKCE")
            Me.columnPLATCELK = MyBase.Columns("PLATCELK")
            Me.columnVOLIT4 = MyBase.Columns("VOLIT4")
            Me.columnVOLIT5 = MyBase.Columns("VOLIT5")
            Me.columnVOLIT6 = MyBase.Columns("VOLIT6")
            Me.columnZP25X = MyBase.Columns("ZP25X")
            Me.columnNOVATRIDA = MyBase.Columns("NOVATRIDA")
            Me.columnZP25X_ZNAK = MyBase.Columns("ZP25X_ZNAK")
            Me.columnDAT_NAROZ = MyBase.Columns("DAT_NAROZ")
            Me.columnSPECPRIPPED = MyBase.Columns("SPECPRIPPED")
            Me.columnZJED = MyBase.Columns("ZJED")
            Me.columnZJEDROKY = MyBase.Columns("ZJEDROKY")
            Me.columnZJEDDNY = MyBase.Columns("ZJEDDNY")
            Me.columnZJEDDAT = MyBase.Columns("ZJEDDAT")
            Me.columnTABULKA = MyBase.Columns("TABULKA")
            Me.columnLH_ZDRAV = MyBase.Columns("LH_ZDRAV")
            Me.columnLH_BOZP = MyBase.Columns("LH_BOZP")
            Me.columnLH_SIPVZ = MyBase.Columns("LH_SIPVZ")
            Me.columnLH_SKOL = MyBase.Columns("LH_SKOL")
            Me.columnPRIJMENI = MyBase.Columns("PRIJMENI")
            Me.columnDRUH_PRACDOB = MyBase.Columns("DRUH_PRACDOB")
            Me.columnDRUH_PRACREZ = MyBase.Columns("DRUH_PRACREZ")
            Me.columnDAT_KONEC_PP = MyBase.Columns("DAT_KONEC_PP")
            Me.columnDAT_UZAV_PS = MyBase.Columns("DAT_UZAV_PS")
            Me.columnERR = MyBase.Columns("ERR")
            Me.columnZVLZDRAV = MyBase.Columns("ZVLZDRAV")
            Me.columnVOLIT3 = MyBase.Columns("VOLIT3")
            Me.columnLH_MDRD = MyBase.Columns("LH_MDRD")
            Me.columnBYD_ULICE = MyBase.Columns("BYD_ULICE")
            Me.columnPRAX_PV = MyBase.Columns("PRAX_PV")
            Me.columnPRAX_PV_DNY = MyBase.Columns("PRAX_PV_DNY")
            Me.columnPRAX_PV_DAT = MyBase.Columns("PRAX_PV_DAT")
            Me.columnZIVVYR = MyBase.Columns("ZIVVYR")
            Me.columnZIVVYR_DAT = MyBase.Columns("ZIVVYR_DAT")
            Me.columnPED_ZARAZENI = MyBase.Columns("PED_ZARAZENI")
            Me.columnPED_ZPUSOBILOST = MyBase.Columns("PED_ZPUSOBILOST")
            Me.columnOLDTABULKA = MyBase.Columns("OLDTABULKA")
            Me.columnVOLIT1 = MyBase.Columns("VOLIT1")
            Me.columnVOLIT2 = MyBase.Columns("VOLIT2")
            Me.columnVP_SJ = MyBase.Columns("VP_SJ")
            Me.columnVP_PL = MyBase.Columns("VP_PL")
            Me.columnROZPETI_BLN = MyBase.Columns("ROZPETI_BLN")
            Me.columnCHRAN_TARIFKC = MyBase.Columns("CHRAN_TARIFKC")
            Me.columnCHRAN_OSOBA = MyBase.Columns("CHRAN_OSOBA")
            Me.columnPRAX_VYKAZ = MyBase.Columns("PRAX_VYKAZ")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnID = New Global.System.Data.DataColumn("ID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnID)
            Me.columnJMENO = New Global.System.Data.DataColumn("JMENO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnJMENO)
            Me.columnTITUL = New Global.System.Data.DataColumn("TITUL", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTITUL)
            Me.columnEV_CISLO = New Global.System.Data.DataColumn("EV_CISLO", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEV_CISLO)
            Me.columnPROV_CISLO = New Global.System.Data.DataColumn("PROV_CISLO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPROV_CISLO)
            Me.columnROD_CISLO = New Global.System.Data.DataColumn("ROD_CISLO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnROD_CISLO)
            Me.columnPPV = New Global.System.Data.DataColumn("PPV", GetType(Byte), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPPV)
            Me.columnBYD_PSC = New Global.System.Data.DataColumn("BYD_PSC", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBYD_PSC)
            Me.columnBYD_MISTO = New Global.System.Data.DataColumn("BYD_MISTO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBYD_MISTO)
            Me.columnROZPETI = New Global.System.Data.DataColumn("ROZPETI", GetType(Byte), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnROZPETI)
            Me.columnVZD_DOSA = New Global.System.Data.DataColumn("VZD_DOSA", GetType(Byte), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnVZD_DOSA)
            Me.columnVZD_POZA = New Global.System.Data.DataColumn("VZD_POZA", GetType(Byte), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnVZD_POZA)
            Me.columnVZD_POZ_DA = New Global.System.Data.DataColumn("VZD_POZ_DA", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnVZD_POZ_DA)
            Me.columnTYP_POZ = New Global.System.Data.DataColumn("TYP_POZ", GetType(Byte), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTYP_POZ)
            Me.columnODPOCET = New Global.System.Data.DataColumn("ODPOCET", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnODPOCET)
            Me.columnNEMINUS = New Global.System.Data.DataColumn("NEMINUS", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNEMINUS)
            Me.columnPRV_ZAR = New Global.System.Data.DataColumn("PRV_ZAR", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPRV_ZAR)
            Me.columnPRAX = New Global.System.Data.DataColumn("PRAX", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPRAX)
            Me.columnPRAX_DNY = New Global.System.Data.DataColumn("PRAX_DNY", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPRAX_DNY)
            Me.columnSTUPEN = New Global.System.Data.DataColumn("STUPEN", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSTUPEN)
            Me.columnTRIDA = New Global.System.Data.DataColumn("TRIDA", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTRIDA)
            Me.columnTARIFKC = New Global.System.Data.DataColumn("TARIFKC", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTARIFKC)
            Me.columnTARIFZVYSPROC = New Global.System.Data.DataColumn("TARIFZVYSPROC", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTARIFZVYSPROC)
            Me.columnOSPRIPKC = New Global.System.Data.DataColumn("OSPRIPKC", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOSPRIPKC)
            Me.columnVEDENI = New Global.System.Data.DataColumn("VEDENI", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnVEDENI)
            Me.columnZTIZENE = New Global.System.Data.DataColumn("ZTIZENE", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnZTIZENE)
            Me.columnSMENNOST = New Global.System.Data.DataColumn("SMENNOST", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSMENNOST)
            Me.columnZVLASTNI = New Global.System.Data.DataColumn("ZVLASTNI", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnZVLASTNI)
            Me.columnOD = New Global.System.Data.DataColumn("OD", GetType(Byte), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOD)
            Me.columnDATUMOD = New Global.System.Data.DataColumn("DATUMOD", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDATUMOD)
            Me.columnDAT_NOV_TR = New Global.System.Data.DataColumn("DAT_NOV_TR", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDAT_NOV_TR)
            Me.columnDAT_NOV_TR_TXT = New Global.System.Data.DataColumn("DAT_NOV_TR_TXT", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDAT_NOV_TR_TXT)
            Me.columnD_NASTUPU = New Global.System.Data.DataColumn("D_NASTUPU", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnD_NASTUPU)
            Me.columnD_VYSTUPU = New Global.System.Data.DataColumn("D_VYSTUPU", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnD_VYSTUPU)
            Me.columnUSEK = New Global.System.Data.DataColumn("USEK", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUSEK)
            Me.columnTISK = New Global.System.Data.DataColumn("TISK", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTISK)
            Me.columnNEURCI = New Global.System.Data.DataColumn("NEURCI", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNEURCI)
            Me.columnURCI_DO = New Global.System.Data.DataColumn("URCI_DO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnURCI_DO)
            Me.columnZKUDOBA = New Global.System.Data.DataColumn("ZKUDOBA", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnZKUDOBA)
            Me.columnZKUD_DO = New Global.System.Data.DataColumn("ZKUD_DO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnZKUD_DO)
            Me.columnDALUJ = New Global.System.Data.DataColumn("DALUJ", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDALUJ)
            Me.columnROD_PRIJ = New Global.System.Data.DataColumn("ROD_PRIJ", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnROD_PRIJ)
            Me.columnMIST_NAR = New Global.System.Data.DataColumn("MIST_NAR", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMIST_NAR)
            Me.columnZDR_POJ = New Global.System.Data.DataColumn("ZDR_POJ", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnZDR_POJ)
            Me.columnDUCHOD = New Global.System.Data.DataColumn("DUCHOD", GetType(Byte), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDUCHOD)
            Me.columnCESTY = New Global.System.Data.DataColumn("CESTY", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCESTY)
            Me.columnPED = New Global.System.Data.DataColumn("PED", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPED)
            Me.columnPREP = New Global.System.Data.DataColumn("PREP", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPREP)
            Me.columnZPUS = New Global.System.Data.DataColumn("ZPUS", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnZPUS)
            Me.columnZPUS_DAT = New Global.System.Data.DataColumn("ZPUS_DAT", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnZPUS_DAT)
            Me.columnDALUJ_TEXT = New Global.System.Data.DataColumn("DALUJ_TEXT", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDALUJ_TEXT)
            Me.columnCELEJMENO = New Global.System.Data.DataColumn("CELEJMENO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCELEJMENO)
            Me.columnPPV_SOUB = New Global.System.Data.DataColumn("PPV_SOUB", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPPV_SOUB)
            Me.columnZPS = New Global.System.Data.DataColumn("ZPS", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnZPS)
            Me.columnPOZNAMKA = New Global.System.Data.DataColumn("POZNAMKA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPOZNAMKA)
            Me.columnPRIPVED = New Global.System.Data.DataColumn("PRIPVED", GetType(Byte), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPRIPVED)
            Me.columnPRACOV = New Global.System.Data.DataColumn("PRACOV", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPRACOV)
            Me.columnFUNKCE = New Global.System.Data.DataColumn("FUNKCE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFUNKCE)
            Me.columnPLATCELK = New Global.System.Data.DataColumn("PLATCELK", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPLATCELK)
            Me.columnVOLIT4 = New Global.System.Data.DataColumn("VOLIT4", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnVOLIT4)
            Me.columnVOLIT5 = New Global.System.Data.DataColumn("VOLIT5", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnVOLIT5)
            Me.columnVOLIT6 = New Global.System.Data.DataColumn("VOLIT6", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnVOLIT6)
            Me.columnZP25X = New Global.System.Data.DataColumn("ZP25X", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnZP25X)
            Me.columnNOVATRIDA = New Global.System.Data.DataColumn("NOVATRIDA", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNOVATRIDA)
            Me.columnZP25X_ZNAK = New Global.System.Data.DataColumn("ZP25X_ZNAK", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnZP25X_ZNAK)
            Me.columnDAT_NAROZ = New Global.System.Data.DataColumn("DAT_NAROZ", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDAT_NAROZ)
            Me.columnSPECPRIPPED = New Global.System.Data.DataColumn("SPECPRIPPED", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSPECPRIPPED)
            Me.columnZJED = New Global.System.Data.DataColumn("ZJED", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnZJED)
            Me.columnZJEDROKY = New Global.System.Data.DataColumn("ZJEDROKY", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnZJEDROKY)
            Me.columnZJEDDNY = New Global.System.Data.DataColumn("ZJEDDNY", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnZJEDDNY)
            Me.columnZJEDDAT = New Global.System.Data.DataColumn("ZJEDDAT", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnZJEDDAT)
            Me.columnTABULKA = New Global.System.Data.DataColumn("TABULKA", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTABULKA)
            Me.columnLH_ZDRAV = New Global.System.Data.DataColumn("LH_ZDRAV", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLH_ZDRAV)
            Me.columnLH_BOZP = New Global.System.Data.DataColumn("LH_BOZP", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLH_BOZP)
            Me.columnLH_SIPVZ = New Global.System.Data.DataColumn("LH_SIPVZ", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLH_SIPVZ)
            Me.columnLH_SKOL = New Global.System.Data.DataColumn("LH_SKOL", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLH_SKOL)
            Me.columnPRIJMENI = New Global.System.Data.DataColumn("PRIJMENI", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPRIJMENI)
            Me.columnDRUH_PRACDOB = New Global.System.Data.DataColumn("DRUH_PRACDOB", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDRUH_PRACDOB)
            Me.columnDRUH_PRACREZ = New Global.System.Data.DataColumn("DRUH_PRACREZ", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDRUH_PRACREZ)
            Me.columnDAT_KONEC_PP = New Global.System.Data.DataColumn("DAT_KONEC_PP", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDAT_KONEC_PP)
            Me.columnDAT_UZAV_PS = New Global.System.Data.DataColumn("DAT_UZAV_PS", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDAT_UZAV_PS)
            Me.columnERR = New Global.System.Data.DataColumn("ERR", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnERR)
            Me.columnZVLZDRAV = New Global.System.Data.DataColumn("ZVLZDRAV", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnZVLZDRAV)
            Me.columnVOLIT3 = New Global.System.Data.DataColumn("VOLIT3", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnVOLIT3)
            Me.columnLH_MDRD = New Global.System.Data.DataColumn("LH_MDRD", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLH_MDRD)
            Me.columnBYD_ULICE = New Global.System.Data.DataColumn("BYD_ULICE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBYD_ULICE)
            Me.columnPRAX_PV = New Global.System.Data.DataColumn("PRAX_PV", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPRAX_PV)
            Me.columnPRAX_PV_DNY = New Global.System.Data.DataColumn("PRAX_PV_DNY", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPRAX_PV_DNY)
            Me.columnPRAX_PV_DAT = New Global.System.Data.DataColumn("PRAX_PV_DAT", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPRAX_PV_DAT)
            Me.columnZIVVYR = New Global.System.Data.DataColumn("ZIVVYR", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnZIVVYR)
            Me.columnZIVVYR_DAT = New Global.System.Data.DataColumn("ZIVVYR_DAT", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnZIVVYR_DAT)
            Me.columnPED_ZARAZENI = New Global.System.Data.DataColumn("PED_ZARAZENI", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPED_ZARAZENI)
            Me.columnPED_ZPUSOBILOST = New Global.System.Data.DataColumn("PED_ZPUSOBILOST", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPED_ZPUSOBILOST)
            Me.columnOLDTABULKA = New Global.System.Data.DataColumn("OLDTABULKA", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOLDTABULKA)
            Me.columnVOLIT1 = New Global.System.Data.DataColumn("VOLIT1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnVOLIT1)
            Me.columnVOLIT2 = New Global.System.Data.DataColumn("VOLIT2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnVOLIT2)
            Me.columnVP_SJ = New Global.System.Data.DataColumn("VP_SJ", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnVP_SJ)
            Me.columnVP_PL = New Global.System.Data.DataColumn("VP_PL", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnVP_PL)
            Me.columnROZPETI_BLN = New Global.System.Data.DataColumn("ROZPETI_BLN", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnROZPETI_BLN)
            Me.columnCHRAN_TARIFKC = New Global.System.Data.DataColumn("CHRAN_TARIFKC", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCHRAN_TARIFKC)
            Me.columnCHRAN_OSOBA = New Global.System.Data.DataColumn("CHRAN_OSOBA", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCHRAN_OSOBA)
            Me.columnPRAX_VYKAZ = New Global.System.Data.DataColumn("PRAX_VYKAZ", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPRAX_VYKAZ)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnID}, true))
            Me.columnID.AutoIncrement = true
            Me.columnID.AutoIncrementSeed = -1
            Me.columnID.AutoIncrementStep = -1
            Me.columnID.AllowDBNull = false
            Me.columnID.Unique = true
            Me.columnJMENO.MaxLength = 15
            Me.columnTITUL.MaxLength = 11
            Me.columnPROV_CISLO.MaxLength = 8
            Me.columnROD_CISLO.MaxLength = 11
            Me.columnBYD_PSC.MaxLength = 6
            Me.columnBYD_MISTO.MaxLength = 20
            Me.columnDAT_NOV_TR_TXT.MaxLength = 10
            Me.columnUSEK.MaxLength = 4
            Me.columnURCI_DO.MaxLength = 40
            Me.columnZKUD_DO.MaxLength = 15
            Me.columnROD_PRIJ.MaxLength = 20
            Me.columnMIST_NAR.MaxLength = 20
            Me.columnDALUJ_TEXT.MaxLength = 536870910
            Me.columnCELEJMENO.MaxLength = 50
            Me.columnPOZNAMKA.MaxLength = 536870910
            Me.columnPRACOV.MaxLength = 100
            Me.columnFUNKCE.MaxLength = 100
            Me.columnVOLIT4.MaxLength = 10
            Me.columnZP25X_ZNAK.MaxLength = 1
            Me.columnPRIJMENI.MaxLength = 30
            Me.columnERR.MaxLength = 5
            Me.columnVOLIT3.MaxLength = 20
            Me.columnBYD_ULICE.MaxLength = 30
            Me.columnPRAX_PV_DAT.MaxLength = 7
            Me.columnVOLIT1.MaxLength = 11
            Me.columnVOLIT2.MaxLength = 11
            Me.columnPRAX_VYKAZ.MaxLength = 7
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewPERSRow() As PERSRow
            Return CType(Me.NewRow,PERSRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New PERSRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(PERSRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.PERSRowChangedEvent) Is Nothing) Then
                RaiseEvent PERSRowChanged(Me, New PERSRowChangeEvent(CType(e.Row,PERSRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.PERSRowChangingEvent) Is Nothing) Then
                RaiseEvent PERSRowChanging(Me, New PERSRowChangeEvent(CType(e.Row,PERSRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.PERSRowDeletedEvent) Is Nothing) Then
                RaiseEvent PERSRowDeleted(Me, New PERSRowChangeEvent(CType(e.Row,PERSRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.PERSRowDeletingEvent) Is Nothing) Then
                RaiseEvent PERSRowDeleting(Me, New PERSRowChangeEvent(CType(e.Row,PERSRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemovePERSRow(ByVal row As PERSRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DS_pers = New DS_pers()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "PERSDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class PERSRow
        Inherits Global.System.Data.DataRow
        
        Private tablePERS As PERSDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tablePERS = CType(Me.Table,PERSDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ID() As Integer
            Get
                Return CType(Me(Me.tablePERS.IDColumn),Integer)
            End Get
            Set
                Me(Me.tablePERS.IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property JMENO() As String
            Get
                Try 
                    Return CType(Me(Me.tablePERS.JMENOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'JMENO' in table 'PERS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePERS.JMENOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TITUL() As String
            Get
                Try 
                    Return CType(Me(Me.tablePERS.TITULColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TITUL' in table 'PERS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePERS.TITULColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property EV_CISLO() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablePERS.EV_CISLOColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'EV_CISLO' in table 'PERS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePERS.EV_CISLOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PROV_CISLO() As String
            Get
                Try 
                    Return CType(Me(Me.tablePERS.PROV_CISLOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PROV_CISLO' in table 'PERS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePERS.PROV_CISLOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ROD_CISLO() As String
            Get
                Try 
                    Return CType(Me(Me.tablePERS.ROD_CISLOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ROD_CISLO' in table 'PERS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePERS.ROD_CISLOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PPV() As Byte
            Get
                Try 
                    Return CType(Me(Me.tablePERS.PPVColumn),Byte)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PPV' in table 'PERS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePERS.PPVColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property BYD_PSC() As String
            Get
                Try 
                    Return CType(Me(Me.tablePERS.BYD_PSCColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BYD_PSC' in table 'PERS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePERS.BYD_PSCColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property BYD_MISTO() As String
            Get
                Try 
                    Return CType(Me(Me.tablePERS.BYD_MISTOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BYD_MISTO' in table 'PERS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePERS.BYD_MISTOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ROZPETI() As Byte
            Get
                Try 
                    Return CType(Me(Me.tablePERS.ROZPETIColumn),Byte)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ROZPETI' in table 'PERS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePERS.ROZPETIColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property VZD_DOSA() As Byte
            Get
                Try 
                    Return CType(Me(Me.tablePERS.VZD_DOSAColumn),Byte)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'VZD_DOSA' in table 'PERS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePERS.VZD_DOSAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property VZD_POZA() As Byte
            Get
                Try 
                    Return CType(Me(Me.tablePERS.VZD_POZAColumn),Byte)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'VZD_POZA' in table 'PERS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePERS.VZD_POZAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property VZD_POZ_DA() As Date
            Get
                Try 
                    Return CType(Me(Me.tablePERS.VZD_POZ_DAColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'VZD_POZ_DA' in table 'PERS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePERS.VZD_POZ_DAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TYP_POZ() As Byte
            Get
                Try 
                    Return CType(Me(Me.tablePERS.TYP_POZColumn),Byte)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TYP_POZ' in table 'PERS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePERS.TYP_POZColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ODPOCET() As Double
            Get
                Try 
                    Return CType(Me(Me.tablePERS.ODPOCETColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ODPOCET' in table 'PERS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePERS.ODPOCETColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NEMINUS() As Double
            Get
                Try 
                    Return CType(Me(Me.tablePERS.NEMINUSColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NEMINUS' in table 'PERS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePERS.NEMINUSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PRV_ZAR() As Date
            Get
                Try 
                    Return CType(Me(Me.tablePERS.PRV_ZARColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PRV_ZAR' in table 'PERS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePERS.PRV_ZARColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PRAX() As Double
            Get
                Try 
                    Return CType(Me(Me.tablePERS.PRAXColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PRAX' in table 'PERS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePERS.PRAXColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PRAX_DNY() As Double
            Get
                Try 
                    Return CType(Me(Me.tablePERS.PRAX_DNYColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PRAX_DNY' in table 'PERS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePERS.PRAX_DNYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property STUPEN() As Short
            Get
                Try 
                    Return CType(Me(Me.tablePERS.STUPENColumn),Short)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'STUPEN' in table 'PERS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePERS.STUPENColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TRIDA() As Short
            Get
                Try 
                    Return CType(Me(Me.tablePERS.TRIDAColumn),Short)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TRIDA' in table 'PERS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePERS.TRIDAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TARIFKC() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablePERS.TARIFKCColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TARIFKC' in table 'PERS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePERS.TARIFKCColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TARIFZVYSPROC() As Single
            Get
                Try 
                    Return CType(Me(Me.tablePERS.TARIFZVYSPROCColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TARIFZVYSPROC' in table 'PERS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePERS.TARIFZVYSPROCColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property OSPRIPKC() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablePERS.OSPRIPKCColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'OSPRIPKC' in table 'PERS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePERS.OSPRIPKCColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property VEDENI() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablePERS.VEDENIColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'VEDENI' in table 'PERS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePERS.VEDENIColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ZTIZENE() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablePERS.ZTIZENEColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ZTIZENE' in table 'PERS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePERS.ZTIZENEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SMENNOST() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablePERS.SMENNOSTColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SMENNOST' in table 'PERS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePERS.SMENNOSTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ZVLASTNI() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablePERS.ZVLASTNIColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ZVLASTNI' in table 'PERS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePERS.ZVLASTNIColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property OD() As Byte
            Get
                Try 
                    Return CType(Me(Me.tablePERS.ODColumn),Byte)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'OD' in table 'PERS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePERS.ODColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DATUMOD() As Date
            Get
                Try 
                    Return CType(Me(Me.tablePERS.DATUMODColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DATUMOD' in table 'PERS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePERS.DATUMODColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DAT_NOV_TR() As Date
            Get
                Try 
                    Return CType(Me(Me.tablePERS.DAT_NOV_TRColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DAT_NOV_TR' in table 'PERS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePERS.DAT_NOV_TRColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DAT_NOV_TR_TXT() As String
            Get
                Try 
                    Return CType(Me(Me.tablePERS.DAT_NOV_TR_TXTColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DAT_NOV_TR_TXT' in table 'PERS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePERS.DAT_NOV_TR_TXTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property D_NASTUPU() As Date
            Get
                Try 
                    Return CType(Me(Me.tablePERS.D_NASTUPUColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'D_NASTUPU' in table 'PERS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePERS.D_NASTUPUColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property D_VYSTUPU() As Date
            Get
                Try 
                    Return CType(Me(Me.tablePERS.D_VYSTUPUColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'D_VYSTUPU' in table 'PERS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePERS.D_VYSTUPUColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property USEK() As String
            Get
                Try 
                    Return CType(Me(Me.tablePERS.USEKColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'USEK' in table 'PERS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePERS.USEKColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TISK() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tablePERS.TISKColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TISK' in table 'PERS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePERS.TISKColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NEURCI() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tablePERS.NEURCIColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NEURCI' in table 'PERS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePERS.NEURCIColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property URCI_DO() As String
            Get
                Try 
                    Return CType(Me(Me.tablePERS.URCI_DOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'URCI_DO' in table 'PERS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePERS.URCI_DOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ZKUDOBA() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tablePERS.ZKUDOBAColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ZKUDOBA' in table 'PERS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePERS.ZKUDOBAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ZKUD_DO() As String
            Get
                Try 
                    Return CType(Me(Me.tablePERS.ZKUD_DOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ZKUD_DO' in table 'PERS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePERS.ZKUD_DOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DALUJ() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tablePERS.DALUJColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DALUJ' in table 'PERS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePERS.DALUJColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ROD_PRIJ() As String
            Get
                Try 
                    Return CType(Me(Me.tablePERS.ROD_PRIJColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ROD_PRIJ' in table 'PERS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePERS.ROD_PRIJColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MIST_NAR() As String
            Get
                Try 
                    Return CType(Me(Me.tablePERS.MIST_NARColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MIST_NAR' in table 'PERS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePERS.MIST_NARColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ZDR_POJ() As Short
            Get
                Try 
                    Return CType(Me(Me.tablePERS.ZDR_POJColumn),Short)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ZDR_POJ' in table 'PERS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePERS.ZDR_POJColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DUCHOD() As Byte
            Get
                Try 
                    Return CType(Me(Me.tablePERS.DUCHODColumn),Byte)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DUCHOD' in table 'PERS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePERS.DUCHODColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CESTY() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tablePERS.CESTYColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CESTY' in table 'PERS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePERS.CESTYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PED() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tablePERS.PEDColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PED' in table 'PERS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePERS.PEDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PREP() As Double
            Get
                Try 
                    Return CType(Me(Me.tablePERS.PREPColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PREP' in table 'PERS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePERS.PREPColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ZPUS() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tablePERS.ZPUSColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ZPUS' in table 'PERS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePERS.ZPUSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ZPUS_DAT() As Date
            Get
                Try 
                    Return CType(Me(Me.tablePERS.ZPUS_DATColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ZPUS_DAT' in table 'PERS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePERS.ZPUS_DATColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DALUJ_TEXT() As String
            Get
                Try 
                    Return CType(Me(Me.tablePERS.DALUJ_TEXTColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DALUJ_TEXT' in table 'PERS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePERS.DALUJ_TEXTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CELEJMENO() As String
            Get
                Try 
                    Return CType(Me(Me.tablePERS.CELEJMENOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CELEJMENO' in table 'PERS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePERS.CELEJMENOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PPV_SOUB() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tablePERS.PPV_SOUBColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PPV_SOUB' in table 'PERS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePERS.PPV_SOUBColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ZPS() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tablePERS.ZPSColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ZPS' in table 'PERS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePERS.ZPSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property POZNAMKA() As String
            Get
                Try 
                    Return CType(Me(Me.tablePERS.POZNAMKAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'POZNAMKA' in table 'PERS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePERS.POZNAMKAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PRIPVED() As Byte
            Get
                Try 
                    Return CType(Me(Me.tablePERS.PRIPVEDColumn),Byte)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PRIPVED' in table 'PERS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePERS.PRIPVEDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PRACOV() As String
            Get
                Try 
                    Return CType(Me(Me.tablePERS.PRACOVColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PRACOV' in table 'PERS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePERS.PRACOVColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FUNKCE() As String
            Get
                Try 
                    Return CType(Me(Me.tablePERS.FUNKCEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FUNKCE' in table 'PERS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePERS.FUNKCEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PLATCELK() As Double
            Get
                Try 
                    Return CType(Me(Me.tablePERS.PLATCELKColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PLATCELK' in table 'PERS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePERS.PLATCELKColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property VOLIT4() As String
            Get
                Try 
                    Return CType(Me(Me.tablePERS.VOLIT4Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'VOLIT4' in table 'PERS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePERS.VOLIT4Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property VOLIT5() As Double
            Get
                Try 
                    Return CType(Me(Me.tablePERS.VOLIT5Column),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'VOLIT5' in table 'PERS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePERS.VOLIT5Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property VOLIT6() As Double
            Get
                Try 
                    Return CType(Me(Me.tablePERS.VOLIT6Column),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'VOLIT6' in table 'PERS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePERS.VOLIT6Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ZP25X() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tablePERS.ZP25XColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ZP25X' in table 'PERS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePERS.ZP25XColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NOVATRIDA() As Short
            Get
                Try 
                    Return CType(Me(Me.tablePERS.NOVATRIDAColumn),Short)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NOVATRIDA' in table 'PERS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePERS.NOVATRIDAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ZP25X_ZNAK() As String
            Get
                Try 
                    Return CType(Me(Me.tablePERS.ZP25X_ZNAKColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ZP25X_ZNAK' in table 'PERS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePERS.ZP25X_ZNAKColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DAT_NAROZ() As Date
            Get
                Try 
                    Return CType(Me(Me.tablePERS.DAT_NAROZColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DAT_NAROZ' in table 'PERS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePERS.DAT_NAROZColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SPECPRIPPED() As Short
            Get
                Try 
                    Return CType(Me(Me.tablePERS.SPECPRIPPEDColumn),Short)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SPECPRIPPED' in table 'PERS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePERS.SPECPRIPPEDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ZJED() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tablePERS.ZJEDColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ZJED' in table 'PERS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePERS.ZJEDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ZJEDROKY() As Short
            Get
                Try 
                    Return CType(Me(Me.tablePERS.ZJEDROKYColumn),Short)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ZJEDROKY' in table 'PERS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePERS.ZJEDROKYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ZJEDDNY() As Short
            Get
                Try 
                    Return CType(Me(Me.tablePERS.ZJEDDNYColumn),Short)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ZJEDDNY' in table 'PERS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePERS.ZJEDDNYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ZJEDDAT() As Date
            Get
                Try 
                    Return CType(Me(Me.tablePERS.ZJEDDATColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ZJEDDAT' in table 'PERS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePERS.ZJEDDATColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TABULKA() As Short
            Get
                Try 
                    Return CType(Me(Me.tablePERS.TABULKAColumn),Short)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TABULKA' in table 'PERS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePERS.TABULKAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property LH_ZDRAV() As Date
            Get
                Try 
                    Return CType(Me(Me.tablePERS.LH_ZDRAVColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'LH_ZDRAV' in table 'PERS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePERS.LH_ZDRAVColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property LH_BOZP() As Date
            Get
                Try 
                    Return CType(Me(Me.tablePERS.LH_BOZPColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'LH_BOZP' in table 'PERS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePERS.LH_BOZPColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property LH_SIPVZ() As Date
            Get
                Try 
                    Return CType(Me(Me.tablePERS.LH_SIPVZColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'LH_SIPVZ' in table 'PERS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePERS.LH_SIPVZColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property LH_SKOL() As Date
            Get
                Try 
                    Return CType(Me(Me.tablePERS.LH_SKOLColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'LH_SKOL' in table 'PERS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePERS.LH_SKOLColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PRIJMENI() As String
            Get
                Try 
                    Return CType(Me(Me.tablePERS.PRIJMENIColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PRIJMENI' in table 'PERS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePERS.PRIJMENIColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DRUH_PRACDOB() As Short
            Get
                Try 
                    Return CType(Me(Me.tablePERS.DRUH_PRACDOBColumn),Short)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DRUH_PRACDOB' in table 'PERS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePERS.DRUH_PRACDOBColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DRUH_PRACREZ() As Short
            Get
                Try 
                    Return CType(Me(Me.tablePERS.DRUH_PRACREZColumn),Short)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DRUH_PRACREZ' in table 'PERS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePERS.DRUH_PRACREZColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DAT_KONEC_PP() As Date
            Get
                Try 
                    Return CType(Me(Me.tablePERS.DAT_KONEC_PPColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DAT_KONEC_PP' in table 'PERS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePERS.DAT_KONEC_PPColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DAT_UZAV_PS() As Date
            Get
                Try 
                    Return CType(Me(Me.tablePERS.DAT_UZAV_PSColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DAT_UZAV_PS' in table 'PERS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePERS.DAT_UZAV_PSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ERR() As String
            Get
                Try 
                    Return CType(Me(Me.tablePERS.ERRColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ERR' in table 'PERS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePERS.ERRColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ZVLZDRAV() As Short
            Get
                Try 
                    Return CType(Me(Me.tablePERS.ZVLZDRAVColumn),Short)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ZVLZDRAV' in table 'PERS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePERS.ZVLZDRAVColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property VOLIT3() As String
            Get
                Try 
                    Return CType(Me(Me.tablePERS.VOLIT3Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'VOLIT3' in table 'PERS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePERS.VOLIT3Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property LH_MDRD() As Date
            Get
                Try 
                    Return CType(Me(Me.tablePERS.LH_MDRDColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'LH_MDRD' in table 'PERS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePERS.LH_MDRDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property BYD_ULICE() As String
            Get
                Try 
                    Return CType(Me(Me.tablePERS.BYD_ULICEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BYD_ULICE' in table 'PERS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePERS.BYD_ULICEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PRAX_PV() As Double
            Get
                Try 
                    Return CType(Me(Me.tablePERS.PRAX_PVColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PRAX_PV' in table 'PERS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePERS.PRAX_PVColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PRAX_PV_DNY() As Double
            Get
                Try 
                    Return CType(Me(Me.tablePERS.PRAX_PV_DNYColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PRAX_PV_DNY' in table 'PERS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePERS.PRAX_PV_DNYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PRAX_PV_DAT() As String
            Get
                Try 
                    Return CType(Me(Me.tablePERS.PRAX_PV_DATColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PRAX_PV_DAT' in table 'PERS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePERS.PRAX_PV_DATColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ZIVVYR() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablePERS.ZIVVYRColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ZIVVYR' in table 'PERS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePERS.ZIVVYRColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ZIVVYR_DAT() As Date
            Get
                Try 
                    Return CType(Me(Me.tablePERS.ZIVVYR_DATColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ZIVVYR_DAT' in table 'PERS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePERS.ZIVVYR_DATColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PED_ZARAZENI() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tablePERS.PED_ZARAZENIColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PED_ZARAZENI' in table 'PERS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePERS.PED_ZARAZENIColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PED_ZPUSOBILOST() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tablePERS.PED_ZPUSOBILOSTColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PED_ZPUSOBILOST' in table 'PERS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePERS.PED_ZPUSOBILOSTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property OLDTABULKA() As Short
            Get
                Try 
                    Return CType(Me(Me.tablePERS.OLDTABULKAColumn),Short)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'OLDTABULKA' in table 'PERS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePERS.OLDTABULKAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property VOLIT1() As String
            Get
                Try 
                    Return CType(Me(Me.tablePERS.VOLIT1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'VOLIT1' in table 'PERS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePERS.VOLIT1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property VOLIT2() As String
            Get
                Try 
                    Return CType(Me(Me.tablePERS.VOLIT2Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'VOLIT2' in table 'PERS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePERS.VOLIT2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property VP_SJ() As Single
            Get
                Try 
                    Return CType(Me(Me.tablePERS.VP_SJColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'VP_SJ' in table 'PERS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePERS.VP_SJColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property VP_PL() As Single
            Get
                Try 
                    Return CType(Me(Me.tablePERS.VP_PLColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'VP_PL' in table 'PERS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePERS.VP_PLColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ROZPETI_BLN() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tablePERS.ROZPETI_BLNColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ROZPETI_BLN' in table 'PERS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePERS.ROZPETI_BLNColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CHRAN_TARIFKC() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablePERS.CHRAN_TARIFKCColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CHRAN_TARIFKC' in table 'PERS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePERS.CHRAN_TARIFKCColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CHRAN_OSOBA() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tablePERS.CHRAN_OSOBAColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CHRAN_OSOBA' in table 'PERS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePERS.CHRAN_OSOBAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PRAX_VYKAZ() As String
            Get
                Try 
                    Return CType(Me(Me.tablePERS.PRAX_VYKAZColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PRAX_VYKAZ' in table 'PERS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePERS.PRAX_VYKAZColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsJMENONull() As Boolean
            Return Me.IsNull(Me.tablePERS.JMENOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetJMENONull()
            Me(Me.tablePERS.JMENOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTITULNull() As Boolean
            Return Me.IsNull(Me.tablePERS.TITULColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTITULNull()
            Me(Me.tablePERS.TITULColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsEV_CISLONull() As Boolean
            Return Me.IsNull(Me.tablePERS.EV_CISLOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetEV_CISLONull()
            Me(Me.tablePERS.EV_CISLOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPROV_CISLONull() As Boolean
            Return Me.IsNull(Me.tablePERS.PROV_CISLOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPROV_CISLONull()
            Me(Me.tablePERS.PROV_CISLOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsROD_CISLONull() As Boolean
            Return Me.IsNull(Me.tablePERS.ROD_CISLOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetROD_CISLONull()
            Me(Me.tablePERS.ROD_CISLOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPPVNull() As Boolean
            Return Me.IsNull(Me.tablePERS.PPVColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPPVNull()
            Me(Me.tablePERS.PPVColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsBYD_PSCNull() As Boolean
            Return Me.IsNull(Me.tablePERS.BYD_PSCColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetBYD_PSCNull()
            Me(Me.tablePERS.BYD_PSCColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsBYD_MISTONull() As Boolean
            Return Me.IsNull(Me.tablePERS.BYD_MISTOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetBYD_MISTONull()
            Me(Me.tablePERS.BYD_MISTOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsROZPETINull() As Boolean
            Return Me.IsNull(Me.tablePERS.ROZPETIColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetROZPETINull()
            Me(Me.tablePERS.ROZPETIColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsVZD_DOSANull() As Boolean
            Return Me.IsNull(Me.tablePERS.VZD_DOSAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetVZD_DOSANull()
            Me(Me.tablePERS.VZD_DOSAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsVZD_POZANull() As Boolean
            Return Me.IsNull(Me.tablePERS.VZD_POZAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetVZD_POZANull()
            Me(Me.tablePERS.VZD_POZAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsVZD_POZ_DANull() As Boolean
            Return Me.IsNull(Me.tablePERS.VZD_POZ_DAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetVZD_POZ_DANull()
            Me(Me.tablePERS.VZD_POZ_DAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTYP_POZNull() As Boolean
            Return Me.IsNull(Me.tablePERS.TYP_POZColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTYP_POZNull()
            Me(Me.tablePERS.TYP_POZColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsODPOCETNull() As Boolean
            Return Me.IsNull(Me.tablePERS.ODPOCETColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetODPOCETNull()
            Me(Me.tablePERS.ODPOCETColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNEMINUSNull() As Boolean
            Return Me.IsNull(Me.tablePERS.NEMINUSColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNEMINUSNull()
            Me(Me.tablePERS.NEMINUSColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPRV_ZARNull() As Boolean
            Return Me.IsNull(Me.tablePERS.PRV_ZARColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPRV_ZARNull()
            Me(Me.tablePERS.PRV_ZARColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPRAXNull() As Boolean
            Return Me.IsNull(Me.tablePERS.PRAXColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPRAXNull()
            Me(Me.tablePERS.PRAXColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPRAX_DNYNull() As Boolean
            Return Me.IsNull(Me.tablePERS.PRAX_DNYColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPRAX_DNYNull()
            Me(Me.tablePERS.PRAX_DNYColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSTUPENNull() As Boolean
            Return Me.IsNull(Me.tablePERS.STUPENColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSTUPENNull()
            Me(Me.tablePERS.STUPENColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTRIDANull() As Boolean
            Return Me.IsNull(Me.tablePERS.TRIDAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTRIDANull()
            Me(Me.tablePERS.TRIDAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTARIFKCNull() As Boolean
            Return Me.IsNull(Me.tablePERS.TARIFKCColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTARIFKCNull()
            Me(Me.tablePERS.TARIFKCColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTARIFZVYSPROCNull() As Boolean
            Return Me.IsNull(Me.tablePERS.TARIFZVYSPROCColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTARIFZVYSPROCNull()
            Me(Me.tablePERS.TARIFZVYSPROCColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsOSPRIPKCNull() As Boolean
            Return Me.IsNull(Me.tablePERS.OSPRIPKCColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetOSPRIPKCNull()
            Me(Me.tablePERS.OSPRIPKCColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsVEDENINull() As Boolean
            Return Me.IsNull(Me.tablePERS.VEDENIColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetVEDENINull()
            Me(Me.tablePERS.VEDENIColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsZTIZENENull() As Boolean
            Return Me.IsNull(Me.tablePERS.ZTIZENEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetZTIZENENull()
            Me(Me.tablePERS.ZTIZENEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSMENNOSTNull() As Boolean
            Return Me.IsNull(Me.tablePERS.SMENNOSTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSMENNOSTNull()
            Me(Me.tablePERS.SMENNOSTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsZVLASTNINull() As Boolean
            Return Me.IsNull(Me.tablePERS.ZVLASTNIColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetZVLASTNINull()
            Me(Me.tablePERS.ZVLASTNIColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsODNull() As Boolean
            Return Me.IsNull(Me.tablePERS.ODColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetODNull()
            Me(Me.tablePERS.ODColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDATUMODNull() As Boolean
            Return Me.IsNull(Me.tablePERS.DATUMODColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDATUMODNull()
            Me(Me.tablePERS.DATUMODColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDAT_NOV_TRNull() As Boolean
            Return Me.IsNull(Me.tablePERS.DAT_NOV_TRColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDAT_NOV_TRNull()
            Me(Me.tablePERS.DAT_NOV_TRColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDAT_NOV_TR_TXTNull() As Boolean
            Return Me.IsNull(Me.tablePERS.DAT_NOV_TR_TXTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDAT_NOV_TR_TXTNull()
            Me(Me.tablePERS.DAT_NOV_TR_TXTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsD_NASTUPUNull() As Boolean
            Return Me.IsNull(Me.tablePERS.D_NASTUPUColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetD_NASTUPUNull()
            Me(Me.tablePERS.D_NASTUPUColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsD_VYSTUPUNull() As Boolean
            Return Me.IsNull(Me.tablePERS.D_VYSTUPUColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetD_VYSTUPUNull()
            Me(Me.tablePERS.D_VYSTUPUColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsUSEKNull() As Boolean
            Return Me.IsNull(Me.tablePERS.USEKColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetUSEKNull()
            Me(Me.tablePERS.USEKColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTISKNull() As Boolean
            Return Me.IsNull(Me.tablePERS.TISKColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTISKNull()
            Me(Me.tablePERS.TISKColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNEURCINull() As Boolean
            Return Me.IsNull(Me.tablePERS.NEURCIColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNEURCINull()
            Me(Me.tablePERS.NEURCIColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsURCI_DONull() As Boolean
            Return Me.IsNull(Me.tablePERS.URCI_DOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetURCI_DONull()
            Me(Me.tablePERS.URCI_DOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsZKUDOBANull() As Boolean
            Return Me.IsNull(Me.tablePERS.ZKUDOBAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetZKUDOBANull()
            Me(Me.tablePERS.ZKUDOBAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsZKUD_DONull() As Boolean
            Return Me.IsNull(Me.tablePERS.ZKUD_DOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetZKUD_DONull()
            Me(Me.tablePERS.ZKUD_DOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDALUJNull() As Boolean
            Return Me.IsNull(Me.tablePERS.DALUJColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDALUJNull()
            Me(Me.tablePERS.DALUJColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsROD_PRIJNull() As Boolean
            Return Me.IsNull(Me.tablePERS.ROD_PRIJColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetROD_PRIJNull()
            Me(Me.tablePERS.ROD_PRIJColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsMIST_NARNull() As Boolean
            Return Me.IsNull(Me.tablePERS.MIST_NARColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetMIST_NARNull()
            Me(Me.tablePERS.MIST_NARColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsZDR_POJNull() As Boolean
            Return Me.IsNull(Me.tablePERS.ZDR_POJColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetZDR_POJNull()
            Me(Me.tablePERS.ZDR_POJColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDUCHODNull() As Boolean
            Return Me.IsNull(Me.tablePERS.DUCHODColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDUCHODNull()
            Me(Me.tablePERS.DUCHODColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCESTYNull() As Boolean
            Return Me.IsNull(Me.tablePERS.CESTYColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCESTYNull()
            Me(Me.tablePERS.CESTYColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPEDNull() As Boolean
            Return Me.IsNull(Me.tablePERS.PEDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPEDNull()
            Me(Me.tablePERS.PEDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPREPNull() As Boolean
            Return Me.IsNull(Me.tablePERS.PREPColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPREPNull()
            Me(Me.tablePERS.PREPColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsZPUSNull() As Boolean
            Return Me.IsNull(Me.tablePERS.ZPUSColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetZPUSNull()
            Me(Me.tablePERS.ZPUSColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsZPUS_DATNull() As Boolean
            Return Me.IsNull(Me.tablePERS.ZPUS_DATColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetZPUS_DATNull()
            Me(Me.tablePERS.ZPUS_DATColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDALUJ_TEXTNull() As Boolean
            Return Me.IsNull(Me.tablePERS.DALUJ_TEXTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDALUJ_TEXTNull()
            Me(Me.tablePERS.DALUJ_TEXTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCELEJMENONull() As Boolean
            Return Me.IsNull(Me.tablePERS.CELEJMENOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCELEJMENONull()
            Me(Me.tablePERS.CELEJMENOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPPV_SOUBNull() As Boolean
            Return Me.IsNull(Me.tablePERS.PPV_SOUBColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPPV_SOUBNull()
            Me(Me.tablePERS.PPV_SOUBColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsZPSNull() As Boolean
            Return Me.IsNull(Me.tablePERS.ZPSColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetZPSNull()
            Me(Me.tablePERS.ZPSColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPOZNAMKANull() As Boolean
            Return Me.IsNull(Me.tablePERS.POZNAMKAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPOZNAMKANull()
            Me(Me.tablePERS.POZNAMKAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPRIPVEDNull() As Boolean
            Return Me.IsNull(Me.tablePERS.PRIPVEDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPRIPVEDNull()
            Me(Me.tablePERS.PRIPVEDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPRACOVNull() As Boolean
            Return Me.IsNull(Me.tablePERS.PRACOVColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPRACOVNull()
            Me(Me.tablePERS.PRACOVColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFUNKCENull() As Boolean
            Return Me.IsNull(Me.tablePERS.FUNKCEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFUNKCENull()
            Me(Me.tablePERS.FUNKCEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPLATCELKNull() As Boolean
            Return Me.IsNull(Me.tablePERS.PLATCELKColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPLATCELKNull()
            Me(Me.tablePERS.PLATCELKColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsVOLIT4Null() As Boolean
            Return Me.IsNull(Me.tablePERS.VOLIT4Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetVOLIT4Null()
            Me(Me.tablePERS.VOLIT4Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsVOLIT5Null() As Boolean
            Return Me.IsNull(Me.tablePERS.VOLIT5Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetVOLIT5Null()
            Me(Me.tablePERS.VOLIT5Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsVOLIT6Null() As Boolean
            Return Me.IsNull(Me.tablePERS.VOLIT6Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetVOLIT6Null()
            Me(Me.tablePERS.VOLIT6Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsZP25XNull() As Boolean
            Return Me.IsNull(Me.tablePERS.ZP25XColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetZP25XNull()
            Me(Me.tablePERS.ZP25XColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNOVATRIDANull() As Boolean
            Return Me.IsNull(Me.tablePERS.NOVATRIDAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNOVATRIDANull()
            Me(Me.tablePERS.NOVATRIDAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsZP25X_ZNAKNull() As Boolean
            Return Me.IsNull(Me.tablePERS.ZP25X_ZNAKColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetZP25X_ZNAKNull()
            Me(Me.tablePERS.ZP25X_ZNAKColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDAT_NAROZNull() As Boolean
            Return Me.IsNull(Me.tablePERS.DAT_NAROZColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDAT_NAROZNull()
            Me(Me.tablePERS.DAT_NAROZColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSPECPRIPPEDNull() As Boolean
            Return Me.IsNull(Me.tablePERS.SPECPRIPPEDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSPECPRIPPEDNull()
            Me(Me.tablePERS.SPECPRIPPEDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsZJEDNull() As Boolean
            Return Me.IsNull(Me.tablePERS.ZJEDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetZJEDNull()
            Me(Me.tablePERS.ZJEDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsZJEDROKYNull() As Boolean
            Return Me.IsNull(Me.tablePERS.ZJEDROKYColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetZJEDROKYNull()
            Me(Me.tablePERS.ZJEDROKYColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsZJEDDNYNull() As Boolean
            Return Me.IsNull(Me.tablePERS.ZJEDDNYColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetZJEDDNYNull()
            Me(Me.tablePERS.ZJEDDNYColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsZJEDDATNull() As Boolean
            Return Me.IsNull(Me.tablePERS.ZJEDDATColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetZJEDDATNull()
            Me(Me.tablePERS.ZJEDDATColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTABULKANull() As Boolean
            Return Me.IsNull(Me.tablePERS.TABULKAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTABULKANull()
            Me(Me.tablePERS.TABULKAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsLH_ZDRAVNull() As Boolean
            Return Me.IsNull(Me.tablePERS.LH_ZDRAVColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetLH_ZDRAVNull()
            Me(Me.tablePERS.LH_ZDRAVColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsLH_BOZPNull() As Boolean
            Return Me.IsNull(Me.tablePERS.LH_BOZPColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetLH_BOZPNull()
            Me(Me.tablePERS.LH_BOZPColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsLH_SIPVZNull() As Boolean
            Return Me.IsNull(Me.tablePERS.LH_SIPVZColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetLH_SIPVZNull()
            Me(Me.tablePERS.LH_SIPVZColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsLH_SKOLNull() As Boolean
            Return Me.IsNull(Me.tablePERS.LH_SKOLColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetLH_SKOLNull()
            Me(Me.tablePERS.LH_SKOLColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPRIJMENINull() As Boolean
            Return Me.IsNull(Me.tablePERS.PRIJMENIColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPRIJMENINull()
            Me(Me.tablePERS.PRIJMENIColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDRUH_PRACDOBNull() As Boolean
            Return Me.IsNull(Me.tablePERS.DRUH_PRACDOBColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDRUH_PRACDOBNull()
            Me(Me.tablePERS.DRUH_PRACDOBColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDRUH_PRACREZNull() As Boolean
            Return Me.IsNull(Me.tablePERS.DRUH_PRACREZColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDRUH_PRACREZNull()
            Me(Me.tablePERS.DRUH_PRACREZColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDAT_KONEC_PPNull() As Boolean
            Return Me.IsNull(Me.tablePERS.DAT_KONEC_PPColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDAT_KONEC_PPNull()
            Me(Me.tablePERS.DAT_KONEC_PPColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDAT_UZAV_PSNull() As Boolean
            Return Me.IsNull(Me.tablePERS.DAT_UZAV_PSColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDAT_UZAV_PSNull()
            Me(Me.tablePERS.DAT_UZAV_PSColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsERRNull() As Boolean
            Return Me.IsNull(Me.tablePERS.ERRColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetERRNull()
            Me(Me.tablePERS.ERRColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsZVLZDRAVNull() As Boolean
            Return Me.IsNull(Me.tablePERS.ZVLZDRAVColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetZVLZDRAVNull()
            Me(Me.tablePERS.ZVLZDRAVColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsVOLIT3Null() As Boolean
            Return Me.IsNull(Me.tablePERS.VOLIT3Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetVOLIT3Null()
            Me(Me.tablePERS.VOLIT3Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsLH_MDRDNull() As Boolean
            Return Me.IsNull(Me.tablePERS.LH_MDRDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetLH_MDRDNull()
            Me(Me.tablePERS.LH_MDRDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsBYD_ULICENull() As Boolean
            Return Me.IsNull(Me.tablePERS.BYD_ULICEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetBYD_ULICENull()
            Me(Me.tablePERS.BYD_ULICEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPRAX_PVNull() As Boolean
            Return Me.IsNull(Me.tablePERS.PRAX_PVColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPRAX_PVNull()
            Me(Me.tablePERS.PRAX_PVColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPRAX_PV_DNYNull() As Boolean
            Return Me.IsNull(Me.tablePERS.PRAX_PV_DNYColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPRAX_PV_DNYNull()
            Me(Me.tablePERS.PRAX_PV_DNYColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPRAX_PV_DATNull() As Boolean
            Return Me.IsNull(Me.tablePERS.PRAX_PV_DATColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPRAX_PV_DATNull()
            Me(Me.tablePERS.PRAX_PV_DATColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsZIVVYRNull() As Boolean
            Return Me.IsNull(Me.tablePERS.ZIVVYRColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetZIVVYRNull()
            Me(Me.tablePERS.ZIVVYRColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsZIVVYR_DATNull() As Boolean
            Return Me.IsNull(Me.tablePERS.ZIVVYR_DATColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetZIVVYR_DATNull()
            Me(Me.tablePERS.ZIVVYR_DATColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPED_ZARAZENINull() As Boolean
            Return Me.IsNull(Me.tablePERS.PED_ZARAZENIColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPED_ZARAZENINull()
            Me(Me.tablePERS.PED_ZARAZENIColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPED_ZPUSOBILOSTNull() As Boolean
            Return Me.IsNull(Me.tablePERS.PED_ZPUSOBILOSTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPED_ZPUSOBILOSTNull()
            Me(Me.tablePERS.PED_ZPUSOBILOSTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsOLDTABULKANull() As Boolean
            Return Me.IsNull(Me.tablePERS.OLDTABULKAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetOLDTABULKANull()
            Me(Me.tablePERS.OLDTABULKAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsVOLIT1Null() As Boolean
            Return Me.IsNull(Me.tablePERS.VOLIT1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetVOLIT1Null()
            Me(Me.tablePERS.VOLIT1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsVOLIT2Null() As Boolean
            Return Me.IsNull(Me.tablePERS.VOLIT2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetVOLIT2Null()
            Me(Me.tablePERS.VOLIT2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsVP_SJNull() As Boolean
            Return Me.IsNull(Me.tablePERS.VP_SJColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetVP_SJNull()
            Me(Me.tablePERS.VP_SJColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsVP_PLNull() As Boolean
            Return Me.IsNull(Me.tablePERS.VP_PLColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetVP_PLNull()
            Me(Me.tablePERS.VP_PLColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsROZPETI_BLNNull() As Boolean
            Return Me.IsNull(Me.tablePERS.ROZPETI_BLNColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetROZPETI_BLNNull()
            Me(Me.tablePERS.ROZPETI_BLNColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCHRAN_TARIFKCNull() As Boolean
            Return Me.IsNull(Me.tablePERS.CHRAN_TARIFKCColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCHRAN_TARIFKCNull()
            Me(Me.tablePERS.CHRAN_TARIFKCColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCHRAN_OSOBANull() As Boolean
            Return Me.IsNull(Me.tablePERS.CHRAN_OSOBAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCHRAN_OSOBANull()
            Me(Me.tablePERS.CHRAN_OSOBAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPRAX_VYKAZNull() As Boolean
            Return Me.IsNull(Me.tablePERS.PRAX_VYKAZColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPRAX_VYKAZNull()
            Me(Me.tablePERS.PRAX_VYKAZColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class PERSRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As PERSRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As PERSRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As PERSRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
End Class

Namespace DS_persTableAdapters
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class PERSTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.OleDb.OleDbDataAdapter
        
        Private _connection As Global.System.Data.OleDb.OleDbConnection
        
        Private _transaction As Global.System.Data.OleDb.OleDbTransaction
        
        Private _commandCollection() As Global.System.Data.OleDb.OleDbCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.OleDb.OleDbDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.OleDb.OleDbConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.OleDb.OleDbCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.OleDb.OleDbTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.OleDb.OleDbCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.OleDb.OleDbDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "PERS"
            tableMapping.ColumnMappings.Add("ID", "ID")
            tableMapping.ColumnMappings.Add("JMENO", "JMENO")
            tableMapping.ColumnMappings.Add("TITUL", "TITUL")
            tableMapping.ColumnMappings.Add("EV_CISLO", "EV_CISLO")
            tableMapping.ColumnMappings.Add("PROV_CISLO", "PROV_CISLO")
            tableMapping.ColumnMappings.Add("ROD_CISLO", "ROD_CISLO")
            tableMapping.ColumnMappings.Add("PPV", "PPV")
            tableMapping.ColumnMappings.Add("BYD_PSC", "BYD_PSC")
            tableMapping.ColumnMappings.Add("BYD_MISTO", "BYD_MISTO")
            tableMapping.ColumnMappings.Add("ROZPETI", "ROZPETI")
            tableMapping.ColumnMappings.Add("VZD_DOSA", "VZD_DOSA")
            tableMapping.ColumnMappings.Add("VZD_POZA", "VZD_POZA")
            tableMapping.ColumnMappings.Add("VZD_POZ_DA", "VZD_POZ_DA")
            tableMapping.ColumnMappings.Add("TYP_POZ", "TYP_POZ")
            tableMapping.ColumnMappings.Add("ODPOCET", "ODPOCET")
            tableMapping.ColumnMappings.Add("NEMINUS", "NEMINUS")
            tableMapping.ColumnMappings.Add("PRV_ZAR", "PRV_ZAR")
            tableMapping.ColumnMappings.Add("PRAX", "PRAX")
            tableMapping.ColumnMappings.Add("PRAX_DNY", "PRAX_DNY")
            tableMapping.ColumnMappings.Add("STUPEN", "STUPEN")
            tableMapping.ColumnMappings.Add("TRIDA", "TRIDA")
            tableMapping.ColumnMappings.Add("TARIFKC", "TARIFKC")
            tableMapping.ColumnMappings.Add("TARIFZVYSPROC", "TARIFZVYSPROC")
            tableMapping.ColumnMappings.Add("OSPRIPKC", "OSPRIPKC")
            tableMapping.ColumnMappings.Add("VEDENI", "VEDENI")
            tableMapping.ColumnMappings.Add("ZTIZENE", "ZTIZENE")
            tableMapping.ColumnMappings.Add("SMENNOST", "SMENNOST")
            tableMapping.ColumnMappings.Add("ZVLASTNI", "ZVLASTNI")
            tableMapping.ColumnMappings.Add("OD", "OD")
            tableMapping.ColumnMappings.Add("DATUMOD", "DATUMOD")
            tableMapping.ColumnMappings.Add("DAT_NOV_TR", "DAT_NOV_TR")
            tableMapping.ColumnMappings.Add("DAT_NOV_TR_TXT", "DAT_NOV_TR_TXT")
            tableMapping.ColumnMappings.Add("D_NASTUPU", "D_NASTUPU")
            tableMapping.ColumnMappings.Add("D_VYSTUPU", "D_VYSTUPU")
            tableMapping.ColumnMappings.Add("USEK", "USEK")
            tableMapping.ColumnMappings.Add("TISK", "TISK")
            tableMapping.ColumnMappings.Add("NEURCI", "NEURCI")
            tableMapping.ColumnMappings.Add("URCI_DO", "URCI_DO")
            tableMapping.ColumnMappings.Add("ZKUDOBA", "ZKUDOBA")
            tableMapping.ColumnMappings.Add("ZKUD_DO", "ZKUD_DO")
            tableMapping.ColumnMappings.Add("DALUJ", "DALUJ")
            tableMapping.ColumnMappings.Add("ROD_PRIJ", "ROD_PRIJ")
            tableMapping.ColumnMappings.Add("MIST_NAR", "MIST_NAR")
            tableMapping.ColumnMappings.Add("ZDR_POJ", "ZDR_POJ")
            tableMapping.ColumnMappings.Add("DUCHOD", "DUCHOD")
            tableMapping.ColumnMappings.Add("CESTY", "CESTY")
            tableMapping.ColumnMappings.Add("PED", "PED")
            tableMapping.ColumnMappings.Add("PREP", "PREP")
            tableMapping.ColumnMappings.Add("ZPUS", "ZPUS")
            tableMapping.ColumnMappings.Add("ZPUS_DAT", "ZPUS_DAT")
            tableMapping.ColumnMappings.Add("DALUJ_TEXT", "DALUJ_TEXT")
            tableMapping.ColumnMappings.Add("CELEJMENO", "CELEJMENO")
            tableMapping.ColumnMappings.Add("PPV_SOUB", "PPV_SOUB")
            tableMapping.ColumnMappings.Add("ZPS", "ZPS")
            tableMapping.ColumnMappings.Add("POZNAMKA", "POZNAMKA")
            tableMapping.ColumnMappings.Add("PRIPVED", "PRIPVED")
            tableMapping.ColumnMappings.Add("PRACOV", "PRACOV")
            tableMapping.ColumnMappings.Add("FUNKCE", "FUNKCE")
            tableMapping.ColumnMappings.Add("PLATCELK", "PLATCELK")
            tableMapping.ColumnMappings.Add("VOLIT4", "VOLIT4")
            tableMapping.ColumnMappings.Add("VOLIT5", "VOLIT5")
            tableMapping.ColumnMappings.Add("VOLIT6", "VOLIT6")
            tableMapping.ColumnMappings.Add("ZP25X", "ZP25X")
            tableMapping.ColumnMappings.Add("NOVATRIDA", "NOVATRIDA")
            tableMapping.ColumnMappings.Add("ZP25X_ZNAK", "ZP25X_ZNAK")
            tableMapping.ColumnMappings.Add("DAT_NAROZ", "DAT_NAROZ")
            tableMapping.ColumnMappings.Add("SPECPRIPPED", "SPECPRIPPED")
            tableMapping.ColumnMappings.Add("ZJED", "ZJED")
            tableMapping.ColumnMappings.Add("ZJEDROKY", "ZJEDROKY")
            tableMapping.ColumnMappings.Add("ZJEDDNY", "ZJEDDNY")
            tableMapping.ColumnMappings.Add("ZJEDDAT", "ZJEDDAT")
            tableMapping.ColumnMappings.Add("TABULKA", "TABULKA")
            tableMapping.ColumnMappings.Add("LH_ZDRAV", "LH_ZDRAV")
            tableMapping.ColumnMappings.Add("LH_BOZP", "LH_BOZP")
            tableMapping.ColumnMappings.Add("LH_SIPVZ", "LH_SIPVZ")
            tableMapping.ColumnMappings.Add("LH_SKOL", "LH_SKOL")
            tableMapping.ColumnMappings.Add("PRIJMENI", "PRIJMENI")
            tableMapping.ColumnMappings.Add("DRUH_PRACDOB", "DRUH_PRACDOB")
            tableMapping.ColumnMappings.Add("DRUH_PRACREZ", "DRUH_PRACREZ")
            tableMapping.ColumnMappings.Add("DAT_KONEC_PP", "DAT_KONEC_PP")
            tableMapping.ColumnMappings.Add("DAT_UZAV_PS", "DAT_UZAV_PS")
            tableMapping.ColumnMappings.Add("ERR", "ERR")
            tableMapping.ColumnMappings.Add("ZVLZDRAV", "ZVLZDRAV")
            tableMapping.ColumnMappings.Add("VOLIT3", "VOLIT3")
            tableMapping.ColumnMappings.Add("LH_MDRD", "LH_MDRD")
            tableMapping.ColumnMappings.Add("BYD_ULICE", "BYD_ULICE")
            tableMapping.ColumnMappings.Add("PRAX_PV", "PRAX_PV")
            tableMapping.ColumnMappings.Add("PRAX_PV_DNY", "PRAX_PV_DNY")
            tableMapping.ColumnMappings.Add("PRAX_PV_DAT", "PRAX_PV_DAT")
            tableMapping.ColumnMappings.Add("ZIVVYR", "ZIVVYR")
            tableMapping.ColumnMappings.Add("ZIVVYR_DAT", "ZIVVYR_DAT")
            tableMapping.ColumnMappings.Add("PED_ZARAZENI", "PED_ZARAZENI")
            tableMapping.ColumnMappings.Add("PED_ZPUSOBILOST", "PED_ZPUSOBILOST")
            tableMapping.ColumnMappings.Add("OLDTABULKA", "OLDTABULKA")
            tableMapping.ColumnMappings.Add("VOLIT1", "VOLIT1")
            tableMapping.ColumnMappings.Add("VOLIT2", "VOLIT2")
            tableMapping.ColumnMappings.Add("VP_SJ", "VP_SJ")
            tableMapping.ColumnMappings.Add("VP_PL", "VP_PL")
            tableMapping.ColumnMappings.Add("ROZPETI_BLN", "ROZPETI_BLN")
            tableMapping.ColumnMappings.Add("CHRAN_TARIFKC", "CHRAN_TARIFKC")
            tableMapping.ColumnMappings.Add("CHRAN_OSOBA", "CHRAN_OSOBA")
            tableMapping.ColumnMappings.Add("PRAX_VYKAZ", "PRAX_VYKAZ")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.OleDb.OleDbCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM `PERS` WHERE ((`ID` = ?) AND ((? = 1 AND `JMENO` IS NULL) OR (`JMENO`"& _ 
                " = ?)) AND ((? = 1 AND `TITUL` IS NULL) OR (`TITUL` = ?)) AND ((? = 1 AND `EV_CI"& _ 
                "SLO` IS NULL) OR (`EV_CISLO` = ?)) AND ((? = 1 AND `PROV_CISLO` IS NULL) OR (`PR"& _ 
                "OV_CISLO` = ?)) AND ((? = 1 AND `ROD_CISLO` IS NULL) OR (`ROD_CISLO` = ?)) AND ("& _ 
                "(? = 1 AND `PPV` IS NULL) OR (`PPV` = ?)) AND ((? = 1 AND `BYD_PSC` IS NULL) OR "& _ 
                "(`BYD_PSC` = ?)) AND ((? = 1 AND `BYD_MISTO` IS NULL) OR (`BYD_MISTO` = ?)) AND "& _ 
                "((? = 1 AND `ROZPETI` IS NULL) OR (`ROZPETI` = ?)) AND ((? = 1 AND `VZD_DOSA` IS"& _ 
                " NULL) OR (`VZD_DOSA` = ?)) AND ((? = 1 AND `VZD_POZA` IS NULL) OR (`VZD_POZA` ="& _ 
                " ?)) AND ((? = 1 AND `VZD_POZ_DA` IS NULL) OR (`VZD_POZ_DA` = ?)) AND ((? = 1 AN"& _ 
                "D `TYP_POZ` IS NULL) OR (`TYP_POZ` = ?)) AND ((? = 1 AND `ODPOCET` IS NULL) OR ("& _ 
                "`ODPOCET` = ?)) AND ((? = 1 AND `NEMINUS` IS NULL) OR (`NEMINUS` = ?)) AND ((? ="& _ 
                " 1 AND `PRV_ZAR` IS NULL) OR (`PRV_ZAR` = ?)) AND ((? = 1 AND `PRAX` IS NULL) OR"& _ 
                " (`PRAX` = ?)) AND ((? = 1 AND `PRAX_DNY` IS NULL) OR (`PRAX_DNY` = ?)) AND ((? "& _ 
                "= 1 AND `STUPEN` IS NULL) OR (`STUPEN` = ?)) AND ((? = 1 AND `TRIDA` IS NULL) OR"& _ 
                " (`TRIDA` = ?)) AND ((? = 1 AND `TARIFKC` IS NULL) OR (`TARIFKC` = ?)) AND ((? ="& _ 
                " 1 AND `TARIFZVYSPROC` IS NULL) OR (`TARIFZVYSPROC` = ?)) AND ((? = 1 AND `OSPRI"& _ 
                "PKC` IS NULL) OR (`OSPRIPKC` = ?)) AND ((? = 1 AND `VEDENI` IS NULL) OR (`VEDENI"& _ 
                "` = ?)) AND ((? = 1 AND `ZTIZENE` IS NULL) OR (`ZTIZENE` = ?)) AND ((? = 1 AND `"& _ 
                "SMENNOST` IS NULL) OR (`SMENNOST` = ?)) AND ((? = 1 AND `ZVLASTNI` IS NULL) OR ("& _ 
                "`ZVLASTNI` = ?)) AND ((? = 1 AND `OD` IS NULL) OR (`OD` = ?)) AND ((? = 1 AND `D"& _ 
                "ATUMOD` IS NULL) OR (`DATUMOD` = ?)) AND ((? = 1 AND `DAT_NOV_TR` IS NULL) OR (`"& _ 
                "DAT_NOV_TR` = ?)) AND ((? = 1 AND `DAT_NOV_TR_TXT` IS NULL) OR (`DAT_NOV_TR_TXT`"& _ 
                " = ?)) AND ((? = 1 AND `D_NASTUPU` IS NULL) OR (`D_NASTUPU` = ?)) AND ((? = 1 AN"& _ 
                "D `D_VYSTUPU` IS NULL) OR (`D_VYSTUPU` = ?)) AND ((? = 1 AND `USEK` IS NULL) OR "& _ 
                "(`USEK` = ?)) AND ((? = 1 AND `TISK` IS NULL) OR (`TISK` = ?)) AND ((? = 1 AND `"& _ 
                "NEURCI` IS NULL) OR (`NEURCI` = ?)) AND ((? = 1 AND `URCI_DO` IS NULL) OR (`URCI"& _ 
                "_DO` = ?)) AND ((? = 1 AND `ZKUDOBA` IS NULL) OR (`ZKUDOBA` = ?)) AND ((? = 1 AN"& _ 
                "D `ZKUD_DO` IS NULL) OR (`ZKUD_DO` = ?)) AND ((? = 1 AND `DALUJ` IS NULL) OR (`D"& _ 
                "ALUJ` = ?)) AND ((? = 1 AND `ROD_PRIJ` IS NULL) OR (`ROD_PRIJ` = ?)) AND ((? = 1"& _ 
                " AND `MIST_NAR` IS NULL) OR (`MIST_NAR` = ?)) AND ((? = 1 AND `ZDR_POJ` IS NULL)"& _ 
                " OR (`ZDR_POJ` = ?)) AND ((? = 1 AND `DUCHOD` IS NULL) OR (`DUCHOD` = ?)) AND (("& _ 
                "? = 1 AND `CESTY` IS NULL) OR (`CESTY` = ?)) AND ((? = 1 AND `PED` IS NULL) OR ("& _ 
                "`PED` = ?)) AND ((? = 1 AND `PREP` IS NULL) OR (`PREP` = ?)) AND ((? = 1 AND `ZP"& _ 
                "US` IS NULL) OR (`ZPUS` = ?)) AND ((? = 1 AND `ZPUS_DAT` IS NULL) OR (`ZPUS_DAT`"& _ 
                " = ?)) AND ((? = 1 AND `CELEJMENO` IS NULL) OR (`CELEJMENO` = ?)) AND ((? = 1 AN"& _ 
                "D `PPV_SOUB` IS NULL) OR (`PPV_SOUB` = ?)) AND ((? = 1 AND `ZPS` IS NULL) OR (`Z"& _ 
                "PS` = ?)) AND ((? = 1 AND `PRIPVED` IS NULL) OR (`PRIPVED` = ?)) AND ((? = 1 AND"& _ 
                " `PRACOV` IS NULL) OR (`PRACOV` = ?)) AND ((? = 1 AND `FUNKCE` IS NULL) OR (`FUN"& _ 
                "KCE` = ?)) AND ((? = 1 AND `PLATCELK` IS NULL) OR (`PLATCELK` = ?)) AND ((? = 1 "& _ 
                "AND `VOLIT4` IS NULL) OR (`VOLIT4` = ?)) AND ((? = 1 AND `VOLIT5` IS NULL) OR (`"& _ 
                "VOLIT5` = ?)) AND ((? = 1 AND `VOLIT6` IS NULL) OR (`VOLIT6` = ?)) AND ((? = 1 A"& _ 
                "ND `ZP25X` IS NULL) OR (`ZP25X` = ?)) AND ((? = 1 AND `NOVATRIDA` IS NULL) OR (`"& _ 
                "NOVATRIDA` = ?)) AND ((? = 1 AND `ZP25X_ZNAK` IS NULL) OR (`ZP25X_ZNAK` = ?)) AN"& _ 
                "D ((? = 1 AND `DAT_NAROZ` IS NULL) OR (`DAT_NAROZ` = ?)) AND ((? = 1 AND `SPECPR"& _ 
                "IPPED` IS NULL) OR (`SPECPRIPPED` = ?)) AND ((? = 1 AND `ZJED` IS NULL) OR (`ZJE"& _ 
                "D` = ?)) AND ((? = 1 AND `ZJEDROKY` IS NULL) OR (`ZJEDROKY` = ?)) AND ((? = 1 AN"& _ 
                "D `ZJEDDNY` IS NULL) OR (`ZJEDDNY` = ?)) AND ((? = 1 AND `ZJEDDAT` IS NULL) OR ("& _ 
                "`ZJEDDAT` = ?)) AND ((? = 1 AND `TABULKA` IS NULL) OR (`TABULKA` = ?)) AND ((? ="& _ 
                " 1 AND `LH_ZDRAV` IS NULL) OR (`LH_ZDRAV` = ?)) AND ((? = 1 AND `LH_BOZP` IS NUL"& _ 
                "L) OR (`LH_BOZP` = ?)) AND ((? = 1 AND `LH_SIPVZ` IS NULL) OR (`LH_SIPVZ` = ?)) "& _ 
                "AND ((? = 1 AND `LH_SKOL` IS NULL) OR (`LH_SKOL` = ?)) AND ((? = 1 AND `PRIJMENI"& _ 
                "` IS NULL) OR (`PRIJMENI` = ?)) AND ((? = 1 AND `DRUH_PRACDOB` IS NULL) OR (`DRU"& _ 
                "H_PRACDOB` = ?)) AND ((? = 1 AND `DRUH_PRACREZ` IS NULL) OR (`DRUH_PRACREZ` = ?)"& _ 
                ") AND ((? = 1 AND `DAT_KONEC_PP` IS NULL) OR (`DAT_KONEC_PP` = ?)) AND ((? = 1 A"& _ 
                "ND `DAT_UZAV_PS` IS NULL) OR (`DAT_UZAV_PS` = ?)) AND ((? = 1 AND `ERR` IS NULL)"& _ 
                " OR (`ERR` = ?)) AND ((? = 1 AND `ZVLZDRAV` IS NULL) OR (`ZVLZDRAV` = ?)) AND (("& _ 
                "? = 1 AND `VOLIT3` IS NULL) OR (`VOLIT3` = ?)) AND ((? = 1 AND `LH_MDRD` IS NULL"& _ 
                ") OR (`LH_MDRD` = ?)) AND ((? = 1 AND `BYD_ULICE` IS NULL) OR (`BYD_ULICE` = ?))"& _ 
                " AND ((? = 1 AND `PRAX_PV` IS NULL) OR (`PRAX_PV` = ?)) AND ((? = 1 AND `PRAX_PV"& _ 
                "_DNY` IS NULL) OR (`PRAX_PV_DNY` = ?)) AND ((? = 1 AND `PRAX_PV_DAT` IS NULL) OR"& _ 
                " (`PRAX_PV_DAT` = ?)) AND ((? = 1 AND `ZIVVYR` IS NULL) OR (`ZIVVYR` = ?)) AND ("& _ 
                "(? = 1 AND `ZIVVYR_DAT` IS NULL) OR (`ZIVVYR_DAT` = ?)) AND ((? = 1 AND `PED_ZAR"& _ 
                "AZENI` IS NULL) OR (`PED_ZARAZENI` = ?)) AND ((? = 1 AND `PED_ZPUSOBILOST` IS NU"& _ 
                "LL) OR (`PED_ZPUSOBILOST` = ?)) AND ((? = 1 AND `OLDTABULKA` IS NULL) OR (`OLDTA"& _ 
                "BULKA` = ?)) AND ((? = 1 AND `VOLIT1` IS NULL) OR (`VOLIT1` = ?)) AND ((? = 1 AN"& _ 
                "D `VOLIT2` IS NULL) OR (`VOLIT2` = ?)) AND ((? = 1 AND `VP_SJ` IS NULL) OR (`VP_"& _ 
                "SJ` = ?)) AND ((? = 1 AND `VP_PL` IS NULL) OR (`VP_PL` = ?)) AND ((? = 1 AND `RO"& _ 
                "ZPETI_BLN` IS NULL) OR (`ROZPETI_BLN` = ?)) AND ((? = 1 AND `CHRAN_TARIFKC` IS N"& _ 
                "ULL) OR (`CHRAN_TARIFKC` = ?)) AND ((? = 1 AND `CHRAN_OSOBA` IS NULL) OR (`CHRAN"& _ 
                "_OSOBA` = ?)) AND ((? = 1 AND `PRAX_VYKAZ` IS NULL) OR (`PRAX_VYKAZ` = ?)))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_ID", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ID", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_JMENO", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "JMENO", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_JMENO", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "JMENO", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_TITUL", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "TITUL", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_TITUL", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "TITUL", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_EV_CISLO", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "EV_CISLO", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_EV_CISLO", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "EV_CISLO", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_PROV_CISLO", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PROV_CISLO", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_PROV_CISLO", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PROV_CISLO", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_ROD_CISLO", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ROD_CISLO", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_ROD_CISLO", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ROD_CISLO", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_PPV", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PPV", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_PPV", Global.System.Data.OleDb.OleDbType.UnsignedTinyInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PPV", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_BYD_PSC", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BYD_PSC", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_BYD_PSC", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BYD_PSC", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_BYD_MISTO", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BYD_MISTO", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_BYD_MISTO", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BYD_MISTO", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_ROZPETI", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ROZPETI", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_ROZPETI", Global.System.Data.OleDb.OleDbType.UnsignedTinyInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ROZPETI", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_VZD_DOSA", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "VZD_DOSA", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_VZD_DOSA", Global.System.Data.OleDb.OleDbType.UnsignedTinyInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "VZD_DOSA", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_VZD_POZA", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "VZD_POZA", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_VZD_POZA", Global.System.Data.OleDb.OleDbType.UnsignedTinyInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "VZD_POZA", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_VZD_POZ_DA", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "VZD_POZ_DA", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_VZD_POZ_DA", Global.System.Data.OleDb.OleDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "VZD_POZ_DA", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_TYP_POZ", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "TYP_POZ", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_TYP_POZ", Global.System.Data.OleDb.OleDbType.UnsignedTinyInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "TYP_POZ", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_ODPOCET", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ODPOCET", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_ODPOCET", Global.System.Data.OleDb.OleDbType.[Double], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ODPOCET", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_NEMINUS", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "NEMINUS", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_NEMINUS", Global.System.Data.OleDb.OleDbType.[Double], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "NEMINUS", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_PRV_ZAR", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PRV_ZAR", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_PRV_ZAR", Global.System.Data.OleDb.OleDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PRV_ZAR", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_PRAX", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PRAX", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_PRAX", Global.System.Data.OleDb.OleDbType.[Double], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PRAX", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_PRAX_DNY", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PRAX_DNY", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_PRAX_DNY", Global.System.Data.OleDb.OleDbType.[Double], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PRAX_DNY", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_STUPEN", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "STUPEN", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_STUPEN", Global.System.Data.OleDb.OleDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "STUPEN", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_TRIDA", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "TRIDA", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_TRIDA", Global.System.Data.OleDb.OleDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "TRIDA", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_TARIFKC", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "TARIFKC", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_TARIFKC", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "TARIFKC", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_TARIFZVYSPROC", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "TARIFZVYSPROC", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_TARIFZVYSPROC", Global.System.Data.OleDb.OleDbType.[Single], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "TARIFZVYSPROC", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_OSPRIPKC", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "OSPRIPKC", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_OSPRIPKC", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "OSPRIPKC", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_VEDENI", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "VEDENI", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_VEDENI", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "VEDENI", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_ZTIZENE", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ZTIZENE", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_ZTIZENE", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ZTIZENE", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_SMENNOST", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "SMENNOST", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_SMENNOST", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "SMENNOST", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_ZVLASTNI", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ZVLASTNI", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_ZVLASTNI", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ZVLASTNI", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_OD", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "OD", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_OD", Global.System.Data.OleDb.OleDbType.UnsignedTinyInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "OD", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_DATUMOD", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DATUMOD", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_DATUMOD", Global.System.Data.OleDb.OleDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DATUMOD", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_DAT_NOV_TR", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DAT_NOV_TR", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_DAT_NOV_TR", Global.System.Data.OleDb.OleDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DAT_NOV_TR", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_DAT_NOV_TR_TXT", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DAT_NOV_TR_TXT", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_DAT_NOV_TR_TXT", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DAT_NOV_TR_TXT", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_D_NASTUPU", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "D_NASTUPU", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_D_NASTUPU", Global.System.Data.OleDb.OleDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "D_NASTUPU", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_D_VYSTUPU", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "D_VYSTUPU", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_D_VYSTUPU", Global.System.Data.OleDb.OleDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "D_VYSTUPU", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_USEK", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "USEK", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_USEK", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "USEK", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_TISK", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "TISK", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_TISK", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "TISK", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_NEURCI", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "NEURCI", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_NEURCI", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "NEURCI", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_URCI_DO", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "URCI_DO", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_URCI_DO", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "URCI_DO", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_ZKUDOBA", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ZKUDOBA", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_ZKUDOBA", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ZKUDOBA", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_ZKUD_DO", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ZKUD_DO", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_ZKUD_DO", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ZKUD_DO", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_DALUJ", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DALUJ", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_DALUJ", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DALUJ", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_ROD_PRIJ", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ROD_PRIJ", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_ROD_PRIJ", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ROD_PRIJ", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_MIST_NAR", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "MIST_NAR", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_MIST_NAR", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "MIST_NAR", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_ZDR_POJ", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ZDR_POJ", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_ZDR_POJ", Global.System.Data.OleDb.OleDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ZDR_POJ", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_DUCHOD", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DUCHOD", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_DUCHOD", Global.System.Data.OleDb.OleDbType.UnsignedTinyInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DUCHOD", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_CESTY", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CESTY", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_CESTY", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CESTY", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_PED", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PED", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_PED", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PED", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_PREP", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PREP", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_PREP", Global.System.Data.OleDb.OleDbType.[Double], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PREP", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_ZPUS", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ZPUS", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_ZPUS", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ZPUS", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_ZPUS_DAT", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ZPUS_DAT", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_ZPUS_DAT", Global.System.Data.OleDb.OleDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ZPUS_DAT", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_CELEJMENO", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CELEJMENO", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_CELEJMENO", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CELEJMENO", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_PPV_SOUB", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PPV_SOUB", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_PPV_SOUB", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PPV_SOUB", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_ZPS", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ZPS", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_ZPS", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ZPS", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_PRIPVED", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PRIPVED", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_PRIPVED", Global.System.Data.OleDb.OleDbType.UnsignedTinyInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PRIPVED", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_PRACOV", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PRACOV", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_PRACOV", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PRACOV", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_FUNKCE", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "FUNKCE", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_FUNKCE", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "FUNKCE", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_PLATCELK", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PLATCELK", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_PLATCELK", Global.System.Data.OleDb.OleDbType.[Double], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PLATCELK", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_VOLIT4", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "VOLIT4", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_VOLIT4", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "VOLIT4", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_VOLIT5", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "VOLIT5", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_VOLIT5", Global.System.Data.OleDb.OleDbType.[Double], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "VOLIT5", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_VOLIT6", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "VOLIT6", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_VOLIT6", Global.System.Data.OleDb.OleDbType.[Double], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "VOLIT6", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_ZP25X", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ZP25X", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_ZP25X", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ZP25X", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_NOVATRIDA", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "NOVATRIDA", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_NOVATRIDA", Global.System.Data.OleDb.OleDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "NOVATRIDA", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_ZP25X_ZNAK", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ZP25X_ZNAK", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_ZP25X_ZNAK", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ZP25X_ZNAK", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_DAT_NAROZ", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DAT_NAROZ", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_DAT_NAROZ", Global.System.Data.OleDb.OleDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DAT_NAROZ", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_SPECPRIPPED", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "SPECPRIPPED", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_SPECPRIPPED", Global.System.Data.OleDb.OleDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "SPECPRIPPED", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_ZJED", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ZJED", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_ZJED", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ZJED", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_ZJEDROKY", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ZJEDROKY", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_ZJEDROKY", Global.System.Data.OleDb.OleDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ZJEDROKY", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_ZJEDDNY", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ZJEDDNY", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_ZJEDDNY", Global.System.Data.OleDb.OleDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ZJEDDNY", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_ZJEDDAT", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ZJEDDAT", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_ZJEDDAT", Global.System.Data.OleDb.OleDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ZJEDDAT", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_TABULKA", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "TABULKA", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_TABULKA", Global.System.Data.OleDb.OleDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "TABULKA", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_LH_ZDRAV", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LH_ZDRAV", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_LH_ZDRAV", Global.System.Data.OleDb.OleDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LH_ZDRAV", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_LH_BOZP", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LH_BOZP", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_LH_BOZP", Global.System.Data.OleDb.OleDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LH_BOZP", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_LH_SIPVZ", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LH_SIPVZ", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_LH_SIPVZ", Global.System.Data.OleDb.OleDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LH_SIPVZ", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_LH_SKOL", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LH_SKOL", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_LH_SKOL", Global.System.Data.OleDb.OleDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LH_SKOL", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_PRIJMENI", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PRIJMENI", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_PRIJMENI", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PRIJMENI", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_DRUH_PRACDOB", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DRUH_PRACDOB", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_DRUH_PRACDOB", Global.System.Data.OleDb.OleDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DRUH_PRACDOB", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_DRUH_PRACREZ", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DRUH_PRACREZ", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_DRUH_PRACREZ", Global.System.Data.OleDb.OleDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DRUH_PRACREZ", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_DAT_KONEC_PP", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DAT_KONEC_PP", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_DAT_KONEC_PP", Global.System.Data.OleDb.OleDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DAT_KONEC_PP", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_DAT_UZAV_PS", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DAT_UZAV_PS", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_DAT_UZAV_PS", Global.System.Data.OleDb.OleDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DAT_UZAV_PS", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_ERR", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ERR", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_ERR", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ERR", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_ZVLZDRAV", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ZVLZDRAV", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_ZVLZDRAV", Global.System.Data.OleDb.OleDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ZVLZDRAV", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_VOLIT3", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "VOLIT3", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_VOLIT3", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "VOLIT3", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_LH_MDRD", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LH_MDRD", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_LH_MDRD", Global.System.Data.OleDb.OleDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LH_MDRD", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_BYD_ULICE", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BYD_ULICE", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_BYD_ULICE", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BYD_ULICE", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_PRAX_PV", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PRAX_PV", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_PRAX_PV", Global.System.Data.OleDb.OleDbType.[Double], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PRAX_PV", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_PRAX_PV_DNY", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PRAX_PV_DNY", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_PRAX_PV_DNY", Global.System.Data.OleDb.OleDbType.[Double], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PRAX_PV_DNY", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_PRAX_PV_DAT", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PRAX_PV_DAT", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_PRAX_PV_DAT", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PRAX_PV_DAT", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_ZIVVYR", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ZIVVYR", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_ZIVVYR", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ZIVVYR", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_ZIVVYR_DAT", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ZIVVYR_DAT", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_ZIVVYR_DAT", Global.System.Data.OleDb.OleDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ZIVVYR_DAT", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_PED_ZARAZENI", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PED_ZARAZENI", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_PED_ZARAZENI", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PED_ZARAZENI", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_PED_ZPUSOBILOST", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PED_ZPUSOBILOST", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_PED_ZPUSOBILOST", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PED_ZPUSOBILOST", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_OLDTABULKA", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "OLDTABULKA", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_OLDTABULKA", Global.System.Data.OleDb.OleDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "OLDTABULKA", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_VOLIT1", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "VOLIT1", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_VOLIT1", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "VOLIT1", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_VOLIT2", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "VOLIT2", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_VOLIT2", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "VOLIT2", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_VP_SJ", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "VP_SJ", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_VP_SJ", Global.System.Data.OleDb.OleDbType.[Single], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "VP_SJ", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_VP_PL", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "VP_PL", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_VP_PL", Global.System.Data.OleDb.OleDbType.[Single], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "VP_PL", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_ROZPETI_BLN", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ROZPETI_BLN", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_ROZPETI_BLN", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ROZPETI_BLN", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_CHRAN_TARIFKC", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CHRAN_TARIFKC", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_CHRAN_TARIFKC", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CHRAN_TARIFKC", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_CHRAN_OSOBA", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CHRAN_OSOBA", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_CHRAN_OSOBA", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CHRAN_OSOBA", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_PRAX_VYKAZ", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PRAX_VYKAZ", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_PRAX_VYKAZ", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PRAX_VYKAZ", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.InsertCommand = New Global.System.Data.OleDb.OleDbCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO `PERS` (`JMENO`, `TITUL`, `EV_CISLO`, `PROV_CISLO`, `ROD_CISLO`, `PPV"& _ 
                "`, `BYD_PSC`, `BYD_MISTO`, `ROZPETI`, `VZD_DOSA`, `VZD_POZA`, `VZD_POZ_DA`, `TYP"& _ 
                "_POZ`, `ODPOCET`, `NEMINUS`, `PRV_ZAR`, `PRAX`, `PRAX_DNY`, `STUPEN`, `TRIDA`, `"& _ 
                "TARIFKC`, `TARIFZVYSPROC`, `OSPRIPKC`, `VEDENI`, `ZTIZENE`, `SMENNOST`, `ZVLASTN"& _ 
                "I`, `OD`, `DATUMOD`, `DAT_NOV_TR`, `DAT_NOV_TR_TXT`, `D_NASTUPU`, `D_VYSTUPU`, `"& _ 
                "USEK`, `TISK`, `NEURCI`, `URCI_DO`, `ZKUDOBA`, `ZKUD_DO`, `DALUJ`, `ROD_PRIJ`, `"& _ 
                "MIST_NAR`, `ZDR_POJ`, `DUCHOD`, `CESTY`, `PED`, `PREP`, `ZPUS`, `ZPUS_DAT`, `DAL"& _ 
                "UJ_TEXT`, `CELEJMENO`, `PPV_SOUB`, `ZPS`, `POZNAMKA`, `PRIPVED`, `PRACOV`, `FUNK"& _ 
                "CE`, `PLATCELK`, `VOLIT4`, `VOLIT5`, `VOLIT6`, `ZP25X`, `NOVATRIDA`, `ZP25X_ZNAK"& _ 
                "`, `DAT_NAROZ`, `SPECPRIPPED`, `ZJED`, `ZJEDROKY`, `ZJEDDNY`, `ZJEDDAT`, `TABULK"& _ 
                "A`, `LH_ZDRAV`, `LH_BOZP`, `LH_SIPVZ`, `LH_SKOL`, `PRIJMENI`, `DRUH_PRACDOB`, `D"& _ 
                "RUH_PRACREZ`, `DAT_KONEC_PP`, `DAT_UZAV_PS`, `ERR`, `ZVLZDRAV`, `VOLIT3`, `LH_MD"& _ 
                "RD`, `BYD_ULICE`, `PRAX_PV`, `PRAX_PV_DNY`, `PRAX_PV_DAT`, `ZIVVYR`, `ZIVVYR_DAT"& _ 
                "`, `PED_ZARAZENI`, `PED_ZPUSOBILOST`, `OLDTABULKA`, `VOLIT1`, `VOLIT2`, `VP_SJ`,"& _ 
                " `VP_PL`, `ROZPETI_BLN`, `CHRAN_TARIFKC`, `CHRAN_OSOBA`, `PRAX_VYKAZ`) VALUES (?"& _ 
                ", ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, "& _ 
                "?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,"& _ 
                " ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?"& _ 
                ", ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("JMENO", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "JMENO", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("TITUL", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "TITUL", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("EV_CISLO", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "EV_CISLO", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("PROV_CISLO", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PROV_CISLO", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("ROD_CISLO", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ROD_CISLO", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("PPV", Global.System.Data.OleDb.OleDbType.UnsignedTinyInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PPV", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("BYD_PSC", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BYD_PSC", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("BYD_MISTO", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BYD_MISTO", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("ROZPETI", Global.System.Data.OleDb.OleDbType.UnsignedTinyInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ROZPETI", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("VZD_DOSA", Global.System.Data.OleDb.OleDbType.UnsignedTinyInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "VZD_DOSA", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("VZD_POZA", Global.System.Data.OleDb.OleDbType.UnsignedTinyInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "VZD_POZA", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("VZD_POZ_DA", Global.System.Data.OleDb.OleDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "VZD_POZ_DA", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("TYP_POZ", Global.System.Data.OleDb.OleDbType.UnsignedTinyInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "TYP_POZ", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("ODPOCET", Global.System.Data.OleDb.OleDbType.[Double], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ODPOCET", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("NEMINUS", Global.System.Data.OleDb.OleDbType.[Double], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "NEMINUS", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("PRV_ZAR", Global.System.Data.OleDb.OleDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PRV_ZAR", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("PRAX", Global.System.Data.OleDb.OleDbType.[Double], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PRAX", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("PRAX_DNY", Global.System.Data.OleDb.OleDbType.[Double], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PRAX_DNY", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("STUPEN", Global.System.Data.OleDb.OleDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "STUPEN", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("TRIDA", Global.System.Data.OleDb.OleDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "TRIDA", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("TARIFKC", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "TARIFKC", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("TARIFZVYSPROC", Global.System.Data.OleDb.OleDbType.[Single], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "TARIFZVYSPROC", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("OSPRIPKC", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "OSPRIPKC", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("VEDENI", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "VEDENI", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("ZTIZENE", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ZTIZENE", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("SMENNOST", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "SMENNOST", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("ZVLASTNI", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ZVLASTNI", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("OD", Global.System.Data.OleDb.OleDbType.UnsignedTinyInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "OD", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("DATUMOD", Global.System.Data.OleDb.OleDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DATUMOD", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("DAT_NOV_TR", Global.System.Data.OleDb.OleDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DAT_NOV_TR", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("DAT_NOV_TR_TXT", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DAT_NOV_TR_TXT", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("D_NASTUPU", Global.System.Data.OleDb.OleDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "D_NASTUPU", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("D_VYSTUPU", Global.System.Data.OleDb.OleDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "D_VYSTUPU", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("USEK", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "USEK", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("TISK", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "TISK", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("NEURCI", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "NEURCI", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("URCI_DO", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "URCI_DO", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("ZKUDOBA", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ZKUDOBA", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("ZKUD_DO", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ZKUD_DO", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("DALUJ", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DALUJ", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("ROD_PRIJ", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ROD_PRIJ", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("MIST_NAR", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "MIST_NAR", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("ZDR_POJ", Global.System.Data.OleDb.OleDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ZDR_POJ", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("DUCHOD", Global.System.Data.OleDb.OleDbType.UnsignedTinyInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DUCHOD", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("CESTY", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CESTY", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("PED", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PED", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("PREP", Global.System.Data.OleDb.OleDbType.[Double], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PREP", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("ZPUS", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ZPUS", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("ZPUS_DAT", Global.System.Data.OleDb.OleDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ZPUS_DAT", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("DALUJ_TEXT", Global.System.Data.OleDb.OleDbType.LongVarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DALUJ_TEXT", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("CELEJMENO", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CELEJMENO", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("PPV_SOUB", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PPV_SOUB", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("ZPS", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ZPS", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("POZNAMKA", Global.System.Data.OleDb.OleDbType.LongVarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "POZNAMKA", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("PRIPVED", Global.System.Data.OleDb.OleDbType.UnsignedTinyInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PRIPVED", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("PRACOV", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PRACOV", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("FUNKCE", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "FUNKCE", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("PLATCELK", Global.System.Data.OleDb.OleDbType.[Double], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PLATCELK", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("VOLIT4", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "VOLIT4", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("VOLIT5", Global.System.Data.OleDb.OleDbType.[Double], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "VOLIT5", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("VOLIT6", Global.System.Data.OleDb.OleDbType.[Double], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "VOLIT6", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("ZP25X", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ZP25X", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("NOVATRIDA", Global.System.Data.OleDb.OleDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "NOVATRIDA", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("ZP25X_ZNAK", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ZP25X_ZNAK", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("DAT_NAROZ", Global.System.Data.OleDb.OleDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DAT_NAROZ", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("SPECPRIPPED", Global.System.Data.OleDb.OleDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "SPECPRIPPED", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("ZJED", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ZJED", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("ZJEDROKY", Global.System.Data.OleDb.OleDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ZJEDROKY", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("ZJEDDNY", Global.System.Data.OleDb.OleDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ZJEDDNY", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("ZJEDDAT", Global.System.Data.OleDb.OleDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ZJEDDAT", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("TABULKA", Global.System.Data.OleDb.OleDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "TABULKA", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("LH_ZDRAV", Global.System.Data.OleDb.OleDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LH_ZDRAV", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("LH_BOZP", Global.System.Data.OleDb.OleDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LH_BOZP", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("LH_SIPVZ", Global.System.Data.OleDb.OleDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LH_SIPVZ", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("LH_SKOL", Global.System.Data.OleDb.OleDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LH_SKOL", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("PRIJMENI", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PRIJMENI", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("DRUH_PRACDOB", Global.System.Data.OleDb.OleDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DRUH_PRACDOB", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("DRUH_PRACREZ", Global.System.Data.OleDb.OleDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DRUH_PRACREZ", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("DAT_KONEC_PP", Global.System.Data.OleDb.OleDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DAT_KONEC_PP", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("DAT_UZAV_PS", Global.System.Data.OleDb.OleDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DAT_UZAV_PS", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("ERR", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ERR", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("ZVLZDRAV", Global.System.Data.OleDb.OleDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ZVLZDRAV", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("VOLIT3", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "VOLIT3", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("LH_MDRD", Global.System.Data.OleDb.OleDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LH_MDRD", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("BYD_ULICE", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BYD_ULICE", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("PRAX_PV", Global.System.Data.OleDb.OleDbType.[Double], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PRAX_PV", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("PRAX_PV_DNY", Global.System.Data.OleDb.OleDbType.[Double], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PRAX_PV_DNY", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("PRAX_PV_DAT", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PRAX_PV_DAT", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("ZIVVYR", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ZIVVYR", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("ZIVVYR_DAT", Global.System.Data.OleDb.OleDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ZIVVYR_DAT", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("PED_ZARAZENI", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PED_ZARAZENI", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("PED_ZPUSOBILOST", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PED_ZPUSOBILOST", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("OLDTABULKA", Global.System.Data.OleDb.OleDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "OLDTABULKA", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("VOLIT1", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "VOLIT1", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("VOLIT2", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "VOLIT2", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("VP_SJ", Global.System.Data.OleDb.OleDbType.[Single], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "VP_SJ", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("VP_PL", Global.System.Data.OleDb.OleDbType.[Single], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "VP_PL", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("ROZPETI_BLN", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ROZPETI_BLN", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("CHRAN_TARIFKC", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CHRAN_TARIFKC", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("CHRAN_OSOBA", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CHRAN_OSOBA", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("PRAX_VYKAZ", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PRAX_VYKAZ", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand = New Global.System.Data.OleDb.OleDbCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE `PERS` SET `JMENO` = ?, `TITUL` = ?, `EV_CISLO` = ?, `PROV_CISLO` = ?, `RO"& _ 
                "D_CISLO` = ?, `PPV` = ?, `BYD_PSC` = ?, `BYD_MISTO` = ?, `ROZPETI` = ?, `VZD_DOS"& _ 
                "A` = ?, `VZD_POZA` = ?, `VZD_POZ_DA` = ?, `TYP_POZ` = ?, `ODPOCET` = ?, `NEMINUS"& _ 
                "` = ?, `PRV_ZAR` = ?, `PRAX` = ?, `PRAX_DNY` = ?, `STUPEN` = ?, `TRIDA` = ?, `TA"& _ 
                "RIFKC` = ?, `TARIFZVYSPROC` = ?, `OSPRIPKC` = ?, `VEDENI` = ?, `ZTIZENE` = ?, `S"& _ 
                "MENNOST` = ?, `ZVLASTNI` = ?, `OD` = ?, `DATUMOD` = ?, `DAT_NOV_TR` = ?, `DAT_NO"& _ 
                "V_TR_TXT` = ?, `D_NASTUPU` = ?, `D_VYSTUPU` = ?, `USEK` = ?, `TISK` = ?, `NEURCI"& _ 
                "` = ?, `URCI_DO` = ?, `ZKUDOBA` = ?, `ZKUD_DO` = ?, `DALUJ` = ?, `ROD_PRIJ` = ?,"& _ 
                " `MIST_NAR` = ?, `ZDR_POJ` = ?, `DUCHOD` = ?, `CESTY` = ?, `PED` = ?, `PREP` = ?"& _ 
                ", `ZPUS` = ?, `ZPUS_DAT` = ?, `DALUJ_TEXT` = ?, `CELEJMENO` = ?, `PPV_SOUB` = ?,"& _ 
                " `ZPS` = ?, `POZNAMKA` = ?, `PRIPVED` = ?, `PRACOV` = ?, `FUNKCE` = ?, `PLATCELK"& _ 
                "` = ?, `VOLIT4` = ?, `VOLIT5` = ?, `VOLIT6` = ?, `ZP25X` = ?, `NOVATRIDA` = ?, `"& _ 
                "ZP25X_ZNAK` = ?, `DAT_NAROZ` = ?, `SPECPRIPPED` = ?, `ZJED` = ?, `ZJEDROKY` = ?,"& _ 
                " `ZJEDDNY` = ?, `ZJEDDAT` = ?, `TABULKA` = ?, `LH_ZDRAV` = ?, `LH_BOZP` = ?, `LH"& _ 
                "_SIPVZ` = ?, `LH_SKOL` = ?, `PRIJMENI` = ?, `DRUH_PRACDOB` = ?, `DRUH_PRACREZ` ="& _ 
                " ?, `DAT_KONEC_PP` = ?, `DAT_UZAV_PS` = ?, `ERR` = ?, `ZVLZDRAV` = ?, `VOLIT3` ="& _ 
                " ?, `LH_MDRD` = ?, `BYD_ULICE` = ?, `PRAX_PV` = ?, `PRAX_PV_DNY` = ?, `PRAX_PV_D"& _ 
                "AT` = ?, `ZIVVYR` = ?, `ZIVVYR_DAT` = ?, `PED_ZARAZENI` = ?, `PED_ZPUSOBILOST` ="& _ 
                " ?, `OLDTABULKA` = ?, `VOLIT1` = ?, `VOLIT2` = ?, `VP_SJ` = ?, `VP_PL` = ?, `ROZ"& _ 
                "PETI_BLN` = ?, `CHRAN_TARIFKC` = ?, `CHRAN_OSOBA` = ?, `PRAX_VYKAZ` = ? WHERE (("& _ 
                "`ID` = ?) AND ((? = 1 AND `JMENO` IS NULL) OR (`JMENO` = ?)) AND ((? = 1 AND `TI"& _ 
                "TUL` IS NULL) OR (`TITUL` = ?)) AND ((? = 1 AND `EV_CISLO` IS NULL) OR (`EV_CISL"& _ 
                "O` = ?)) AND ((? = 1 AND `PROV_CISLO` IS NULL) OR (`PROV_CISLO` = ?)) AND ((? = "& _ 
                "1 AND `ROD_CISLO` IS NULL) OR (`ROD_CISLO` = ?)) AND ((? = 1 AND `PPV` IS NULL) "& _ 
                "OR (`PPV` = ?)) AND ((? = 1 AND `BYD_PSC` IS NULL) OR (`BYD_PSC` = ?)) AND ((? ="& _ 
                " 1 AND `BYD_MISTO` IS NULL) OR (`BYD_MISTO` = ?)) AND ((? = 1 AND `ROZPETI` IS N"& _ 
                "ULL) OR (`ROZPETI` = ?)) AND ((? = 1 AND `VZD_DOSA` IS NULL) OR (`VZD_DOSA` = ?)"& _ 
                ") AND ((? = 1 AND `VZD_POZA` IS NULL) OR (`VZD_POZA` = ?)) AND ((? = 1 AND `VZD_"& _ 
                "POZ_DA` IS NULL) OR (`VZD_POZ_DA` = ?)) AND ((? = 1 AND `TYP_POZ` IS NULL) OR (`"& _ 
                "TYP_POZ` = ?)) AND ((? = 1 AND `ODPOCET` IS NULL) OR (`ODPOCET` = ?)) AND ((? = "& _ 
                "1 AND `NEMINUS` IS NULL) OR (`NEMINUS` = ?)) AND ((? = 1 AND `PRV_ZAR` IS NULL) "& _ 
                "OR (`PRV_ZAR` = ?)) AND ((? = 1 AND `PRAX` IS NULL) OR (`PRAX` = ?)) AND ((? = 1"& _ 
                " AND `PRAX_DNY` IS NULL) OR (`PRAX_DNY` = ?)) AND ((? = 1 AND `STUPEN` IS NULL) "& _ 
                "OR (`STUPEN` = ?)) AND ((? = 1 AND `TRIDA` IS NULL) OR (`TRIDA` = ?)) AND ((? = "& _ 
                "1 AND `TARIFKC` IS NULL) OR (`TARIFKC` = ?)) AND ((? = 1 AND `TARIFZVYSPROC` IS "& _ 
                "NULL) OR (`TARIFZVYSPROC` = ?)) AND ((? = 1 AND `OSPRIPKC` IS NULL) OR (`OSPRIPK"& _ 
                "C` = ?)) AND ((? = 1 AND `VEDENI` IS NULL) OR (`VEDENI` = ?)) AND ((? = 1 AND `Z"& _ 
                "TIZENE` IS NULL) OR (`ZTIZENE` = ?)) AND ((? = 1 AND `SMENNOST` IS NULL) OR (`SM"& _ 
                "ENNOST` = ?)) AND ((? = 1 AND `ZVLASTNI` IS NULL) OR (`ZVLASTNI` = ?)) AND ((? ="& _ 
                " 1 AND `OD` IS NULL) OR (`OD` = ?)) AND ((? = 1 AND `DATUMOD` IS NULL) OR (`DATU"& _ 
                "MOD` = ?)) AND ((? = 1 AND `DAT_NOV_TR` IS NULL) OR (`DAT_NOV_TR` = ?)) AND ((? "& _ 
                "= 1 AND `DAT_NOV_TR_TXT` IS NULL) OR (`DAT_NOV_TR_TXT` = ?)) AND ((? = 1 AND `D_"& _ 
                "NASTUPU` IS NULL) OR (`D_NASTUPU` = ?)) AND ((? = 1 AND `D_VYSTUPU` IS NULL) OR "& _ 
                "(`D_VYSTUPU` = ?)) AND ((? = 1 AND `USEK` IS NULL) OR (`USEK` = ?)) AND ((? = 1 "& _ 
                "AND `TISK` IS NULL) OR (`TISK` = ?)) AND ((? = 1 AND `NEURCI` IS NULL) OR (`NEUR"& _ 
                "CI` = ?)) AND ((? = 1 AND `URCI_DO` IS NULL) OR (`URCI_DO` = ?)) AND ((? = 1 AND"& _ 
                " `ZKUDOBA` IS NULL) OR (`ZKUDOBA` = ?)) AND ((? = 1 AND `ZKUD_DO` IS NULL) OR (`"& _ 
                "ZKUD_DO` = ?)) AND ((? = 1 AND `DALUJ` IS NULL) OR (`DALUJ` = ?)) AND ((? = 1 AN"& _ 
                "D `ROD_PRIJ` IS NULL) OR (`ROD_PRIJ` = ?)) AND ((? = 1 AND `MIST_NAR` IS NULL) O"& _ 
                "R (`MIST_NAR` = ?)) AND ((? = 1 AND `ZDR_POJ` IS NULL) OR (`ZDR_POJ` = ?)) AND ("& _ 
                "(? = 1 AND `DUCHOD` IS NULL) OR (`DUCHOD` = ?)) AND ((? = 1 AND `CESTY` IS NULL)"& _ 
                " OR (`CESTY` = ?)) AND ((? = 1 AND `PED` IS NULL) OR (`PED` = ?)) AND ((? = 1 AN"& _ 
                "D `PREP` IS NULL) OR (`PREP` = ?)) AND ((? = 1 AND `ZPUS` IS NULL) OR (`ZPUS` = "& _ 
                "?)) AND ((? = 1 AND `ZPUS_DAT` IS NULL) OR (`ZPUS_DAT` = ?)) AND ((? = 1 AND `CE"& _ 
                "LEJMENO` IS NULL) OR (`CELEJMENO` = ?)) AND ((? = 1 AND `PPV_SOUB` IS NULL) OR ("& _ 
                "`PPV_SOUB` = ?)) AND ((? = 1 AND `ZPS` IS NULL) OR (`ZPS` = ?)) AND ((? = 1 AND "& _ 
                "`PRIPVED` IS NULL) OR (`PRIPVED` = ?)) AND ((? = 1 AND `PRACOV` IS NULL) OR (`PR"& _ 
                "ACOV` = ?)) AND ((? = 1 AND `FUNKCE` IS NULL) OR (`FUNKCE` = ?)) AND ((? = 1 AND"& _ 
                " `PLATCELK` IS NULL) OR (`PLATCELK` = ?)) AND ((? = 1 AND `VOLIT4` IS NULL) OR ("& _ 
                "`VOLIT4` = ?)) AND ((? = 1 AND `VOLIT5` IS NULL) OR (`VOLIT5` = ?)) AND ((? = 1 "& _ 
                "AND `VOLIT6` IS NULL) OR (`VOLIT6` = ?)) AND ((? = 1 AND `ZP25X` IS NULL) OR (`Z"& _ 
                "P25X` = ?)) AND ((? = 1 AND `NOVATRIDA` IS NULL) OR (`NOVATRIDA` = ?)) AND ((? ="& _ 
                " 1 AND `ZP25X_ZNAK` IS NULL) OR (`ZP25X_ZNAK` = ?)) AND ((? = 1 AND `DAT_NAROZ` "& _ 
                "IS NULL) OR (`DAT_NAROZ` = ?)) AND ((? = 1 AND `SPECPRIPPED` IS NULL) OR (`SPECP"& _ 
                "RIPPED` = ?)) AND ((? = 1 AND `ZJED` IS NULL) OR (`ZJED` = ?)) AND ((? = 1 AND `"& _ 
                "ZJEDROKY` IS NULL) OR (`ZJEDROKY` = ?)) AND ((? = 1 AND `ZJEDDNY` IS NULL) OR (`"& _ 
                "ZJEDDNY` = ?)) AND ((? = 1 AND `ZJEDDAT` IS NULL) OR (`ZJEDDAT` = ?)) AND ((? = "& _ 
                "1 AND `TABULKA` IS NULL) OR (`TABULKA` = ?)) AND ((? = 1 AND `LH_ZDRAV` IS NULL)"& _ 
                " OR (`LH_ZDRAV` = ?)) AND ((? = 1 AND `LH_BOZP` IS NULL) OR (`LH_BOZP` = ?)) AND"& _ 
                " ((? = 1 AND `LH_SIPVZ` IS NULL) OR (`LH_SIPVZ` = ?)) AND ((? = 1 AND `LH_SKOL` "& _ 
                "IS NULL) OR (`LH_SKOL` = ?)) AND ((? = 1 AND `PRIJMENI` IS NULL) OR (`PRIJMENI` "& _ 
                "= ?)) AND ((? = 1 AND `DRUH_PRACDOB` IS NULL) OR (`DRUH_PRACDOB` = ?)) AND ((? ="& _ 
                " 1 AND `DRUH_PRACREZ` IS NULL) OR (`DRUH_PRACREZ` = ?)) AND ((? = 1 AND `DAT_KON"& _ 
                "EC_PP` IS NULL) OR (`DAT_KONEC_PP` = ?)) AND ((? = 1 AND `DAT_UZAV_PS` IS NULL) "& _ 
                "OR (`DAT_UZAV_PS` = ?)) AND ((? = 1 AND `ERR` IS NULL) OR (`ERR` = ?)) AND ((? ="& _ 
                " 1 AND `ZVLZDRAV` IS NULL) OR (`ZVLZDRAV` = ?)) AND ((? = 1 AND `VOLIT3` IS NULL"& _ 
                ") OR (`VOLIT3` = ?)) AND ((? = 1 AND `LH_MDRD` IS NULL) OR (`LH_MDRD` = ?)) AND "& _ 
                "((? = 1 AND `BYD_ULICE` IS NULL) OR (`BYD_ULICE` = ?)) AND ((? = 1 AND `PRAX_PV`"& _ 
                " IS NULL) OR (`PRAX_PV` = ?)) AND ((? = 1 AND `PRAX_PV_DNY` IS NULL) OR (`PRAX_P"& _ 
                "V_DNY` = ?)) AND ((? = 1 AND `PRAX_PV_DAT` IS NULL) OR (`PRAX_PV_DAT` = ?)) AND "& _ 
                "((? = 1 AND `ZIVVYR` IS NULL) OR (`ZIVVYR` = ?)) AND ((? = 1 AND `ZIVVYR_DAT` IS"& _ 
                " NULL) OR (`ZIVVYR_DAT` = ?)) AND ((? = 1 AND `PED_ZARAZENI` IS NULL) OR (`PED_Z"& _ 
                "ARAZENI` = ?)) AND ((? = 1 AND `PED_ZPUSOBILOST` IS NULL) OR (`PED_ZPUSOBILOST` "& _ 
                "= ?)) AND ((? = 1 AND `OLDTABULKA` IS NULL) OR (`OLDTABULKA` = ?)) AND ((? = 1 A"& _ 
                "ND `VOLIT1` IS NULL) OR (`VOLIT1` = ?)) AND ((? = 1 AND `VOLIT2` IS NULL) OR (`V"& _ 
                "OLIT2` = ?)) AND ((? = 1 AND `VP_SJ` IS NULL) OR (`VP_SJ` = ?)) AND ((? = 1 AND "& _ 
                "`VP_PL` IS NULL) OR (`VP_PL` = ?)) AND ((? = 1 AND `ROZPETI_BLN` IS NULL) OR (`R"& _ 
                "OZPETI_BLN` = ?)) AND ((? = 1 AND `CHRAN_TARIFKC` IS NULL) OR (`CHRAN_TARIFKC` ="& _ 
                " ?)) AND ((? = 1 AND `CHRAN_OSOBA` IS NULL) OR (`CHRAN_OSOBA` = ?)) AND ((? = 1 "& _ 
                "AND `PRAX_VYKAZ` IS NULL) OR (`PRAX_VYKAZ` = ?)))"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("JMENO", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "JMENO", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("TITUL", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "TITUL", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("EV_CISLO", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "EV_CISLO", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("PROV_CISLO", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PROV_CISLO", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("ROD_CISLO", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ROD_CISLO", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("PPV", Global.System.Data.OleDb.OleDbType.UnsignedTinyInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PPV", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("BYD_PSC", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BYD_PSC", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("BYD_MISTO", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BYD_MISTO", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("ROZPETI", Global.System.Data.OleDb.OleDbType.UnsignedTinyInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ROZPETI", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("VZD_DOSA", Global.System.Data.OleDb.OleDbType.UnsignedTinyInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "VZD_DOSA", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("VZD_POZA", Global.System.Data.OleDb.OleDbType.UnsignedTinyInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "VZD_POZA", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("VZD_POZ_DA", Global.System.Data.OleDb.OleDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "VZD_POZ_DA", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("TYP_POZ", Global.System.Data.OleDb.OleDbType.UnsignedTinyInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "TYP_POZ", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("ODPOCET", Global.System.Data.OleDb.OleDbType.[Double], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ODPOCET", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("NEMINUS", Global.System.Data.OleDb.OleDbType.[Double], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "NEMINUS", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("PRV_ZAR", Global.System.Data.OleDb.OleDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PRV_ZAR", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("PRAX", Global.System.Data.OleDb.OleDbType.[Double], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PRAX", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("PRAX_DNY", Global.System.Data.OleDb.OleDbType.[Double], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PRAX_DNY", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("STUPEN", Global.System.Data.OleDb.OleDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "STUPEN", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("TRIDA", Global.System.Data.OleDb.OleDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "TRIDA", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("TARIFKC", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "TARIFKC", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("TARIFZVYSPROC", Global.System.Data.OleDb.OleDbType.[Single], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "TARIFZVYSPROC", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("OSPRIPKC", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "OSPRIPKC", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("VEDENI", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "VEDENI", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("ZTIZENE", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ZTIZENE", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("SMENNOST", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "SMENNOST", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("ZVLASTNI", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ZVLASTNI", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("OD", Global.System.Data.OleDb.OleDbType.UnsignedTinyInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "OD", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("DATUMOD", Global.System.Data.OleDb.OleDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DATUMOD", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("DAT_NOV_TR", Global.System.Data.OleDb.OleDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DAT_NOV_TR", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("DAT_NOV_TR_TXT", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DAT_NOV_TR_TXT", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("D_NASTUPU", Global.System.Data.OleDb.OleDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "D_NASTUPU", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("D_VYSTUPU", Global.System.Data.OleDb.OleDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "D_VYSTUPU", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("USEK", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "USEK", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("TISK", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "TISK", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("NEURCI", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "NEURCI", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("URCI_DO", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "URCI_DO", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("ZKUDOBA", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ZKUDOBA", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("ZKUD_DO", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ZKUD_DO", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("DALUJ", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DALUJ", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("ROD_PRIJ", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ROD_PRIJ", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("MIST_NAR", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "MIST_NAR", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("ZDR_POJ", Global.System.Data.OleDb.OleDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ZDR_POJ", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("DUCHOD", Global.System.Data.OleDb.OleDbType.UnsignedTinyInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DUCHOD", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("CESTY", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CESTY", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("PED", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PED", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("PREP", Global.System.Data.OleDb.OleDbType.[Double], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PREP", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("ZPUS", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ZPUS", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("ZPUS_DAT", Global.System.Data.OleDb.OleDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ZPUS_DAT", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("DALUJ_TEXT", Global.System.Data.OleDb.OleDbType.LongVarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DALUJ_TEXT", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("CELEJMENO", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CELEJMENO", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("PPV_SOUB", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PPV_SOUB", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("ZPS", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ZPS", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("POZNAMKA", Global.System.Data.OleDb.OleDbType.LongVarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "POZNAMKA", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("PRIPVED", Global.System.Data.OleDb.OleDbType.UnsignedTinyInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PRIPVED", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("PRACOV", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PRACOV", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("FUNKCE", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "FUNKCE", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("PLATCELK", Global.System.Data.OleDb.OleDbType.[Double], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PLATCELK", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("VOLIT4", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "VOLIT4", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("VOLIT5", Global.System.Data.OleDb.OleDbType.[Double], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "VOLIT5", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("VOLIT6", Global.System.Data.OleDb.OleDbType.[Double], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "VOLIT6", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("ZP25X", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ZP25X", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("NOVATRIDA", Global.System.Data.OleDb.OleDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "NOVATRIDA", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("ZP25X_ZNAK", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ZP25X_ZNAK", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("DAT_NAROZ", Global.System.Data.OleDb.OleDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DAT_NAROZ", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("SPECPRIPPED", Global.System.Data.OleDb.OleDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "SPECPRIPPED", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("ZJED", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ZJED", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("ZJEDROKY", Global.System.Data.OleDb.OleDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ZJEDROKY", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("ZJEDDNY", Global.System.Data.OleDb.OleDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ZJEDDNY", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("ZJEDDAT", Global.System.Data.OleDb.OleDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ZJEDDAT", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("TABULKA", Global.System.Data.OleDb.OleDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "TABULKA", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("LH_ZDRAV", Global.System.Data.OleDb.OleDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LH_ZDRAV", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("LH_BOZP", Global.System.Data.OleDb.OleDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LH_BOZP", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("LH_SIPVZ", Global.System.Data.OleDb.OleDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LH_SIPVZ", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("LH_SKOL", Global.System.Data.OleDb.OleDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LH_SKOL", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("PRIJMENI", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PRIJMENI", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("DRUH_PRACDOB", Global.System.Data.OleDb.OleDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DRUH_PRACDOB", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("DRUH_PRACREZ", Global.System.Data.OleDb.OleDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DRUH_PRACREZ", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("DAT_KONEC_PP", Global.System.Data.OleDb.OleDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DAT_KONEC_PP", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("DAT_UZAV_PS", Global.System.Data.OleDb.OleDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DAT_UZAV_PS", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("ERR", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ERR", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("ZVLZDRAV", Global.System.Data.OleDb.OleDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ZVLZDRAV", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("VOLIT3", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "VOLIT3", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("LH_MDRD", Global.System.Data.OleDb.OleDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LH_MDRD", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("BYD_ULICE", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BYD_ULICE", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("PRAX_PV", Global.System.Data.OleDb.OleDbType.[Double], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PRAX_PV", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("PRAX_PV_DNY", Global.System.Data.OleDb.OleDbType.[Double], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PRAX_PV_DNY", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("PRAX_PV_DAT", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PRAX_PV_DAT", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("ZIVVYR", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ZIVVYR", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("ZIVVYR_DAT", Global.System.Data.OleDb.OleDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ZIVVYR_DAT", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("PED_ZARAZENI", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PED_ZARAZENI", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("PED_ZPUSOBILOST", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PED_ZPUSOBILOST", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("OLDTABULKA", Global.System.Data.OleDb.OleDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "OLDTABULKA", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("VOLIT1", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "VOLIT1", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("VOLIT2", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "VOLIT2", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("VP_SJ", Global.System.Data.OleDb.OleDbType.[Single], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "VP_SJ", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("VP_PL", Global.System.Data.OleDb.OleDbType.[Single], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "VP_PL", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("ROZPETI_BLN", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ROZPETI_BLN", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("CHRAN_TARIFKC", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CHRAN_TARIFKC", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("CHRAN_OSOBA", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CHRAN_OSOBA", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("PRAX_VYKAZ", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PRAX_VYKAZ", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_ID", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ID", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_JMENO", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "JMENO", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_JMENO", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "JMENO", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_TITUL", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "TITUL", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_TITUL", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "TITUL", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_EV_CISLO", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "EV_CISLO", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_EV_CISLO", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "EV_CISLO", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_PROV_CISLO", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PROV_CISLO", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_PROV_CISLO", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PROV_CISLO", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_ROD_CISLO", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ROD_CISLO", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_ROD_CISLO", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ROD_CISLO", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_PPV", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PPV", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_PPV", Global.System.Data.OleDb.OleDbType.UnsignedTinyInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PPV", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_BYD_PSC", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BYD_PSC", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_BYD_PSC", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BYD_PSC", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_BYD_MISTO", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BYD_MISTO", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_BYD_MISTO", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BYD_MISTO", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_ROZPETI", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ROZPETI", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_ROZPETI", Global.System.Data.OleDb.OleDbType.UnsignedTinyInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ROZPETI", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_VZD_DOSA", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "VZD_DOSA", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_VZD_DOSA", Global.System.Data.OleDb.OleDbType.UnsignedTinyInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "VZD_DOSA", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_VZD_POZA", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "VZD_POZA", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_VZD_POZA", Global.System.Data.OleDb.OleDbType.UnsignedTinyInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "VZD_POZA", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_VZD_POZ_DA", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "VZD_POZ_DA", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_VZD_POZ_DA", Global.System.Data.OleDb.OleDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "VZD_POZ_DA", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_TYP_POZ", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "TYP_POZ", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_TYP_POZ", Global.System.Data.OleDb.OleDbType.UnsignedTinyInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "TYP_POZ", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_ODPOCET", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ODPOCET", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_ODPOCET", Global.System.Data.OleDb.OleDbType.[Double], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ODPOCET", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_NEMINUS", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "NEMINUS", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_NEMINUS", Global.System.Data.OleDb.OleDbType.[Double], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "NEMINUS", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_PRV_ZAR", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PRV_ZAR", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_PRV_ZAR", Global.System.Data.OleDb.OleDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PRV_ZAR", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_PRAX", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PRAX", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_PRAX", Global.System.Data.OleDb.OleDbType.[Double], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PRAX", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_PRAX_DNY", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PRAX_DNY", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_PRAX_DNY", Global.System.Data.OleDb.OleDbType.[Double], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PRAX_DNY", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_STUPEN", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "STUPEN", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_STUPEN", Global.System.Data.OleDb.OleDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "STUPEN", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_TRIDA", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "TRIDA", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_TRIDA", Global.System.Data.OleDb.OleDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "TRIDA", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_TARIFKC", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "TARIFKC", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_TARIFKC", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "TARIFKC", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_TARIFZVYSPROC", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "TARIFZVYSPROC", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_TARIFZVYSPROC", Global.System.Data.OleDb.OleDbType.[Single], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "TARIFZVYSPROC", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_OSPRIPKC", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "OSPRIPKC", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_OSPRIPKC", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "OSPRIPKC", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_VEDENI", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "VEDENI", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_VEDENI", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "VEDENI", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_ZTIZENE", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ZTIZENE", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_ZTIZENE", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ZTIZENE", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_SMENNOST", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "SMENNOST", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_SMENNOST", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "SMENNOST", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_ZVLASTNI", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ZVLASTNI", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_ZVLASTNI", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ZVLASTNI", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_OD", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "OD", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_OD", Global.System.Data.OleDb.OleDbType.UnsignedTinyInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "OD", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_DATUMOD", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DATUMOD", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_DATUMOD", Global.System.Data.OleDb.OleDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DATUMOD", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_DAT_NOV_TR", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DAT_NOV_TR", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_DAT_NOV_TR", Global.System.Data.OleDb.OleDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DAT_NOV_TR", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_DAT_NOV_TR_TXT", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DAT_NOV_TR_TXT", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_DAT_NOV_TR_TXT", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DAT_NOV_TR_TXT", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_D_NASTUPU", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "D_NASTUPU", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_D_NASTUPU", Global.System.Data.OleDb.OleDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "D_NASTUPU", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_D_VYSTUPU", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "D_VYSTUPU", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_D_VYSTUPU", Global.System.Data.OleDb.OleDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "D_VYSTUPU", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_USEK", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "USEK", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_USEK", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "USEK", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_TISK", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "TISK", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_TISK", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "TISK", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_NEURCI", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "NEURCI", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_NEURCI", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "NEURCI", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_URCI_DO", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "URCI_DO", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_URCI_DO", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "URCI_DO", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_ZKUDOBA", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ZKUDOBA", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_ZKUDOBA", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ZKUDOBA", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_ZKUD_DO", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ZKUD_DO", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_ZKUD_DO", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ZKUD_DO", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_DALUJ", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DALUJ", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_DALUJ", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DALUJ", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_ROD_PRIJ", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ROD_PRIJ", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_ROD_PRIJ", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ROD_PRIJ", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_MIST_NAR", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "MIST_NAR", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_MIST_NAR", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "MIST_NAR", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_ZDR_POJ", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ZDR_POJ", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_ZDR_POJ", Global.System.Data.OleDb.OleDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ZDR_POJ", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_DUCHOD", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DUCHOD", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_DUCHOD", Global.System.Data.OleDb.OleDbType.UnsignedTinyInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DUCHOD", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_CESTY", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CESTY", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_CESTY", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CESTY", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_PED", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PED", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_PED", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PED", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_PREP", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PREP", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_PREP", Global.System.Data.OleDb.OleDbType.[Double], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PREP", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_ZPUS", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ZPUS", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_ZPUS", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ZPUS", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_ZPUS_DAT", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ZPUS_DAT", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_ZPUS_DAT", Global.System.Data.OleDb.OleDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ZPUS_DAT", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_CELEJMENO", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CELEJMENO", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_CELEJMENO", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CELEJMENO", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_PPV_SOUB", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PPV_SOUB", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_PPV_SOUB", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PPV_SOUB", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_ZPS", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ZPS", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_ZPS", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ZPS", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_PRIPVED", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PRIPVED", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_PRIPVED", Global.System.Data.OleDb.OleDbType.UnsignedTinyInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PRIPVED", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_PRACOV", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PRACOV", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_PRACOV", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PRACOV", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_FUNKCE", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "FUNKCE", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_FUNKCE", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "FUNKCE", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_PLATCELK", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PLATCELK", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_PLATCELK", Global.System.Data.OleDb.OleDbType.[Double], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PLATCELK", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_VOLIT4", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "VOLIT4", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_VOLIT4", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "VOLIT4", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_VOLIT5", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "VOLIT5", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_VOLIT5", Global.System.Data.OleDb.OleDbType.[Double], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "VOLIT5", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_VOLIT6", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "VOLIT6", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_VOLIT6", Global.System.Data.OleDb.OleDbType.[Double], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "VOLIT6", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_ZP25X", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ZP25X", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_ZP25X", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ZP25X", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_NOVATRIDA", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "NOVATRIDA", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_NOVATRIDA", Global.System.Data.OleDb.OleDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "NOVATRIDA", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_ZP25X_ZNAK", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ZP25X_ZNAK", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_ZP25X_ZNAK", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ZP25X_ZNAK", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_DAT_NAROZ", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DAT_NAROZ", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_DAT_NAROZ", Global.System.Data.OleDb.OleDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DAT_NAROZ", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_SPECPRIPPED", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "SPECPRIPPED", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_SPECPRIPPED", Global.System.Data.OleDb.OleDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "SPECPRIPPED", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_ZJED", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ZJED", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_ZJED", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ZJED", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_ZJEDROKY", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ZJEDROKY", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_ZJEDROKY", Global.System.Data.OleDb.OleDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ZJEDROKY", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_ZJEDDNY", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ZJEDDNY", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_ZJEDDNY", Global.System.Data.OleDb.OleDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ZJEDDNY", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_ZJEDDAT", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ZJEDDAT", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_ZJEDDAT", Global.System.Data.OleDb.OleDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ZJEDDAT", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_TABULKA", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "TABULKA", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_TABULKA", Global.System.Data.OleDb.OleDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "TABULKA", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_LH_ZDRAV", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LH_ZDRAV", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_LH_ZDRAV", Global.System.Data.OleDb.OleDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LH_ZDRAV", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_LH_BOZP", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LH_BOZP", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_LH_BOZP", Global.System.Data.OleDb.OleDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LH_BOZP", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_LH_SIPVZ", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LH_SIPVZ", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_LH_SIPVZ", Global.System.Data.OleDb.OleDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LH_SIPVZ", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_LH_SKOL", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LH_SKOL", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_LH_SKOL", Global.System.Data.OleDb.OleDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LH_SKOL", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_PRIJMENI", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PRIJMENI", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_PRIJMENI", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PRIJMENI", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_DRUH_PRACDOB", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DRUH_PRACDOB", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_DRUH_PRACDOB", Global.System.Data.OleDb.OleDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DRUH_PRACDOB", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_DRUH_PRACREZ", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DRUH_PRACREZ", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_DRUH_PRACREZ", Global.System.Data.OleDb.OleDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DRUH_PRACREZ", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_DAT_KONEC_PP", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DAT_KONEC_PP", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_DAT_KONEC_PP", Global.System.Data.OleDb.OleDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DAT_KONEC_PP", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_DAT_UZAV_PS", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DAT_UZAV_PS", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_DAT_UZAV_PS", Global.System.Data.OleDb.OleDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DAT_UZAV_PS", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_ERR", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ERR", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_ERR", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ERR", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_ZVLZDRAV", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ZVLZDRAV", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_ZVLZDRAV", Global.System.Data.OleDb.OleDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ZVLZDRAV", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_VOLIT3", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "VOLIT3", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_VOLIT3", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "VOLIT3", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_LH_MDRD", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LH_MDRD", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_LH_MDRD", Global.System.Data.OleDb.OleDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LH_MDRD", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_BYD_ULICE", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BYD_ULICE", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_BYD_ULICE", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BYD_ULICE", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_PRAX_PV", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PRAX_PV", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_PRAX_PV", Global.System.Data.OleDb.OleDbType.[Double], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PRAX_PV", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_PRAX_PV_DNY", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PRAX_PV_DNY", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_PRAX_PV_DNY", Global.System.Data.OleDb.OleDbType.[Double], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PRAX_PV_DNY", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_PRAX_PV_DAT", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PRAX_PV_DAT", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_PRAX_PV_DAT", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PRAX_PV_DAT", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_ZIVVYR", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ZIVVYR", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_ZIVVYR", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ZIVVYR", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_ZIVVYR_DAT", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ZIVVYR_DAT", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_ZIVVYR_DAT", Global.System.Data.OleDb.OleDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ZIVVYR_DAT", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_PED_ZARAZENI", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PED_ZARAZENI", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_PED_ZARAZENI", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PED_ZARAZENI", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_PED_ZPUSOBILOST", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PED_ZPUSOBILOST", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_PED_ZPUSOBILOST", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PED_ZPUSOBILOST", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_OLDTABULKA", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "OLDTABULKA", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_OLDTABULKA", Global.System.Data.OleDb.OleDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "OLDTABULKA", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_VOLIT1", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "VOLIT1", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_VOLIT1", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "VOLIT1", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_VOLIT2", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "VOLIT2", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_VOLIT2", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "VOLIT2", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_VP_SJ", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "VP_SJ", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_VP_SJ", Global.System.Data.OleDb.OleDbType.[Single], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "VP_SJ", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_VP_PL", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "VP_PL", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_VP_PL", Global.System.Data.OleDb.OleDbType.[Single], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "VP_PL", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_ROZPETI_BLN", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ROZPETI_BLN", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_ROZPETI_BLN", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ROZPETI_BLN", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_CHRAN_TARIFKC", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CHRAN_TARIFKC", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_CHRAN_TARIFKC", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CHRAN_TARIFKC", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_CHRAN_OSOBA", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CHRAN_OSOBA", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_CHRAN_OSOBA", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CHRAN_OSOBA", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_PRAX_VYKAZ", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PRAX_VYKAZ", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_PRAX_VYKAZ", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PRAX_VYKAZ", Global.System.Data.DataRowVersion.Original, false, Nothing))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.OleDb.OleDbConnection()
            Me._connection.ConnectionString = Global.Platy.My.MySettings.Default.persConnectionString1
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.OleDb.OleDbCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.OleDb.OleDbCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT ID, JMENO, TITUL, EV_CISLO, PROV_CISLO, ROD_CISLO, PPV, BYD_PSC, BYD_MISTO"& _ 
                ", ROZPETI, VZD_DOSA, VZD_POZA, VZD_POZ_DA, TYP_POZ, ODPOCET, NEMINUS, PRV_ZAR, P"& _ 
                "RAX, PRAX_DNY, STUPEN, TRIDA, TARIFKC, TARIFZVYSPROC, OSPRIPKC, VEDENI, ZTIZENE,"& _ 
                " SMENNOST, ZVLASTNI, OD, DATUMOD, DAT_NOV_TR, DAT_NOV_TR_TXT, D_NASTUPU, D_VYSTU"& _ 
                "PU, USEK, TISK, NEURCI, URCI_DO, ZKUDOBA, ZKUD_DO, DALUJ, ROD_PRIJ, MIST_NAR, ZD"& _ 
                "R_POJ, DUCHOD, CESTY, PED, PREP, ZPUS, ZPUS_DAT, DALUJ_TEXT, CELEJMENO, PPV_SOUB"& _ 
                ", ZPS, POZNAMKA, PRIPVED, PRACOV, FUNKCE, PLATCELK, VOLIT4, VOLIT5, VOLIT6, ZP25"& _ 
                "X, NOVATRIDA, ZP25X_ZNAK, DAT_NAROZ, SPECPRIPPED, ZJED, ZJEDROKY, ZJEDDNY, ZJEDD"& _ 
                "AT, TABULKA, LH_ZDRAV, LH_BOZP, LH_SIPVZ, LH_SKOL, PRIJMENI, DRUH_PRACDOB, DRUH_"& _ 
                "PRACREZ, DAT_KONEC_PP, DAT_UZAV_PS, ERR, ZVLZDRAV, VOLIT3, LH_MDRD, BYD_ULICE, P"& _ 
                "RAX_PV, PRAX_PV_DNY, PRAX_PV_DAT, ZIVVYR, ZIVVYR_DAT, PED_ZARAZENI, PED_ZPUSOBIL"& _ 
                "OST, OLDTABULKA, VOLIT1, VOLIT2, VP_SJ, VP_PL, ROZPETI_BLN, CHRAN_TARIFKC, CHRAN"& _ 
                "_OSOBA, PRAX_VYKAZ FROM PERS"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DS_pers.PERSDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As DS_pers.PERSDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As DS_pers.PERSDataTable = New DS_pers.PERSDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As DS_pers.PERSDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As DS_pers) As Integer
            Return Me.Adapter.Update(dataSet, "PERS")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete( _
                    ByVal Original_ID As Integer,  _
                    ByVal Original_JMENO As String,  _
                    ByVal Original_TITUL As String,  _
                    ByVal Original_EV_CISLO As Global.System.Nullable(Of Integer),  _
                    ByVal Original_PROV_CISLO As String,  _
                    ByVal Original_ROD_CISLO As String,  _
                    ByVal Original_PPV As Byte,  _
                    ByVal Original_BYD_PSC As String,  _
                    ByVal Original_BYD_MISTO As String,  _
                    ByVal Original_ROZPETI As Global.System.Nullable(Of Byte),  _
                    ByVal Original_VZD_DOSA As Global.System.Nullable(Of Byte),  _
                    ByVal Original_VZD_POZA As Global.System.Nullable(Of Byte),  _
                    ByVal Original_VZD_POZ_DA As Global.System.Nullable(Of Date),  _
                    ByVal Original_TYP_POZ As Byte,  _
                    ByVal Original_ODPOCET As Global.System.Nullable(Of Double),  _
                    ByVal Original_NEMINUS As Global.System.Nullable(Of Double),  _
                    ByVal Original_PRV_ZAR As Global.System.Nullable(Of Date),  _
                    ByVal Original_PRAX As Global.System.Nullable(Of Double),  _
                    ByVal Original_PRAX_DNY As Global.System.Nullable(Of Double),  _
                    ByVal Original_STUPEN As Global.System.Nullable(Of Short),  _
                    ByVal Original_TRIDA As Global.System.Nullable(Of Short),  _
                    ByVal Original_TARIFKC As Global.System.Nullable(Of Integer),  _
                    ByVal Original_TARIFZVYSPROC As Global.System.Nullable(Of Single),  _
                    ByVal Original_OSPRIPKC As Global.System.Nullable(Of Integer),  _
                    ByVal Original_VEDENI As Global.System.Nullable(Of Integer),  _
                    ByVal Original_ZTIZENE As Global.System.Nullable(Of Integer),  _
                    ByVal Original_SMENNOST As Global.System.Nullable(Of Integer),  _
                    ByVal Original_ZVLASTNI As Global.System.Nullable(Of Integer),  _
                    ByVal Original_OD As Global.System.Nullable(Of Byte),  _
                    ByVal Original_DATUMOD As Global.System.Nullable(Of Date),  _
                    ByVal Original_DAT_NOV_TR As Global.System.Nullable(Of Date),  _
                    ByVal Original_DAT_NOV_TR_TXT As String,  _
                    ByVal Original_D_NASTUPU As Global.System.Nullable(Of Date),  _
                    ByVal Original_D_VYSTUPU As Global.System.Nullable(Of Date),  _
                    ByVal Original_USEK As String,  _
                    ByVal Original_TISK As Boolean,  _
                    ByVal Original_NEURCI As Boolean,  _
                    ByVal Original_URCI_DO As String,  _
                    ByVal Original_ZKUDOBA As Boolean,  _
                    ByVal Original_ZKUD_DO As String,  _
                    ByVal Original_DALUJ As Boolean,  _
                    ByVal Original_ROD_PRIJ As String,  _
                    ByVal Original_MIST_NAR As String,  _
                    ByVal Original_ZDR_POJ As Global.System.Nullable(Of Short),  _
                    ByVal Original_DUCHOD As Global.System.Nullable(Of Byte),  _
                    ByVal Original_CESTY As Boolean,  _
                    ByVal Original_PED As Boolean,  _
                    ByVal Original_PREP As Global.System.Nullable(Of Double),  _
                    ByVal Original_ZPUS As Boolean,  _
                    ByVal Original_ZPUS_DAT As Global.System.Nullable(Of Date),  _
                    ByVal Original_CELEJMENO As String,  _
                    ByVal Original_PPV_SOUB As Boolean,  _
                    ByVal Original_ZPS As Boolean,  _
                    ByVal Original_PRIPVED As Global.System.Nullable(Of Byte),  _
                    ByVal Original_PRACOV As String,  _
                    ByVal Original_FUNKCE As String,  _
                    ByVal Original_PLATCELK As Global.System.Nullable(Of Double),  _
                    ByVal Original_VOLIT4 As String,  _
                    ByVal Original_VOLIT5 As Global.System.Nullable(Of Double),  _
                    ByVal Original_VOLIT6 As Global.System.Nullable(Of Double),  _
                    ByVal Original_ZP25X As Boolean,  _
                    ByVal Original_NOVATRIDA As Global.System.Nullable(Of Short),  _
                    ByVal Original_ZP25X_ZNAK As String,  _
                    ByVal Original_DAT_NAROZ As Global.System.Nullable(Of Date),  _
                    ByVal Original_SPECPRIPPED As Global.System.Nullable(Of Short),  _
                    ByVal Original_ZJED As Boolean,  _
                    ByVal Original_ZJEDROKY As Global.System.Nullable(Of Short),  _
                    ByVal Original_ZJEDDNY As Global.System.Nullable(Of Short),  _
                    ByVal Original_ZJEDDAT As Global.System.Nullable(Of Date),  _
                    ByVal Original_TABULKA As Global.System.Nullable(Of Short),  _
                    ByVal Original_LH_ZDRAV As Global.System.Nullable(Of Date),  _
                    ByVal Original_LH_BOZP As Global.System.Nullable(Of Date),  _
                    ByVal Original_LH_SIPVZ As Global.System.Nullable(Of Date),  _
                    ByVal Original_LH_SKOL As Global.System.Nullable(Of Date),  _
                    ByVal Original_PRIJMENI As String,  _
                    ByVal Original_DRUH_PRACDOB As Global.System.Nullable(Of Short),  _
                    ByVal Original_DRUH_PRACREZ As Global.System.Nullable(Of Short),  _
                    ByVal Original_DAT_KONEC_PP As Global.System.Nullable(Of Date),  _
                    ByVal Original_DAT_UZAV_PS As Global.System.Nullable(Of Date),  _
                    ByVal Original_ERR As String,  _
                    ByVal Original_ZVLZDRAV As Global.System.Nullable(Of Short),  _
                    ByVal Original_VOLIT3 As String,  _
                    ByVal Original_LH_MDRD As Global.System.Nullable(Of Date),  _
                    ByVal Original_BYD_ULICE As String,  _
                    ByVal Original_PRAX_PV As Global.System.Nullable(Of Double),  _
                    ByVal Original_PRAX_PV_DNY As Global.System.Nullable(Of Double),  _
                    ByVal Original_PRAX_PV_DAT As String,  _
                    ByVal Original_ZIVVYR As Global.System.Nullable(Of Integer),  _
                    ByVal Original_ZIVVYR_DAT As Global.System.Nullable(Of Date),  _
                    ByVal Original_PED_ZARAZENI As Boolean,  _
                    ByVal Original_PED_ZPUSOBILOST As Boolean,  _
                    ByVal Original_OLDTABULKA As Global.System.Nullable(Of Short),  _
                    ByVal Original_VOLIT1 As String,  _
                    ByVal Original_VOLIT2 As String,  _
                    ByVal Original_VP_SJ As Global.System.Nullable(Of Single),  _
                    ByVal Original_VP_PL As Global.System.Nullable(Of Single),  _
                    ByVal Original_ROZPETI_BLN As Boolean,  _
                    ByVal Original_CHRAN_TARIFKC As Global.System.Nullable(Of Integer),  _
                    ByVal Original_CHRAN_OSOBA As Boolean,  _
                    ByVal Original_PRAX_VYKAZ As String) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_ID,Integer)
            If (Original_JMENO Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_JMENO,String)
            End If
            If (Original_TITUL Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(Original_TITUL,String)
            End If
            If (Original_EV_CISLO.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = CType(Original_EV_CISLO.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (Original_PROV_CISLO Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(8).Value = CType(Original_PROV_CISLO,String)
            End If
            If (Original_ROD_CISLO Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(10).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(10).Value = CType(Original_ROD_CISLO,String)
            End If
            Me.Adapter.DeleteCommand.Parameters(11).Value = CType(0,Object)
            Me.Adapter.DeleteCommand.Parameters(12).Value = CType(Original_PPV,Byte)
            If (Original_BYD_PSC Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(13).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(14).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(13).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(14).Value = CType(Original_BYD_PSC,String)
            End If
            If (Original_BYD_MISTO Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(15).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(16).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(15).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(16).Value = CType(Original_BYD_MISTO,String)
            End If
            If (Original_ROZPETI.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(17).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(18).Value = CType(Original_ROZPETI.Value,Byte)
            Else
                Me.Adapter.DeleteCommand.Parameters(17).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(18).Value = Global.System.DBNull.Value
            End If
            If (Original_VZD_DOSA.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(19).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(20).Value = CType(Original_VZD_DOSA.Value,Byte)
            Else
                Me.Adapter.DeleteCommand.Parameters(19).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(20).Value = Global.System.DBNull.Value
            End If
            If (Original_VZD_POZA.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(21).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(22).Value = CType(Original_VZD_POZA.Value,Byte)
            Else
                Me.Adapter.DeleteCommand.Parameters(21).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(22).Value = Global.System.DBNull.Value
            End If
            If (Original_VZD_POZ_DA.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(23).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(24).Value = CType(Original_VZD_POZ_DA.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(23).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(24).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.DeleteCommand.Parameters(25).Value = CType(0,Object)
            Me.Adapter.DeleteCommand.Parameters(26).Value = CType(Original_TYP_POZ,Byte)
            If (Original_ODPOCET.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(27).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(28).Value = CType(Original_ODPOCET.Value,Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(27).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(28).Value = Global.System.DBNull.Value
            End If
            If (Original_NEMINUS.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(29).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(30).Value = CType(Original_NEMINUS.Value,Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(29).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(30).Value = Global.System.DBNull.Value
            End If
            If (Original_PRV_ZAR.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(31).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(32).Value = CType(Original_PRV_ZAR.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(31).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(32).Value = Global.System.DBNull.Value
            End If
            If (Original_PRAX.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(33).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(34).Value = CType(Original_PRAX.Value,Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(33).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(34).Value = Global.System.DBNull.Value
            End If
            If (Original_PRAX_DNY.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(35).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(36).Value = CType(Original_PRAX_DNY.Value,Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(35).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(36).Value = Global.System.DBNull.Value
            End If
            If (Original_STUPEN.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(37).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(38).Value = CType(Original_STUPEN.Value,Short)
            Else
                Me.Adapter.DeleteCommand.Parameters(37).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(38).Value = Global.System.DBNull.Value
            End If
            If (Original_TRIDA.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(39).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(40).Value = CType(Original_TRIDA.Value,Short)
            Else
                Me.Adapter.DeleteCommand.Parameters(39).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(40).Value = Global.System.DBNull.Value
            End If
            If (Original_TARIFKC.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(41).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(42).Value = CType(Original_TARIFKC.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(41).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(42).Value = Global.System.DBNull.Value
            End If
            If (Original_TARIFZVYSPROC.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(43).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(44).Value = CType(Original_TARIFZVYSPROC.Value,Single)
            Else
                Me.Adapter.DeleteCommand.Parameters(43).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(44).Value = Global.System.DBNull.Value
            End If
            If (Original_OSPRIPKC.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(45).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(46).Value = CType(Original_OSPRIPKC.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(45).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(46).Value = Global.System.DBNull.Value
            End If
            If (Original_VEDENI.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(47).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(48).Value = CType(Original_VEDENI.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(47).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(48).Value = Global.System.DBNull.Value
            End If
            If (Original_ZTIZENE.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(49).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(50).Value = CType(Original_ZTIZENE.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(49).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(50).Value = Global.System.DBNull.Value
            End If
            If (Original_SMENNOST.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(51).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(52).Value = CType(Original_SMENNOST.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(51).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(52).Value = Global.System.DBNull.Value
            End If
            If (Original_ZVLASTNI.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(53).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(54).Value = CType(Original_ZVLASTNI.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(53).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(54).Value = Global.System.DBNull.Value
            End If
            If (Original_OD.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(55).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(56).Value = CType(Original_OD.Value,Byte)
            Else
                Me.Adapter.DeleteCommand.Parameters(55).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(56).Value = Global.System.DBNull.Value
            End If
            If (Original_DATUMOD.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(57).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(58).Value = CType(Original_DATUMOD.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(57).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(58).Value = Global.System.DBNull.Value
            End If
            If (Original_DAT_NOV_TR.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(59).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(60).Value = CType(Original_DAT_NOV_TR.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(59).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(60).Value = Global.System.DBNull.Value
            End If
            If (Original_DAT_NOV_TR_TXT Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(61).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(62).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(61).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(62).Value = CType(Original_DAT_NOV_TR_TXT,String)
            End If
            If (Original_D_NASTUPU.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(63).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(64).Value = CType(Original_D_NASTUPU.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(63).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(64).Value = Global.System.DBNull.Value
            End If
            If (Original_D_VYSTUPU.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(65).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(66).Value = CType(Original_D_VYSTUPU.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(65).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(66).Value = Global.System.DBNull.Value
            End If
            If (Original_USEK Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(67).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(68).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(67).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(68).Value = CType(Original_USEK,String)
            End If
            Me.Adapter.DeleteCommand.Parameters(69).Value = CType(0,Object)
            Me.Adapter.DeleteCommand.Parameters(70).Value = CType(Original_TISK,Boolean)
            Me.Adapter.DeleteCommand.Parameters(71).Value = CType(0,Object)
            Me.Adapter.DeleteCommand.Parameters(72).Value = CType(Original_NEURCI,Boolean)
            If (Original_URCI_DO Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(73).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(74).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(73).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(74).Value = CType(Original_URCI_DO,String)
            End If
            Me.Adapter.DeleteCommand.Parameters(75).Value = CType(0,Object)
            Me.Adapter.DeleteCommand.Parameters(76).Value = CType(Original_ZKUDOBA,Boolean)
            If (Original_ZKUD_DO Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(77).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(78).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(77).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(78).Value = CType(Original_ZKUD_DO,String)
            End If
            Me.Adapter.DeleteCommand.Parameters(79).Value = CType(0,Object)
            Me.Adapter.DeleteCommand.Parameters(80).Value = CType(Original_DALUJ,Boolean)
            If (Original_ROD_PRIJ Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(81).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(82).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(81).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(82).Value = CType(Original_ROD_PRIJ,String)
            End If
            If (Original_MIST_NAR Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(83).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(84).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(83).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(84).Value = CType(Original_MIST_NAR,String)
            End If
            If (Original_ZDR_POJ.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(85).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(86).Value = CType(Original_ZDR_POJ.Value,Short)
            Else
                Me.Adapter.DeleteCommand.Parameters(85).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(86).Value = Global.System.DBNull.Value
            End If
            If (Original_DUCHOD.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(87).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(88).Value = CType(Original_DUCHOD.Value,Byte)
            Else
                Me.Adapter.DeleteCommand.Parameters(87).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(88).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.DeleteCommand.Parameters(89).Value = CType(0,Object)
            Me.Adapter.DeleteCommand.Parameters(90).Value = CType(Original_CESTY,Boolean)
            Me.Adapter.DeleteCommand.Parameters(91).Value = CType(0,Object)
            Me.Adapter.DeleteCommand.Parameters(92).Value = CType(Original_PED,Boolean)
            If (Original_PREP.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(93).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(94).Value = CType(Original_PREP.Value,Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(93).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(94).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.DeleteCommand.Parameters(95).Value = CType(0,Object)
            Me.Adapter.DeleteCommand.Parameters(96).Value = CType(Original_ZPUS,Boolean)
            If (Original_ZPUS_DAT.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(97).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(98).Value = CType(Original_ZPUS_DAT.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(97).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(98).Value = Global.System.DBNull.Value
            End If
            If (Original_CELEJMENO Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(99).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(100).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(99).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(100).Value = CType(Original_CELEJMENO,String)
            End If
            Me.Adapter.DeleteCommand.Parameters(101).Value = CType(0,Object)
            Me.Adapter.DeleteCommand.Parameters(102).Value = CType(Original_PPV_SOUB,Boolean)
            Me.Adapter.DeleteCommand.Parameters(103).Value = CType(0,Object)
            Me.Adapter.DeleteCommand.Parameters(104).Value = CType(Original_ZPS,Boolean)
            If (Original_PRIPVED.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(105).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(106).Value = CType(Original_PRIPVED.Value,Byte)
            Else
                Me.Adapter.DeleteCommand.Parameters(105).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(106).Value = Global.System.DBNull.Value
            End If
            If (Original_PRACOV Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(107).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(108).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(107).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(108).Value = CType(Original_PRACOV,String)
            End If
            If (Original_FUNKCE Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(109).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(110).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(109).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(110).Value = CType(Original_FUNKCE,String)
            End If
            If (Original_PLATCELK.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(111).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(112).Value = CType(Original_PLATCELK.Value,Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(111).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(112).Value = Global.System.DBNull.Value
            End If
            If (Original_VOLIT4 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(113).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(114).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(113).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(114).Value = CType(Original_VOLIT4,String)
            End If
            If (Original_VOLIT5.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(115).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(116).Value = CType(Original_VOLIT5.Value,Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(115).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(116).Value = Global.System.DBNull.Value
            End If
            If (Original_VOLIT6.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(117).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(118).Value = CType(Original_VOLIT6.Value,Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(117).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(118).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.DeleteCommand.Parameters(119).Value = CType(0,Object)
            Me.Adapter.DeleteCommand.Parameters(120).Value = CType(Original_ZP25X,Boolean)
            If (Original_NOVATRIDA.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(121).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(122).Value = CType(Original_NOVATRIDA.Value,Short)
            Else
                Me.Adapter.DeleteCommand.Parameters(121).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(122).Value = Global.System.DBNull.Value
            End If
            If (Original_ZP25X_ZNAK Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(123).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(124).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(123).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(124).Value = CType(Original_ZP25X_ZNAK,String)
            End If
            If (Original_DAT_NAROZ.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(125).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(126).Value = CType(Original_DAT_NAROZ.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(125).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(126).Value = Global.System.DBNull.Value
            End If
            If (Original_SPECPRIPPED.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(127).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(128).Value = CType(Original_SPECPRIPPED.Value,Short)
            Else
                Me.Adapter.DeleteCommand.Parameters(127).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(128).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.DeleteCommand.Parameters(129).Value = CType(0,Object)
            Me.Adapter.DeleteCommand.Parameters(130).Value = CType(Original_ZJED,Boolean)
            If (Original_ZJEDROKY.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(131).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(132).Value = CType(Original_ZJEDROKY.Value,Short)
            Else
                Me.Adapter.DeleteCommand.Parameters(131).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(132).Value = Global.System.DBNull.Value
            End If
            If (Original_ZJEDDNY.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(133).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(134).Value = CType(Original_ZJEDDNY.Value,Short)
            Else
                Me.Adapter.DeleteCommand.Parameters(133).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(134).Value = Global.System.DBNull.Value
            End If
            If (Original_ZJEDDAT.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(135).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(136).Value = CType(Original_ZJEDDAT.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(135).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(136).Value = Global.System.DBNull.Value
            End If
            If (Original_TABULKA.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(137).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(138).Value = CType(Original_TABULKA.Value,Short)
            Else
                Me.Adapter.DeleteCommand.Parameters(137).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(138).Value = Global.System.DBNull.Value
            End If
            If (Original_LH_ZDRAV.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(139).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(140).Value = CType(Original_LH_ZDRAV.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(139).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(140).Value = Global.System.DBNull.Value
            End If
            If (Original_LH_BOZP.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(141).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(142).Value = CType(Original_LH_BOZP.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(141).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(142).Value = Global.System.DBNull.Value
            End If
            If (Original_LH_SIPVZ.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(143).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(144).Value = CType(Original_LH_SIPVZ.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(143).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(144).Value = Global.System.DBNull.Value
            End If
            If (Original_LH_SKOL.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(145).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(146).Value = CType(Original_LH_SKOL.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(145).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(146).Value = Global.System.DBNull.Value
            End If
            If (Original_PRIJMENI Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(147).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(148).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(147).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(148).Value = CType(Original_PRIJMENI,String)
            End If
            If (Original_DRUH_PRACDOB.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(149).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(150).Value = CType(Original_DRUH_PRACDOB.Value,Short)
            Else
                Me.Adapter.DeleteCommand.Parameters(149).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(150).Value = Global.System.DBNull.Value
            End If
            If (Original_DRUH_PRACREZ.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(151).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(152).Value = CType(Original_DRUH_PRACREZ.Value,Short)
            Else
                Me.Adapter.DeleteCommand.Parameters(151).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(152).Value = Global.System.DBNull.Value
            End If
            If (Original_DAT_KONEC_PP.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(153).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(154).Value = CType(Original_DAT_KONEC_PP.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(153).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(154).Value = Global.System.DBNull.Value
            End If
            If (Original_DAT_UZAV_PS.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(155).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(156).Value = CType(Original_DAT_UZAV_PS.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(155).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(156).Value = Global.System.DBNull.Value
            End If
            If (Original_ERR Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(157).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(158).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(157).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(158).Value = CType(Original_ERR,String)
            End If
            If (Original_ZVLZDRAV.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(159).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(160).Value = CType(Original_ZVLZDRAV.Value,Short)
            Else
                Me.Adapter.DeleteCommand.Parameters(159).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(160).Value = Global.System.DBNull.Value
            End If
            If (Original_VOLIT3 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(161).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(162).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(161).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(162).Value = CType(Original_VOLIT3,String)
            End If
            If (Original_LH_MDRD.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(163).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(164).Value = CType(Original_LH_MDRD.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(163).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(164).Value = Global.System.DBNull.Value
            End If
            If (Original_BYD_ULICE Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(165).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(166).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(165).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(166).Value = CType(Original_BYD_ULICE,String)
            End If
            If (Original_PRAX_PV.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(167).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(168).Value = CType(Original_PRAX_PV.Value,Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(167).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(168).Value = Global.System.DBNull.Value
            End If
            If (Original_PRAX_PV_DNY.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(169).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(170).Value = CType(Original_PRAX_PV_DNY.Value,Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(169).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(170).Value = Global.System.DBNull.Value
            End If
            If (Original_PRAX_PV_DAT Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(171).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(172).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(171).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(172).Value = CType(Original_PRAX_PV_DAT,String)
            End If
            If (Original_ZIVVYR.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(173).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(174).Value = CType(Original_ZIVVYR.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(173).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(174).Value = Global.System.DBNull.Value
            End If
            If (Original_ZIVVYR_DAT.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(175).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(176).Value = CType(Original_ZIVVYR_DAT.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(175).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(176).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.DeleteCommand.Parameters(177).Value = CType(0,Object)
            Me.Adapter.DeleteCommand.Parameters(178).Value = CType(Original_PED_ZARAZENI,Boolean)
            Me.Adapter.DeleteCommand.Parameters(179).Value = CType(0,Object)
            Me.Adapter.DeleteCommand.Parameters(180).Value = CType(Original_PED_ZPUSOBILOST,Boolean)
            If (Original_OLDTABULKA.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(181).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(182).Value = CType(Original_OLDTABULKA.Value,Short)
            Else
                Me.Adapter.DeleteCommand.Parameters(181).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(182).Value = Global.System.DBNull.Value
            End If
            If (Original_VOLIT1 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(183).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(184).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(183).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(184).Value = CType(Original_VOLIT1,String)
            End If
            If (Original_VOLIT2 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(185).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(186).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(185).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(186).Value = CType(Original_VOLIT2,String)
            End If
            If (Original_VP_SJ.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(187).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(188).Value = CType(Original_VP_SJ.Value,Single)
            Else
                Me.Adapter.DeleteCommand.Parameters(187).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(188).Value = Global.System.DBNull.Value
            End If
            If (Original_VP_PL.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(189).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(190).Value = CType(Original_VP_PL.Value,Single)
            Else
                Me.Adapter.DeleteCommand.Parameters(189).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(190).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.DeleteCommand.Parameters(191).Value = CType(0,Object)
            Me.Adapter.DeleteCommand.Parameters(192).Value = CType(Original_ROZPETI_BLN,Boolean)
            If (Original_CHRAN_TARIFKC.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(193).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(194).Value = CType(Original_CHRAN_TARIFKC.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(193).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(194).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.DeleteCommand.Parameters(195).Value = CType(0,Object)
            Me.Adapter.DeleteCommand.Parameters(196).Value = CType(Original_CHRAN_OSOBA,Boolean)
            If (Original_PRAX_VYKAZ Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(197).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(198).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(197).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(198).Value = CType(Original_PRAX_VYKAZ,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert( _
                    ByVal JMENO As String,  _
                    ByVal TITUL As String,  _
                    ByVal EV_CISLO As Global.System.Nullable(Of Integer),  _
                    ByVal PROV_CISLO As String,  _
                    ByVal ROD_CISLO As String,  _
                    ByVal PPV As Byte,  _
                    ByVal BYD_PSC As String,  _
                    ByVal BYD_MISTO As String,  _
                    ByVal ROZPETI As Global.System.Nullable(Of Byte),  _
                    ByVal VZD_DOSA As Global.System.Nullable(Of Byte),  _
                    ByVal VZD_POZA As Global.System.Nullable(Of Byte),  _
                    ByVal VZD_POZ_DA As Global.System.Nullable(Of Date),  _
                    ByVal TYP_POZ As Byte,  _
                    ByVal ODPOCET As Global.System.Nullable(Of Double),  _
                    ByVal NEMINUS As Global.System.Nullable(Of Double),  _
                    ByVal PRV_ZAR As Global.System.Nullable(Of Date),  _
                    ByVal PRAX As Global.System.Nullable(Of Double),  _
                    ByVal PRAX_DNY As Global.System.Nullable(Of Double),  _
                    ByVal STUPEN As Global.System.Nullable(Of Short),  _
                    ByVal TRIDA As Global.System.Nullable(Of Short),  _
                    ByVal TARIFKC As Global.System.Nullable(Of Integer),  _
                    ByVal TARIFZVYSPROC As Global.System.Nullable(Of Single),  _
                    ByVal OSPRIPKC As Global.System.Nullable(Of Integer),  _
                    ByVal VEDENI As Global.System.Nullable(Of Integer),  _
                    ByVal ZTIZENE As Global.System.Nullable(Of Integer),  _
                    ByVal SMENNOST As Global.System.Nullable(Of Integer),  _
                    ByVal ZVLASTNI As Global.System.Nullable(Of Integer),  _
                    ByVal OD As Global.System.Nullable(Of Byte),  _
                    ByVal DATUMOD As Global.System.Nullable(Of Date),  _
                    ByVal DAT_NOV_TR As Global.System.Nullable(Of Date),  _
                    ByVal DAT_NOV_TR_TXT As String,  _
                    ByVal D_NASTUPU As Global.System.Nullable(Of Date),  _
                    ByVal D_VYSTUPU As Global.System.Nullable(Of Date),  _
                    ByVal USEK As String,  _
                    ByVal TISK As Boolean,  _
                    ByVal NEURCI As Boolean,  _
                    ByVal URCI_DO As String,  _
                    ByVal ZKUDOBA As Boolean,  _
                    ByVal ZKUD_DO As String,  _
                    ByVal DALUJ As Boolean,  _
                    ByVal ROD_PRIJ As String,  _
                    ByVal MIST_NAR As String,  _
                    ByVal ZDR_POJ As Global.System.Nullable(Of Short),  _
                    ByVal DUCHOD As Global.System.Nullable(Of Byte),  _
                    ByVal CESTY As Boolean,  _
                    ByVal PED As Boolean,  _
                    ByVal PREP As Global.System.Nullable(Of Double),  _
                    ByVal ZPUS As Boolean,  _
                    ByVal ZPUS_DAT As Global.System.Nullable(Of Date),  _
                    ByVal DALUJ_TEXT As String,  _
                    ByVal CELEJMENO As String,  _
                    ByVal PPV_SOUB As Boolean,  _
                    ByVal ZPS As Boolean,  _
                    ByVal POZNAMKA As String,  _
                    ByVal PRIPVED As Global.System.Nullable(Of Byte),  _
                    ByVal PRACOV As String,  _
                    ByVal FUNKCE As String,  _
                    ByVal PLATCELK As Global.System.Nullable(Of Double),  _
                    ByVal VOLIT4 As String,  _
                    ByVal VOLIT5 As Global.System.Nullable(Of Double),  _
                    ByVal VOLIT6 As Global.System.Nullable(Of Double),  _
                    ByVal ZP25X As Boolean,  _
                    ByVal NOVATRIDA As Global.System.Nullable(Of Short),  _
                    ByVal ZP25X_ZNAK As String,  _
                    ByVal DAT_NAROZ As Global.System.Nullable(Of Date),  _
                    ByVal SPECPRIPPED As Global.System.Nullable(Of Short),  _
                    ByVal ZJED As Boolean,  _
                    ByVal ZJEDROKY As Global.System.Nullable(Of Short),  _
                    ByVal ZJEDDNY As Global.System.Nullable(Of Short),  _
                    ByVal ZJEDDAT As Global.System.Nullable(Of Date),  _
                    ByVal TABULKA As Global.System.Nullable(Of Short),  _
                    ByVal LH_ZDRAV As Global.System.Nullable(Of Date),  _
                    ByVal LH_BOZP As Global.System.Nullable(Of Date),  _
                    ByVal LH_SIPVZ As Global.System.Nullable(Of Date),  _
                    ByVal LH_SKOL As Global.System.Nullable(Of Date),  _
                    ByVal PRIJMENI As String,  _
                    ByVal DRUH_PRACDOB As Global.System.Nullable(Of Short),  _
                    ByVal DRUH_PRACREZ As Global.System.Nullable(Of Short),  _
                    ByVal DAT_KONEC_PP As Global.System.Nullable(Of Date),  _
                    ByVal DAT_UZAV_PS As Global.System.Nullable(Of Date),  _
                    ByVal ERR As String,  _
                    ByVal ZVLZDRAV As Global.System.Nullable(Of Short),  _
                    ByVal VOLIT3 As String,  _
                    ByVal LH_MDRD As Global.System.Nullable(Of Date),  _
                    ByVal BYD_ULICE As String,  _
                    ByVal PRAX_PV As Global.System.Nullable(Of Double),  _
                    ByVal PRAX_PV_DNY As Global.System.Nullable(Of Double),  _
                    ByVal PRAX_PV_DAT As String,  _
                    ByVal ZIVVYR As Global.System.Nullable(Of Integer),  _
                    ByVal ZIVVYR_DAT As Global.System.Nullable(Of Date),  _
                    ByVal PED_ZARAZENI As Boolean,  _
                    ByVal PED_ZPUSOBILOST As Boolean,  _
                    ByVal OLDTABULKA As Global.System.Nullable(Of Short),  _
                    ByVal VOLIT1 As String,  _
                    ByVal VOLIT2 As String,  _
                    ByVal VP_SJ As Global.System.Nullable(Of Single),  _
                    ByVal VP_PL As Global.System.Nullable(Of Single),  _
                    ByVal ROZPETI_BLN As Boolean,  _
                    ByVal CHRAN_TARIFKC As Global.System.Nullable(Of Integer),  _
                    ByVal CHRAN_OSOBA As Boolean,  _
                    ByVal PRAX_VYKAZ As String) As Integer
            If (JMENO Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(JMENO,String)
            End If
            If (TITUL Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(TITUL,String)
            End If
            If (EV_CISLO.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(EV_CISLO.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (PROV_CISLO Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(PROV_CISLO,String)
            End If
            If (ROD_CISLO Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(ROD_CISLO,String)
            End If
            Me.Adapter.InsertCommand.Parameters(5).Value = CType(PPV,Byte)
            If (BYD_PSC Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(6).Value = CType(BYD_PSC,String)
            End If
            If (BYD_MISTO Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(7).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(7).Value = CType(BYD_MISTO,String)
            End If
            If (ROZPETI.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(8).Value = CType(ROZPETI.Value,Byte)
            Else
                Me.Adapter.InsertCommand.Parameters(8).Value = Global.System.DBNull.Value
            End If
            If (VZD_DOSA.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(9).Value = CType(VZD_DOSA.Value,Byte)
            Else
                Me.Adapter.InsertCommand.Parameters(9).Value = Global.System.DBNull.Value
            End If
            If (VZD_POZA.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(10).Value = CType(VZD_POZA.Value,Byte)
            Else
                Me.Adapter.InsertCommand.Parameters(10).Value = Global.System.DBNull.Value
            End If
            If (VZD_POZ_DA.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(11).Value = CType(VZD_POZ_DA.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(11).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.InsertCommand.Parameters(12).Value = CType(TYP_POZ,Byte)
            If (ODPOCET.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(13).Value = CType(ODPOCET.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(13).Value = Global.System.DBNull.Value
            End If
            If (NEMINUS.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(14).Value = CType(NEMINUS.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(14).Value = Global.System.DBNull.Value
            End If
            If (PRV_ZAR.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(15).Value = CType(PRV_ZAR.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(15).Value = Global.System.DBNull.Value
            End If
            If (PRAX.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(16).Value = CType(PRAX.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(16).Value = Global.System.DBNull.Value
            End If
            If (PRAX_DNY.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(17).Value = CType(PRAX_DNY.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(17).Value = Global.System.DBNull.Value
            End If
            If (STUPEN.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(18).Value = CType(STUPEN.Value,Short)
            Else
                Me.Adapter.InsertCommand.Parameters(18).Value = Global.System.DBNull.Value
            End If
            If (TRIDA.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(19).Value = CType(TRIDA.Value,Short)
            Else
                Me.Adapter.InsertCommand.Parameters(19).Value = Global.System.DBNull.Value
            End If
            If (TARIFKC.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(20).Value = CType(TARIFKC.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(20).Value = Global.System.DBNull.Value
            End If
            If (TARIFZVYSPROC.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(21).Value = CType(TARIFZVYSPROC.Value,Single)
            Else
                Me.Adapter.InsertCommand.Parameters(21).Value = Global.System.DBNull.Value
            End If
            If (OSPRIPKC.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(22).Value = CType(OSPRIPKC.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(22).Value = Global.System.DBNull.Value
            End If
            If (VEDENI.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(23).Value = CType(VEDENI.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(23).Value = Global.System.DBNull.Value
            End If
            If (ZTIZENE.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(24).Value = CType(ZTIZENE.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(24).Value = Global.System.DBNull.Value
            End If
            If (SMENNOST.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(25).Value = CType(SMENNOST.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(25).Value = Global.System.DBNull.Value
            End If
            If (ZVLASTNI.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(26).Value = CType(ZVLASTNI.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(26).Value = Global.System.DBNull.Value
            End If
            If (OD.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(27).Value = CType(OD.Value,Byte)
            Else
                Me.Adapter.InsertCommand.Parameters(27).Value = Global.System.DBNull.Value
            End If
            If (DATUMOD.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(28).Value = CType(DATUMOD.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(28).Value = Global.System.DBNull.Value
            End If
            If (DAT_NOV_TR.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(29).Value = CType(DAT_NOV_TR.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(29).Value = Global.System.DBNull.Value
            End If
            If (DAT_NOV_TR_TXT Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(30).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(30).Value = CType(DAT_NOV_TR_TXT,String)
            End If
            If (D_NASTUPU.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(31).Value = CType(D_NASTUPU.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(31).Value = Global.System.DBNull.Value
            End If
            If (D_VYSTUPU.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(32).Value = CType(D_VYSTUPU.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(32).Value = Global.System.DBNull.Value
            End If
            If (USEK Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(33).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(33).Value = CType(USEK,String)
            End If
            Me.Adapter.InsertCommand.Parameters(34).Value = CType(TISK,Boolean)
            Me.Adapter.InsertCommand.Parameters(35).Value = CType(NEURCI,Boolean)
            If (URCI_DO Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(36).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(36).Value = CType(URCI_DO,String)
            End If
            Me.Adapter.InsertCommand.Parameters(37).Value = CType(ZKUDOBA,Boolean)
            If (ZKUD_DO Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(38).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(38).Value = CType(ZKUD_DO,String)
            End If
            Me.Adapter.InsertCommand.Parameters(39).Value = CType(DALUJ,Boolean)
            If (ROD_PRIJ Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(40).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(40).Value = CType(ROD_PRIJ,String)
            End If
            If (MIST_NAR Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(41).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(41).Value = CType(MIST_NAR,String)
            End If
            If (ZDR_POJ.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(42).Value = CType(ZDR_POJ.Value,Short)
            Else
                Me.Adapter.InsertCommand.Parameters(42).Value = Global.System.DBNull.Value
            End If
            If (DUCHOD.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(43).Value = CType(DUCHOD.Value,Byte)
            Else
                Me.Adapter.InsertCommand.Parameters(43).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.InsertCommand.Parameters(44).Value = CType(CESTY,Boolean)
            Me.Adapter.InsertCommand.Parameters(45).Value = CType(PED,Boolean)
            If (PREP.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(46).Value = CType(PREP.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(46).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.InsertCommand.Parameters(47).Value = CType(ZPUS,Boolean)
            If (ZPUS_DAT.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(48).Value = CType(ZPUS_DAT.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(48).Value = Global.System.DBNull.Value
            End If
            If (DALUJ_TEXT Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(49).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(49).Value = CType(DALUJ_TEXT,String)
            End If
            If (CELEJMENO Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(50).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(50).Value = CType(CELEJMENO,String)
            End If
            Me.Adapter.InsertCommand.Parameters(51).Value = CType(PPV_SOUB,Boolean)
            Me.Adapter.InsertCommand.Parameters(52).Value = CType(ZPS,Boolean)
            If (POZNAMKA Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(53).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(53).Value = CType(POZNAMKA,String)
            End If
            If (PRIPVED.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(54).Value = CType(PRIPVED.Value,Byte)
            Else
                Me.Adapter.InsertCommand.Parameters(54).Value = Global.System.DBNull.Value
            End If
            If (PRACOV Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(55).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(55).Value = CType(PRACOV,String)
            End If
            If (FUNKCE Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(56).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(56).Value = CType(FUNKCE,String)
            End If
            If (PLATCELK.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(57).Value = CType(PLATCELK.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(57).Value = Global.System.DBNull.Value
            End If
            If (VOLIT4 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(58).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(58).Value = CType(VOLIT4,String)
            End If
            If (VOLIT5.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(59).Value = CType(VOLIT5.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(59).Value = Global.System.DBNull.Value
            End If
            If (VOLIT6.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(60).Value = CType(VOLIT6.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(60).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.InsertCommand.Parameters(61).Value = CType(ZP25X,Boolean)
            If (NOVATRIDA.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(62).Value = CType(NOVATRIDA.Value,Short)
            Else
                Me.Adapter.InsertCommand.Parameters(62).Value = Global.System.DBNull.Value
            End If
            If (ZP25X_ZNAK Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(63).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(63).Value = CType(ZP25X_ZNAK,String)
            End If
            If (DAT_NAROZ.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(64).Value = CType(DAT_NAROZ.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(64).Value = Global.System.DBNull.Value
            End If
            If (SPECPRIPPED.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(65).Value = CType(SPECPRIPPED.Value,Short)
            Else
                Me.Adapter.InsertCommand.Parameters(65).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.InsertCommand.Parameters(66).Value = CType(ZJED,Boolean)
            If (ZJEDROKY.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(67).Value = CType(ZJEDROKY.Value,Short)
            Else
                Me.Adapter.InsertCommand.Parameters(67).Value = Global.System.DBNull.Value
            End If
            If (ZJEDDNY.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(68).Value = CType(ZJEDDNY.Value,Short)
            Else
                Me.Adapter.InsertCommand.Parameters(68).Value = Global.System.DBNull.Value
            End If
            If (ZJEDDAT.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(69).Value = CType(ZJEDDAT.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(69).Value = Global.System.DBNull.Value
            End If
            If (TABULKA.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(70).Value = CType(TABULKA.Value,Short)
            Else
                Me.Adapter.InsertCommand.Parameters(70).Value = Global.System.DBNull.Value
            End If
            If (LH_ZDRAV.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(71).Value = CType(LH_ZDRAV.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(71).Value = Global.System.DBNull.Value
            End If
            If (LH_BOZP.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(72).Value = CType(LH_BOZP.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(72).Value = Global.System.DBNull.Value
            End If
            If (LH_SIPVZ.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(73).Value = CType(LH_SIPVZ.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(73).Value = Global.System.DBNull.Value
            End If
            If (LH_SKOL.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(74).Value = CType(LH_SKOL.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(74).Value = Global.System.DBNull.Value
            End If
            If (PRIJMENI Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(75).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(75).Value = CType(PRIJMENI,String)
            End If
            If (DRUH_PRACDOB.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(76).Value = CType(DRUH_PRACDOB.Value,Short)
            Else
                Me.Adapter.InsertCommand.Parameters(76).Value = Global.System.DBNull.Value
            End If
            If (DRUH_PRACREZ.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(77).Value = CType(DRUH_PRACREZ.Value,Short)
            Else
                Me.Adapter.InsertCommand.Parameters(77).Value = Global.System.DBNull.Value
            End If
            If (DAT_KONEC_PP.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(78).Value = CType(DAT_KONEC_PP.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(78).Value = Global.System.DBNull.Value
            End If
            If (DAT_UZAV_PS.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(79).Value = CType(DAT_UZAV_PS.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(79).Value = Global.System.DBNull.Value
            End If
            If (ERR Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(80).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(80).Value = CType(ERR,String)
            End If
            If (ZVLZDRAV.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(81).Value = CType(ZVLZDRAV.Value,Short)
            Else
                Me.Adapter.InsertCommand.Parameters(81).Value = Global.System.DBNull.Value
            End If
            If (VOLIT3 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(82).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(82).Value = CType(VOLIT3,String)
            End If
            If (LH_MDRD.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(83).Value = CType(LH_MDRD.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(83).Value = Global.System.DBNull.Value
            End If
            If (BYD_ULICE Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(84).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(84).Value = CType(BYD_ULICE,String)
            End If
            If (PRAX_PV.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(85).Value = CType(PRAX_PV.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(85).Value = Global.System.DBNull.Value
            End If
            If (PRAX_PV_DNY.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(86).Value = CType(PRAX_PV_DNY.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(86).Value = Global.System.DBNull.Value
            End If
            If (PRAX_PV_DAT Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(87).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(87).Value = CType(PRAX_PV_DAT,String)
            End If
            If (ZIVVYR.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(88).Value = CType(ZIVVYR.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(88).Value = Global.System.DBNull.Value
            End If
            If (ZIVVYR_DAT.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(89).Value = CType(ZIVVYR_DAT.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(89).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.InsertCommand.Parameters(90).Value = CType(PED_ZARAZENI,Boolean)
            Me.Adapter.InsertCommand.Parameters(91).Value = CType(PED_ZPUSOBILOST,Boolean)
            If (OLDTABULKA.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(92).Value = CType(OLDTABULKA.Value,Short)
            Else
                Me.Adapter.InsertCommand.Parameters(92).Value = Global.System.DBNull.Value
            End If
            If (VOLIT1 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(93).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(93).Value = CType(VOLIT1,String)
            End If
            If (VOLIT2 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(94).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(94).Value = CType(VOLIT2,String)
            End If
            If (VP_SJ.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(95).Value = CType(VP_SJ.Value,Single)
            Else
                Me.Adapter.InsertCommand.Parameters(95).Value = Global.System.DBNull.Value
            End If
            If (VP_PL.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(96).Value = CType(VP_PL.Value,Single)
            Else
                Me.Adapter.InsertCommand.Parameters(96).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.InsertCommand.Parameters(97).Value = CType(ROZPETI_BLN,Boolean)
            If (CHRAN_TARIFKC.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(98).Value = CType(CHRAN_TARIFKC.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(98).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.InsertCommand.Parameters(99).Value = CType(CHRAN_OSOBA,Boolean)
            If (PRAX_VYKAZ Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(100).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(100).Value = CType(PRAX_VYKAZ,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal JMENO As String,  _
                    ByVal TITUL As String,  _
                    ByVal EV_CISLO As Global.System.Nullable(Of Integer),  _
                    ByVal PROV_CISLO As String,  _
                    ByVal ROD_CISLO As String,  _
                    ByVal PPV As Byte,  _
                    ByVal BYD_PSC As String,  _
                    ByVal BYD_MISTO As String,  _
                    ByVal ROZPETI As Global.System.Nullable(Of Byte),  _
                    ByVal VZD_DOSA As Global.System.Nullable(Of Byte),  _
                    ByVal VZD_POZA As Global.System.Nullable(Of Byte),  _
                    ByVal VZD_POZ_DA As Global.System.Nullable(Of Date),  _
                    ByVal TYP_POZ As Byte,  _
                    ByVal ODPOCET As Global.System.Nullable(Of Double),  _
                    ByVal NEMINUS As Global.System.Nullable(Of Double),  _
                    ByVal PRV_ZAR As Global.System.Nullable(Of Date),  _
                    ByVal PRAX As Global.System.Nullable(Of Double),  _
                    ByVal PRAX_DNY As Global.System.Nullable(Of Double),  _
                    ByVal STUPEN As Global.System.Nullable(Of Short),  _
                    ByVal TRIDA As Global.System.Nullable(Of Short),  _
                    ByVal TARIFKC As Global.System.Nullable(Of Integer),  _
                    ByVal TARIFZVYSPROC As Global.System.Nullable(Of Single),  _
                    ByVal OSPRIPKC As Global.System.Nullable(Of Integer),  _
                    ByVal VEDENI As Global.System.Nullable(Of Integer),  _
                    ByVal ZTIZENE As Global.System.Nullable(Of Integer),  _
                    ByVal SMENNOST As Global.System.Nullable(Of Integer),  _
                    ByVal ZVLASTNI As Global.System.Nullable(Of Integer),  _
                    ByVal OD As Global.System.Nullable(Of Byte),  _
                    ByVal DATUMOD As Global.System.Nullable(Of Date),  _
                    ByVal DAT_NOV_TR As Global.System.Nullable(Of Date),  _
                    ByVal DAT_NOV_TR_TXT As String,  _
                    ByVal D_NASTUPU As Global.System.Nullable(Of Date),  _
                    ByVal D_VYSTUPU As Global.System.Nullable(Of Date),  _
                    ByVal USEK As String,  _
                    ByVal TISK As Boolean,  _
                    ByVal NEURCI As Boolean,  _
                    ByVal URCI_DO As String,  _
                    ByVal ZKUDOBA As Boolean,  _
                    ByVal ZKUD_DO As String,  _
                    ByVal DALUJ As Boolean,  _
                    ByVal ROD_PRIJ As String,  _
                    ByVal MIST_NAR As String,  _
                    ByVal ZDR_POJ As Global.System.Nullable(Of Short),  _
                    ByVal DUCHOD As Global.System.Nullable(Of Byte),  _
                    ByVal CESTY As Boolean,  _
                    ByVal PED As Boolean,  _
                    ByVal PREP As Global.System.Nullable(Of Double),  _
                    ByVal ZPUS As Boolean,  _
                    ByVal ZPUS_DAT As Global.System.Nullable(Of Date),  _
                    ByVal DALUJ_TEXT As String,  _
                    ByVal CELEJMENO As String,  _
                    ByVal PPV_SOUB As Boolean,  _
                    ByVal ZPS As Boolean,  _
                    ByVal POZNAMKA As String,  _
                    ByVal PRIPVED As Global.System.Nullable(Of Byte),  _
                    ByVal PRACOV As String,  _
                    ByVal FUNKCE As String,  _
                    ByVal PLATCELK As Global.System.Nullable(Of Double),  _
                    ByVal VOLIT4 As String,  _
                    ByVal VOLIT5 As Global.System.Nullable(Of Double),  _
                    ByVal VOLIT6 As Global.System.Nullable(Of Double),  _
                    ByVal ZP25X As Boolean,  _
                    ByVal NOVATRIDA As Global.System.Nullable(Of Short),  _
                    ByVal ZP25X_ZNAK As String,  _
                    ByVal DAT_NAROZ As Global.System.Nullable(Of Date),  _
                    ByVal SPECPRIPPED As Global.System.Nullable(Of Short),  _
                    ByVal ZJED As Boolean,  _
                    ByVal ZJEDROKY As Global.System.Nullable(Of Short),  _
                    ByVal ZJEDDNY As Global.System.Nullable(Of Short),  _
                    ByVal ZJEDDAT As Global.System.Nullable(Of Date),  _
                    ByVal TABULKA As Global.System.Nullable(Of Short),  _
                    ByVal LH_ZDRAV As Global.System.Nullable(Of Date),  _
                    ByVal LH_BOZP As Global.System.Nullable(Of Date),  _
                    ByVal LH_SIPVZ As Global.System.Nullable(Of Date),  _
                    ByVal LH_SKOL As Global.System.Nullable(Of Date),  _
                    ByVal PRIJMENI As String,  _
                    ByVal DRUH_PRACDOB As Global.System.Nullable(Of Short),  _
                    ByVal DRUH_PRACREZ As Global.System.Nullable(Of Short),  _
                    ByVal DAT_KONEC_PP As Global.System.Nullable(Of Date),  _
                    ByVal DAT_UZAV_PS As Global.System.Nullable(Of Date),  _
                    ByVal ERR As String,  _
                    ByVal ZVLZDRAV As Global.System.Nullable(Of Short),  _
                    ByVal VOLIT3 As String,  _
                    ByVal LH_MDRD As Global.System.Nullable(Of Date),  _
                    ByVal BYD_ULICE As String,  _
                    ByVal PRAX_PV As Global.System.Nullable(Of Double),  _
                    ByVal PRAX_PV_DNY As Global.System.Nullable(Of Double),  _
                    ByVal PRAX_PV_DAT As String,  _
                    ByVal ZIVVYR As Global.System.Nullable(Of Integer),  _
                    ByVal ZIVVYR_DAT As Global.System.Nullable(Of Date),  _
                    ByVal PED_ZARAZENI As Boolean,  _
                    ByVal PED_ZPUSOBILOST As Boolean,  _
                    ByVal OLDTABULKA As Global.System.Nullable(Of Short),  _
                    ByVal VOLIT1 As String,  _
                    ByVal VOLIT2 As String,  _
                    ByVal VP_SJ As Global.System.Nullable(Of Single),  _
                    ByVal VP_PL As Global.System.Nullable(Of Single),  _
                    ByVal ROZPETI_BLN As Boolean,  _
                    ByVal CHRAN_TARIFKC As Global.System.Nullable(Of Integer),  _
                    ByVal CHRAN_OSOBA As Boolean,  _
                    ByVal PRAX_VYKAZ As String,  _
                    ByVal Original_ID As Integer,  _
                    ByVal Original_JMENO As String,  _
                    ByVal Original_TITUL As String,  _
                    ByVal Original_EV_CISLO As Global.System.Nullable(Of Integer),  _
                    ByVal Original_PROV_CISLO As String,  _
                    ByVal Original_ROD_CISLO As String,  _
                    ByVal Original_PPV As Byte,  _
                    ByVal Original_BYD_PSC As String,  _
                    ByVal Original_BYD_MISTO As String,  _
                    ByVal Original_ROZPETI As Global.System.Nullable(Of Byte),  _
                    ByVal Original_VZD_DOSA As Global.System.Nullable(Of Byte),  _
                    ByVal Original_VZD_POZA As Global.System.Nullable(Of Byte),  _
                    ByVal Original_VZD_POZ_DA As Global.System.Nullable(Of Date),  _
                    ByVal Original_TYP_POZ As Byte,  _
                    ByVal Original_ODPOCET As Global.System.Nullable(Of Double),  _
                    ByVal Original_NEMINUS As Global.System.Nullable(Of Double),  _
                    ByVal Original_PRV_ZAR As Global.System.Nullable(Of Date),  _
                    ByVal Original_PRAX As Global.System.Nullable(Of Double),  _
                    ByVal Original_PRAX_DNY As Global.System.Nullable(Of Double),  _
                    ByVal Original_STUPEN As Global.System.Nullable(Of Short),  _
                    ByVal Original_TRIDA As Global.System.Nullable(Of Short),  _
                    ByVal Original_TARIFKC As Global.System.Nullable(Of Integer),  _
                    ByVal Original_TARIFZVYSPROC As Global.System.Nullable(Of Single),  _
                    ByVal Original_OSPRIPKC As Global.System.Nullable(Of Integer),  _
                    ByVal Original_VEDENI As Global.System.Nullable(Of Integer),  _
                    ByVal Original_ZTIZENE As Global.System.Nullable(Of Integer),  _
                    ByVal Original_SMENNOST As Global.System.Nullable(Of Integer),  _
                    ByVal Original_ZVLASTNI As Global.System.Nullable(Of Integer),  _
                    ByVal Original_OD As Global.System.Nullable(Of Byte),  _
                    ByVal Original_DATUMOD As Global.System.Nullable(Of Date),  _
                    ByVal Original_DAT_NOV_TR As Global.System.Nullable(Of Date),  _
                    ByVal Original_DAT_NOV_TR_TXT As String,  _
                    ByVal Original_D_NASTUPU As Global.System.Nullable(Of Date),  _
                    ByVal Original_D_VYSTUPU As Global.System.Nullable(Of Date),  _
                    ByVal Original_USEK As String,  _
                    ByVal Original_TISK As Boolean,  _
                    ByVal Original_NEURCI As Boolean,  _
                    ByVal Original_URCI_DO As String,  _
                    ByVal Original_ZKUDOBA As Boolean,  _
                    ByVal Original_ZKUD_DO As String,  _
                    ByVal Original_DALUJ As Boolean,  _
                    ByVal Original_ROD_PRIJ As String,  _
                    ByVal Original_MIST_NAR As String,  _
                    ByVal Original_ZDR_POJ As Global.System.Nullable(Of Short),  _
                    ByVal Original_DUCHOD As Global.System.Nullable(Of Byte),  _
                    ByVal Original_CESTY As Boolean,  _
                    ByVal Original_PED As Boolean,  _
                    ByVal Original_PREP As Global.System.Nullable(Of Double),  _
                    ByVal Original_ZPUS As Boolean,  _
                    ByVal Original_ZPUS_DAT As Global.System.Nullable(Of Date),  _
                    ByVal Original_CELEJMENO As String,  _
                    ByVal Original_PPV_SOUB As Boolean,  _
                    ByVal Original_ZPS As Boolean,  _
                    ByVal Original_PRIPVED As Global.System.Nullable(Of Byte),  _
                    ByVal Original_PRACOV As String,  _
                    ByVal Original_FUNKCE As String,  _
                    ByVal Original_PLATCELK As Global.System.Nullable(Of Double),  _
                    ByVal Original_VOLIT4 As String,  _
                    ByVal Original_VOLIT5 As Global.System.Nullable(Of Double),  _
                    ByVal Original_VOLIT6 As Global.System.Nullable(Of Double),  _
                    ByVal Original_ZP25X As Boolean,  _
                    ByVal Original_NOVATRIDA As Global.System.Nullable(Of Short),  _
                    ByVal Original_ZP25X_ZNAK As String,  _
                    ByVal Original_DAT_NAROZ As Global.System.Nullable(Of Date),  _
                    ByVal Original_SPECPRIPPED As Global.System.Nullable(Of Short),  _
                    ByVal Original_ZJED As Boolean,  _
                    ByVal Original_ZJEDROKY As Global.System.Nullable(Of Short),  _
                    ByVal Original_ZJEDDNY As Global.System.Nullable(Of Short),  _
                    ByVal Original_ZJEDDAT As Global.System.Nullable(Of Date),  _
                    ByVal Original_TABULKA As Global.System.Nullable(Of Short),  _
                    ByVal Original_LH_ZDRAV As Global.System.Nullable(Of Date),  _
                    ByVal Original_LH_BOZP As Global.System.Nullable(Of Date),  _
                    ByVal Original_LH_SIPVZ As Global.System.Nullable(Of Date),  _
                    ByVal Original_LH_SKOL As Global.System.Nullable(Of Date),  _
                    ByVal Original_PRIJMENI As String,  _
                    ByVal Original_DRUH_PRACDOB As Global.System.Nullable(Of Short),  _
                    ByVal Original_DRUH_PRACREZ As Global.System.Nullable(Of Short),  _
                    ByVal Original_DAT_KONEC_PP As Global.System.Nullable(Of Date),  _
                    ByVal Original_DAT_UZAV_PS As Global.System.Nullable(Of Date),  _
                    ByVal Original_ERR As String,  _
                    ByVal Original_ZVLZDRAV As Global.System.Nullable(Of Short),  _
                    ByVal Original_VOLIT3 As String,  _
                    ByVal Original_LH_MDRD As Global.System.Nullable(Of Date),  _
                    ByVal Original_BYD_ULICE As String,  _
                    ByVal Original_PRAX_PV As Global.System.Nullable(Of Double),  _
                    ByVal Original_PRAX_PV_DNY As Global.System.Nullable(Of Double),  _
                    ByVal Original_PRAX_PV_DAT As String,  _
                    ByVal Original_ZIVVYR As Global.System.Nullable(Of Integer),  _
                    ByVal Original_ZIVVYR_DAT As Global.System.Nullable(Of Date),  _
                    ByVal Original_PED_ZARAZENI As Boolean,  _
                    ByVal Original_PED_ZPUSOBILOST As Boolean,  _
                    ByVal Original_OLDTABULKA As Global.System.Nullable(Of Short),  _
                    ByVal Original_VOLIT1 As String,  _
                    ByVal Original_VOLIT2 As String,  _
                    ByVal Original_VP_SJ As Global.System.Nullable(Of Single),  _
                    ByVal Original_VP_PL As Global.System.Nullable(Of Single),  _
                    ByVal Original_ROZPETI_BLN As Boolean,  _
                    ByVal Original_CHRAN_TARIFKC As Global.System.Nullable(Of Integer),  _
                    ByVal Original_CHRAN_OSOBA As Boolean,  _
                    ByVal Original_PRAX_VYKAZ As String) As Integer
            If (JMENO Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(0).Value = CType(JMENO,String)
            End If
            If (TITUL Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(TITUL,String)
            End If
            If (EV_CISLO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(EV_CISLO.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (PROV_CISLO Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(PROV_CISLO,String)
            End If
            If (ROD_CISLO Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(ROD_CISLO,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(5).Value = CType(PPV,Byte)
            If (BYD_PSC Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(BYD_PSC,String)
            End If
            If (BYD_MISTO Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(7).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(7).Value = CType(BYD_MISTO,String)
            End If
            If (ROZPETI.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(8).Value = CType(ROZPETI.Value,Byte)
            Else
                Me.Adapter.UpdateCommand.Parameters(8).Value = Global.System.DBNull.Value
            End If
            If (VZD_DOSA.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(VZD_DOSA.Value,Byte)
            Else
                Me.Adapter.UpdateCommand.Parameters(9).Value = Global.System.DBNull.Value
            End If
            If (VZD_POZA.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(10).Value = CType(VZD_POZA.Value,Byte)
            Else
                Me.Adapter.UpdateCommand.Parameters(10).Value = Global.System.DBNull.Value
            End If
            If (VZD_POZ_DA.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(11).Value = CType(VZD_POZ_DA.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(11).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.UpdateCommand.Parameters(12).Value = CType(TYP_POZ,Byte)
            If (ODPOCET.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(13).Value = CType(ODPOCET.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(13).Value = Global.System.DBNull.Value
            End If
            If (NEMINUS.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(14).Value = CType(NEMINUS.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(14).Value = Global.System.DBNull.Value
            End If
            If (PRV_ZAR.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(15).Value = CType(PRV_ZAR.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(15).Value = Global.System.DBNull.Value
            End If
            If (PRAX.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(16).Value = CType(PRAX.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(16).Value = Global.System.DBNull.Value
            End If
            If (PRAX_DNY.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(17).Value = CType(PRAX_DNY.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(17).Value = Global.System.DBNull.Value
            End If
            If (STUPEN.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(18).Value = CType(STUPEN.Value,Short)
            Else
                Me.Adapter.UpdateCommand.Parameters(18).Value = Global.System.DBNull.Value
            End If
            If (TRIDA.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(19).Value = CType(TRIDA.Value,Short)
            Else
                Me.Adapter.UpdateCommand.Parameters(19).Value = Global.System.DBNull.Value
            End If
            If (TARIFKC.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(20).Value = CType(TARIFKC.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(20).Value = Global.System.DBNull.Value
            End If
            If (TARIFZVYSPROC.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(21).Value = CType(TARIFZVYSPROC.Value,Single)
            Else
                Me.Adapter.UpdateCommand.Parameters(21).Value = Global.System.DBNull.Value
            End If
            If (OSPRIPKC.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(22).Value = CType(OSPRIPKC.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(22).Value = Global.System.DBNull.Value
            End If
            If (VEDENI.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(23).Value = CType(VEDENI.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(23).Value = Global.System.DBNull.Value
            End If
            If (ZTIZENE.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(24).Value = CType(ZTIZENE.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(24).Value = Global.System.DBNull.Value
            End If
            If (SMENNOST.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(25).Value = CType(SMENNOST.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(25).Value = Global.System.DBNull.Value
            End If
            If (ZVLASTNI.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(26).Value = CType(ZVLASTNI.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(26).Value = Global.System.DBNull.Value
            End If
            If (OD.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(27).Value = CType(OD.Value,Byte)
            Else
                Me.Adapter.UpdateCommand.Parameters(27).Value = Global.System.DBNull.Value
            End If
            If (DATUMOD.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(28).Value = CType(DATUMOD.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(28).Value = Global.System.DBNull.Value
            End If
            If (DAT_NOV_TR.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(29).Value = CType(DAT_NOV_TR.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(29).Value = Global.System.DBNull.Value
            End If
            If (DAT_NOV_TR_TXT Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(30).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(30).Value = CType(DAT_NOV_TR_TXT,String)
            End If
            If (D_NASTUPU.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(31).Value = CType(D_NASTUPU.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(31).Value = Global.System.DBNull.Value
            End If
            If (D_VYSTUPU.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(32).Value = CType(D_VYSTUPU.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(32).Value = Global.System.DBNull.Value
            End If
            If (USEK Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(33).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(33).Value = CType(USEK,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(34).Value = CType(TISK,Boolean)
            Me.Adapter.UpdateCommand.Parameters(35).Value = CType(NEURCI,Boolean)
            If (URCI_DO Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(36).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(36).Value = CType(URCI_DO,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(37).Value = CType(ZKUDOBA,Boolean)
            If (ZKUD_DO Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(38).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(38).Value = CType(ZKUD_DO,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(39).Value = CType(DALUJ,Boolean)
            If (ROD_PRIJ Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(40).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(40).Value = CType(ROD_PRIJ,String)
            End If
            If (MIST_NAR Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(41).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(41).Value = CType(MIST_NAR,String)
            End If
            If (ZDR_POJ.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(42).Value = CType(ZDR_POJ.Value,Short)
            Else
                Me.Adapter.UpdateCommand.Parameters(42).Value = Global.System.DBNull.Value
            End If
            If (DUCHOD.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(43).Value = CType(DUCHOD.Value,Byte)
            Else
                Me.Adapter.UpdateCommand.Parameters(43).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.UpdateCommand.Parameters(44).Value = CType(CESTY,Boolean)
            Me.Adapter.UpdateCommand.Parameters(45).Value = CType(PED,Boolean)
            If (PREP.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(46).Value = CType(PREP.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(46).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.UpdateCommand.Parameters(47).Value = CType(ZPUS,Boolean)
            If (ZPUS_DAT.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(48).Value = CType(ZPUS_DAT.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(48).Value = Global.System.DBNull.Value
            End If
            If (DALUJ_TEXT Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(49).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(49).Value = CType(DALUJ_TEXT,String)
            End If
            If (CELEJMENO Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(50).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(50).Value = CType(CELEJMENO,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(51).Value = CType(PPV_SOUB,Boolean)
            Me.Adapter.UpdateCommand.Parameters(52).Value = CType(ZPS,Boolean)
            If (POZNAMKA Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(53).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(53).Value = CType(POZNAMKA,String)
            End If
            If (PRIPVED.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(54).Value = CType(PRIPVED.Value,Byte)
            Else
                Me.Adapter.UpdateCommand.Parameters(54).Value = Global.System.DBNull.Value
            End If
            If (PRACOV Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(55).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(55).Value = CType(PRACOV,String)
            End If
            If (FUNKCE Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(56).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(56).Value = CType(FUNKCE,String)
            End If
            If (PLATCELK.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(57).Value = CType(PLATCELK.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(57).Value = Global.System.DBNull.Value
            End If
            If (VOLIT4 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(58).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(58).Value = CType(VOLIT4,String)
            End If
            If (VOLIT5.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(59).Value = CType(VOLIT5.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(59).Value = Global.System.DBNull.Value
            End If
            If (VOLIT6.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(60).Value = CType(VOLIT6.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(60).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.UpdateCommand.Parameters(61).Value = CType(ZP25X,Boolean)
            If (NOVATRIDA.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(62).Value = CType(NOVATRIDA.Value,Short)
            Else
                Me.Adapter.UpdateCommand.Parameters(62).Value = Global.System.DBNull.Value
            End If
            If (ZP25X_ZNAK Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(63).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(63).Value = CType(ZP25X_ZNAK,String)
            End If
            If (DAT_NAROZ.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(64).Value = CType(DAT_NAROZ.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(64).Value = Global.System.DBNull.Value
            End If
            If (SPECPRIPPED.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(65).Value = CType(SPECPRIPPED.Value,Short)
            Else
                Me.Adapter.UpdateCommand.Parameters(65).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.UpdateCommand.Parameters(66).Value = CType(ZJED,Boolean)
            If (ZJEDROKY.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(67).Value = CType(ZJEDROKY.Value,Short)
            Else
                Me.Adapter.UpdateCommand.Parameters(67).Value = Global.System.DBNull.Value
            End If
            If (ZJEDDNY.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(68).Value = CType(ZJEDDNY.Value,Short)
            Else
                Me.Adapter.UpdateCommand.Parameters(68).Value = Global.System.DBNull.Value
            End If
            If (ZJEDDAT.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(69).Value = CType(ZJEDDAT.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(69).Value = Global.System.DBNull.Value
            End If
            If (TABULKA.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(70).Value = CType(TABULKA.Value,Short)
            Else
                Me.Adapter.UpdateCommand.Parameters(70).Value = Global.System.DBNull.Value
            End If
            If (LH_ZDRAV.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(71).Value = CType(LH_ZDRAV.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(71).Value = Global.System.DBNull.Value
            End If
            If (LH_BOZP.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(72).Value = CType(LH_BOZP.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(72).Value = Global.System.DBNull.Value
            End If
            If (LH_SIPVZ.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(73).Value = CType(LH_SIPVZ.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(73).Value = Global.System.DBNull.Value
            End If
            If (LH_SKOL.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(74).Value = CType(LH_SKOL.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(74).Value = Global.System.DBNull.Value
            End If
            If (PRIJMENI Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(75).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(75).Value = CType(PRIJMENI,String)
            End If
            If (DRUH_PRACDOB.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(76).Value = CType(DRUH_PRACDOB.Value,Short)
            Else
                Me.Adapter.UpdateCommand.Parameters(76).Value = Global.System.DBNull.Value
            End If
            If (DRUH_PRACREZ.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(77).Value = CType(DRUH_PRACREZ.Value,Short)
            Else
                Me.Adapter.UpdateCommand.Parameters(77).Value = Global.System.DBNull.Value
            End If
            If (DAT_KONEC_PP.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(78).Value = CType(DAT_KONEC_PP.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(78).Value = Global.System.DBNull.Value
            End If
            If (DAT_UZAV_PS.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(79).Value = CType(DAT_UZAV_PS.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(79).Value = Global.System.DBNull.Value
            End If
            If (ERR Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(80).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(80).Value = CType(ERR,String)
            End If
            If (ZVLZDRAV.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(81).Value = CType(ZVLZDRAV.Value,Short)
            Else
                Me.Adapter.UpdateCommand.Parameters(81).Value = Global.System.DBNull.Value
            End If
            If (VOLIT3 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(82).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(82).Value = CType(VOLIT3,String)
            End If
            If (LH_MDRD.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(83).Value = CType(LH_MDRD.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(83).Value = Global.System.DBNull.Value
            End If
            If (BYD_ULICE Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(84).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(84).Value = CType(BYD_ULICE,String)
            End If
            If (PRAX_PV.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(85).Value = CType(PRAX_PV.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(85).Value = Global.System.DBNull.Value
            End If
            If (PRAX_PV_DNY.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(86).Value = CType(PRAX_PV_DNY.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(86).Value = Global.System.DBNull.Value
            End If
            If (PRAX_PV_DAT Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(87).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(87).Value = CType(PRAX_PV_DAT,String)
            End If
            If (ZIVVYR.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(88).Value = CType(ZIVVYR.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(88).Value = Global.System.DBNull.Value
            End If
            If (ZIVVYR_DAT.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(89).Value = CType(ZIVVYR_DAT.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(89).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.UpdateCommand.Parameters(90).Value = CType(PED_ZARAZENI,Boolean)
            Me.Adapter.UpdateCommand.Parameters(91).Value = CType(PED_ZPUSOBILOST,Boolean)
            If (OLDTABULKA.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(92).Value = CType(OLDTABULKA.Value,Short)
            Else
                Me.Adapter.UpdateCommand.Parameters(92).Value = Global.System.DBNull.Value
            End If
            If (VOLIT1 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(93).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(93).Value = CType(VOLIT1,String)
            End If
            If (VOLIT2 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(94).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(94).Value = CType(VOLIT2,String)
            End If
            If (VP_SJ.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(95).Value = CType(VP_SJ.Value,Single)
            Else
                Me.Adapter.UpdateCommand.Parameters(95).Value = Global.System.DBNull.Value
            End If
            If (VP_PL.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(96).Value = CType(VP_PL.Value,Single)
            Else
                Me.Adapter.UpdateCommand.Parameters(96).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.UpdateCommand.Parameters(97).Value = CType(ROZPETI_BLN,Boolean)
            If (CHRAN_TARIFKC.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(98).Value = CType(CHRAN_TARIFKC.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(98).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.UpdateCommand.Parameters(99).Value = CType(CHRAN_OSOBA,Boolean)
            If (PRAX_VYKAZ Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(100).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(100).Value = CType(PRAX_VYKAZ,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(101).Value = CType(Original_ID,Integer)
            If (Original_JMENO Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(102).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(103).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(102).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(103).Value = CType(Original_JMENO,String)
            End If
            If (Original_TITUL Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(104).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(105).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(104).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(105).Value = CType(Original_TITUL,String)
            End If
            If (Original_EV_CISLO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(106).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(107).Value = CType(Original_EV_CISLO.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(106).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(107).Value = Global.System.DBNull.Value
            End If
            If (Original_PROV_CISLO Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(108).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(109).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(108).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(109).Value = CType(Original_PROV_CISLO,String)
            End If
            If (Original_ROD_CISLO Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(110).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(111).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(110).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(111).Value = CType(Original_ROD_CISLO,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(112).Value = CType(0,Object)
            Me.Adapter.UpdateCommand.Parameters(113).Value = CType(Original_PPV,Byte)
            If (Original_BYD_PSC Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(114).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(115).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(114).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(115).Value = CType(Original_BYD_PSC,String)
            End If
            If (Original_BYD_MISTO Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(116).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(117).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(116).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(117).Value = CType(Original_BYD_MISTO,String)
            End If
            If (Original_ROZPETI.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(118).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(119).Value = CType(Original_ROZPETI.Value,Byte)
            Else
                Me.Adapter.UpdateCommand.Parameters(118).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(119).Value = Global.System.DBNull.Value
            End If
            If (Original_VZD_DOSA.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(120).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(121).Value = CType(Original_VZD_DOSA.Value,Byte)
            Else
                Me.Adapter.UpdateCommand.Parameters(120).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(121).Value = Global.System.DBNull.Value
            End If
            If (Original_VZD_POZA.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(122).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(123).Value = CType(Original_VZD_POZA.Value,Byte)
            Else
                Me.Adapter.UpdateCommand.Parameters(122).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(123).Value = Global.System.DBNull.Value
            End If
            If (Original_VZD_POZ_DA.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(124).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(125).Value = CType(Original_VZD_POZ_DA.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(124).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(125).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.UpdateCommand.Parameters(126).Value = CType(0,Object)
            Me.Adapter.UpdateCommand.Parameters(127).Value = CType(Original_TYP_POZ,Byte)
            If (Original_ODPOCET.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(128).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(129).Value = CType(Original_ODPOCET.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(128).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(129).Value = Global.System.DBNull.Value
            End If
            If (Original_NEMINUS.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(130).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(131).Value = CType(Original_NEMINUS.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(130).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(131).Value = Global.System.DBNull.Value
            End If
            If (Original_PRV_ZAR.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(132).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(133).Value = CType(Original_PRV_ZAR.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(132).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(133).Value = Global.System.DBNull.Value
            End If
            If (Original_PRAX.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(134).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(135).Value = CType(Original_PRAX.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(134).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(135).Value = Global.System.DBNull.Value
            End If
            If (Original_PRAX_DNY.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(136).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(137).Value = CType(Original_PRAX_DNY.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(136).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(137).Value = Global.System.DBNull.Value
            End If
            If (Original_STUPEN.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(138).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(139).Value = CType(Original_STUPEN.Value,Short)
            Else
                Me.Adapter.UpdateCommand.Parameters(138).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(139).Value = Global.System.DBNull.Value
            End If
            If (Original_TRIDA.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(140).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(141).Value = CType(Original_TRIDA.Value,Short)
            Else
                Me.Adapter.UpdateCommand.Parameters(140).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(141).Value = Global.System.DBNull.Value
            End If
            If (Original_TARIFKC.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(142).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(143).Value = CType(Original_TARIFKC.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(142).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(143).Value = Global.System.DBNull.Value
            End If
            If (Original_TARIFZVYSPROC.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(144).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(145).Value = CType(Original_TARIFZVYSPROC.Value,Single)
            Else
                Me.Adapter.UpdateCommand.Parameters(144).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(145).Value = Global.System.DBNull.Value
            End If
            If (Original_OSPRIPKC.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(146).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(147).Value = CType(Original_OSPRIPKC.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(146).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(147).Value = Global.System.DBNull.Value
            End If
            If (Original_VEDENI.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(148).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(149).Value = CType(Original_VEDENI.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(148).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(149).Value = Global.System.DBNull.Value
            End If
            If (Original_ZTIZENE.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(150).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(151).Value = CType(Original_ZTIZENE.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(150).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(151).Value = Global.System.DBNull.Value
            End If
            If (Original_SMENNOST.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(152).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(153).Value = CType(Original_SMENNOST.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(152).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(153).Value = Global.System.DBNull.Value
            End If
            If (Original_ZVLASTNI.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(154).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(155).Value = CType(Original_ZVLASTNI.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(154).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(155).Value = Global.System.DBNull.Value
            End If
            If (Original_OD.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(156).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(157).Value = CType(Original_OD.Value,Byte)
            Else
                Me.Adapter.UpdateCommand.Parameters(156).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(157).Value = Global.System.DBNull.Value
            End If
            If (Original_DATUMOD.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(158).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(159).Value = CType(Original_DATUMOD.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(158).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(159).Value = Global.System.DBNull.Value
            End If
            If (Original_DAT_NOV_TR.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(160).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(161).Value = CType(Original_DAT_NOV_TR.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(160).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(161).Value = Global.System.DBNull.Value
            End If
            If (Original_DAT_NOV_TR_TXT Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(162).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(163).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(162).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(163).Value = CType(Original_DAT_NOV_TR_TXT,String)
            End If
            If (Original_D_NASTUPU.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(164).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(165).Value = CType(Original_D_NASTUPU.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(164).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(165).Value = Global.System.DBNull.Value
            End If
            If (Original_D_VYSTUPU.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(166).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(167).Value = CType(Original_D_VYSTUPU.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(166).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(167).Value = Global.System.DBNull.Value
            End If
            If (Original_USEK Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(168).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(169).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(168).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(169).Value = CType(Original_USEK,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(170).Value = CType(0,Object)
            Me.Adapter.UpdateCommand.Parameters(171).Value = CType(Original_TISK,Boolean)
            Me.Adapter.UpdateCommand.Parameters(172).Value = CType(0,Object)
            Me.Adapter.UpdateCommand.Parameters(173).Value = CType(Original_NEURCI,Boolean)
            If (Original_URCI_DO Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(174).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(175).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(174).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(175).Value = CType(Original_URCI_DO,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(176).Value = CType(0,Object)
            Me.Adapter.UpdateCommand.Parameters(177).Value = CType(Original_ZKUDOBA,Boolean)
            If (Original_ZKUD_DO Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(178).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(179).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(178).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(179).Value = CType(Original_ZKUD_DO,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(180).Value = CType(0,Object)
            Me.Adapter.UpdateCommand.Parameters(181).Value = CType(Original_DALUJ,Boolean)
            If (Original_ROD_PRIJ Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(182).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(183).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(182).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(183).Value = CType(Original_ROD_PRIJ,String)
            End If
            If (Original_MIST_NAR Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(184).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(185).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(184).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(185).Value = CType(Original_MIST_NAR,String)
            End If
            If (Original_ZDR_POJ.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(186).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(187).Value = CType(Original_ZDR_POJ.Value,Short)
            Else
                Me.Adapter.UpdateCommand.Parameters(186).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(187).Value = Global.System.DBNull.Value
            End If
            If (Original_DUCHOD.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(188).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(189).Value = CType(Original_DUCHOD.Value,Byte)
            Else
                Me.Adapter.UpdateCommand.Parameters(188).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(189).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.UpdateCommand.Parameters(190).Value = CType(0,Object)
            Me.Adapter.UpdateCommand.Parameters(191).Value = CType(Original_CESTY,Boolean)
            Me.Adapter.UpdateCommand.Parameters(192).Value = CType(0,Object)
            Me.Adapter.UpdateCommand.Parameters(193).Value = CType(Original_PED,Boolean)
            If (Original_PREP.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(194).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(195).Value = CType(Original_PREP.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(194).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(195).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.UpdateCommand.Parameters(196).Value = CType(0,Object)
            Me.Adapter.UpdateCommand.Parameters(197).Value = CType(Original_ZPUS,Boolean)
            If (Original_ZPUS_DAT.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(198).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(199).Value = CType(Original_ZPUS_DAT.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(198).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(199).Value = Global.System.DBNull.Value
            End If
            If (Original_CELEJMENO Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(200).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(201).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(200).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(201).Value = CType(Original_CELEJMENO,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(202).Value = CType(0,Object)
            Me.Adapter.UpdateCommand.Parameters(203).Value = CType(Original_PPV_SOUB,Boolean)
            Me.Adapter.UpdateCommand.Parameters(204).Value = CType(0,Object)
            Me.Adapter.UpdateCommand.Parameters(205).Value = CType(Original_ZPS,Boolean)
            If (Original_PRIPVED.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(206).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(207).Value = CType(Original_PRIPVED.Value,Byte)
            Else
                Me.Adapter.UpdateCommand.Parameters(206).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(207).Value = Global.System.DBNull.Value
            End If
            If (Original_PRACOV Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(208).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(209).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(208).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(209).Value = CType(Original_PRACOV,String)
            End If
            If (Original_FUNKCE Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(210).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(211).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(210).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(211).Value = CType(Original_FUNKCE,String)
            End If
            If (Original_PLATCELK.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(212).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(213).Value = CType(Original_PLATCELK.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(212).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(213).Value = Global.System.DBNull.Value
            End If
            If (Original_VOLIT4 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(214).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(215).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(214).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(215).Value = CType(Original_VOLIT4,String)
            End If
            If (Original_VOLIT5.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(216).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(217).Value = CType(Original_VOLIT5.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(216).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(217).Value = Global.System.DBNull.Value
            End If
            If (Original_VOLIT6.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(218).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(219).Value = CType(Original_VOLIT6.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(218).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(219).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.UpdateCommand.Parameters(220).Value = CType(0,Object)
            Me.Adapter.UpdateCommand.Parameters(221).Value = CType(Original_ZP25X,Boolean)
            If (Original_NOVATRIDA.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(222).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(223).Value = CType(Original_NOVATRIDA.Value,Short)
            Else
                Me.Adapter.UpdateCommand.Parameters(222).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(223).Value = Global.System.DBNull.Value
            End If
            If (Original_ZP25X_ZNAK Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(224).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(225).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(224).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(225).Value = CType(Original_ZP25X_ZNAK,String)
            End If
            If (Original_DAT_NAROZ.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(226).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(227).Value = CType(Original_DAT_NAROZ.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(226).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(227).Value = Global.System.DBNull.Value
            End If
            If (Original_SPECPRIPPED.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(228).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(229).Value = CType(Original_SPECPRIPPED.Value,Short)
            Else
                Me.Adapter.UpdateCommand.Parameters(228).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(229).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.UpdateCommand.Parameters(230).Value = CType(0,Object)
            Me.Adapter.UpdateCommand.Parameters(231).Value = CType(Original_ZJED,Boolean)
            If (Original_ZJEDROKY.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(232).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(233).Value = CType(Original_ZJEDROKY.Value,Short)
            Else
                Me.Adapter.UpdateCommand.Parameters(232).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(233).Value = Global.System.DBNull.Value
            End If
            If (Original_ZJEDDNY.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(234).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(235).Value = CType(Original_ZJEDDNY.Value,Short)
            Else
                Me.Adapter.UpdateCommand.Parameters(234).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(235).Value = Global.System.DBNull.Value
            End If
            If (Original_ZJEDDAT.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(236).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(237).Value = CType(Original_ZJEDDAT.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(236).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(237).Value = Global.System.DBNull.Value
            End If
            If (Original_TABULKA.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(238).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(239).Value = CType(Original_TABULKA.Value,Short)
            Else
                Me.Adapter.UpdateCommand.Parameters(238).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(239).Value = Global.System.DBNull.Value
            End If
            If (Original_LH_ZDRAV.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(240).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(241).Value = CType(Original_LH_ZDRAV.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(240).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(241).Value = Global.System.DBNull.Value
            End If
            If (Original_LH_BOZP.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(242).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(243).Value = CType(Original_LH_BOZP.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(242).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(243).Value = Global.System.DBNull.Value
            End If
            If (Original_LH_SIPVZ.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(244).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(245).Value = CType(Original_LH_SIPVZ.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(244).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(245).Value = Global.System.DBNull.Value
            End If
            If (Original_LH_SKOL.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(246).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(247).Value = CType(Original_LH_SKOL.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(246).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(247).Value = Global.System.DBNull.Value
            End If
            If (Original_PRIJMENI Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(248).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(249).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(248).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(249).Value = CType(Original_PRIJMENI,String)
            End If
            If (Original_DRUH_PRACDOB.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(250).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(251).Value = CType(Original_DRUH_PRACDOB.Value,Short)
            Else
                Me.Adapter.UpdateCommand.Parameters(250).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(251).Value = Global.System.DBNull.Value
            End If
            If (Original_DRUH_PRACREZ.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(252).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(253).Value = CType(Original_DRUH_PRACREZ.Value,Short)
            Else
                Me.Adapter.UpdateCommand.Parameters(252).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(253).Value = Global.System.DBNull.Value
            End If
            If (Original_DAT_KONEC_PP.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(254).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(255).Value = CType(Original_DAT_KONEC_PP.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(254).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(255).Value = Global.System.DBNull.Value
            End If
            If (Original_DAT_UZAV_PS.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(256).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(257).Value = CType(Original_DAT_UZAV_PS.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(256).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(257).Value = Global.System.DBNull.Value
            End If
            If (Original_ERR Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(258).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(259).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(258).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(259).Value = CType(Original_ERR,String)
            End If
            If (Original_ZVLZDRAV.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(260).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(261).Value = CType(Original_ZVLZDRAV.Value,Short)
            Else
                Me.Adapter.UpdateCommand.Parameters(260).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(261).Value = Global.System.DBNull.Value
            End If
            If (Original_VOLIT3 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(262).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(263).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(262).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(263).Value = CType(Original_VOLIT3,String)
            End If
            If (Original_LH_MDRD.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(264).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(265).Value = CType(Original_LH_MDRD.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(264).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(265).Value = Global.System.DBNull.Value
            End If
            If (Original_BYD_ULICE Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(266).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(267).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(266).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(267).Value = CType(Original_BYD_ULICE,String)
            End If
            If (Original_PRAX_PV.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(268).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(269).Value = CType(Original_PRAX_PV.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(268).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(269).Value = Global.System.DBNull.Value
            End If
            If (Original_PRAX_PV_DNY.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(270).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(271).Value = CType(Original_PRAX_PV_DNY.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(270).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(271).Value = Global.System.DBNull.Value
            End If
            If (Original_PRAX_PV_DAT Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(272).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(273).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(272).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(273).Value = CType(Original_PRAX_PV_DAT,String)
            End If
            If (Original_ZIVVYR.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(274).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(275).Value = CType(Original_ZIVVYR.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(274).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(275).Value = Global.System.DBNull.Value
            End If
            If (Original_ZIVVYR_DAT.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(276).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(277).Value = CType(Original_ZIVVYR_DAT.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(276).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(277).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.UpdateCommand.Parameters(278).Value = CType(0,Object)
            Me.Adapter.UpdateCommand.Parameters(279).Value = CType(Original_PED_ZARAZENI,Boolean)
            Me.Adapter.UpdateCommand.Parameters(280).Value = CType(0,Object)
            Me.Adapter.UpdateCommand.Parameters(281).Value = CType(Original_PED_ZPUSOBILOST,Boolean)
            If (Original_OLDTABULKA.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(282).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(283).Value = CType(Original_OLDTABULKA.Value,Short)
            Else
                Me.Adapter.UpdateCommand.Parameters(282).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(283).Value = Global.System.DBNull.Value
            End If
            If (Original_VOLIT1 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(284).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(285).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(284).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(285).Value = CType(Original_VOLIT1,String)
            End If
            If (Original_VOLIT2 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(286).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(287).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(286).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(287).Value = CType(Original_VOLIT2,String)
            End If
            If (Original_VP_SJ.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(288).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(289).Value = CType(Original_VP_SJ.Value,Single)
            Else
                Me.Adapter.UpdateCommand.Parameters(288).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(289).Value = Global.System.DBNull.Value
            End If
            If (Original_VP_PL.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(290).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(291).Value = CType(Original_VP_PL.Value,Single)
            Else
                Me.Adapter.UpdateCommand.Parameters(290).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(291).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.UpdateCommand.Parameters(292).Value = CType(0,Object)
            Me.Adapter.UpdateCommand.Parameters(293).Value = CType(Original_ROZPETI_BLN,Boolean)
            If (Original_CHRAN_TARIFKC.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(294).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(295).Value = CType(Original_CHRAN_TARIFKC.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(294).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(295).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.UpdateCommand.Parameters(296).Value = CType(0,Object)
            Me.Adapter.UpdateCommand.Parameters(297).Value = CType(Original_CHRAN_OSOBA,Boolean)
            If (Original_PRAX_VYKAZ Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(298).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(299).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(298).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(299).Value = CType(Original_PRAX_VYKAZ,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
    End Class
    
    '''<summary>
    '''TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD"& _ 
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")>  _
    Partial Public Class TableAdapterManager
        Inherits Global.System.ComponentModel.Component
        
        Private _updateOrder As UpdateOrderOption
        
        Private _pERSTableAdapter As PERSTableAdapter
        
        Private _backupDataSetBeforeUpdate As Boolean
        
        Private _connection As Global.System.Data.IDbConnection
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property UpdateOrder() As UpdateOrderOption
            Get
                Return Me._updateOrder
            End Get
            Set
                Me._updateOrder = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property PERSTableAdapter() As PERSTableAdapter
            Get
                Return Me._pERSTableAdapter
            End Get
            Set
                Me._pERSTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property BackupDataSetBeforeUpdate() As Boolean
            Get
                Return Me._backupDataSetBeforeUpdate
            End Get
            Set
                Me._backupDataSetBeforeUpdate = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public Property Connection() As Global.System.Data.IDbConnection
            Get
                If (Not (Me._connection) Is Nothing) Then
                    Return Me._connection
                End If
                If ((Not (Me._pERSTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._pERSTableAdapter.Connection) Is Nothing)) Then
                    Return Me._pERSTableAdapter.Connection
                End If
                Return Nothing
            End Get
            Set
                Me._connection = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property TableAdapterInstanceCount() As Integer
            Get
                Dim count As Integer = 0
                If (Not (Me._pERSTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                Return count
            End Get
        End Property
        
        '''<summary>
        '''Update rows in top-down order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Function UpdateUpdatedRows(ByVal dataSet As DS_pers, ByVal allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow), ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            If (Not (Me._pERSTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.PERS.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._pERSTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            Return result
        End Function
        
        '''<summary>
        '''Insert rows in top-down order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Function UpdateInsertedRows(ByVal dataSet As DS_pers, ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            If (Not (Me._pERSTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.PERS.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._pERSTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            Return result
        End Function
        
        '''<summary>
        '''Delete rows in bottom-up order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Function UpdateDeletedRows(ByVal dataSet As DS_pers, ByVal allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            If (Not (Me._pERSTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.PERS.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._pERSTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            Return result
        End Function
        
        '''<summary>
        '''Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Function GetRealUpdatedRows(ByVal updatedRows() As Global.System.Data.DataRow, ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Global.System.Data.DataRow()
            If ((updatedRows Is Nothing)  _
                        OrElse (updatedRows.Length < 1)) Then
                Return updatedRows
            End If
            If ((allAddedRows Is Nothing)  _
                        OrElse (allAddedRows.Count < 1)) Then
                Return updatedRows
            End If
            Dim realUpdatedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)()
            Dim i As Integer = 0
            Do While (i < updatedRows.Length)
                Dim row As Global.System.Data.DataRow = updatedRows(i)
                If (allAddedRows.Contains(row) = false) Then
                    realUpdatedRows.Add(row)
                End If
                i = (i + 1)
            Loop
            Return realUpdatedRows.ToArray
        End Function
        
        '''<summary>
        '''Update all changes to the dataset.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overridable Function UpdateAll(ByVal dataSet As DS_pers) As Integer
            If (dataSet Is Nothing) Then
                Throw New Global.System.ArgumentNullException("dataSet")
            End If
            If (dataSet.HasChanges = false) Then
                Return 0
            End If
            If ((Not (Me._pERSTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._pERSTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            Dim workConnection As Global.System.Data.IDbConnection = Me.Connection
            If (workConnection Is Nothing) Then
                Throw New Global.System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana"& _ 
                        "ger TableAdapter property to a valid TableAdapter instance.")
            End If
            Dim workConnOpened As Boolean = false
            If ((workConnection.State And Global.System.Data.ConnectionState.Broken)  _
                        = Global.System.Data.ConnectionState.Broken) Then
                workConnection.Close
            End If
            If (workConnection.State = Global.System.Data.ConnectionState.Closed) Then
                workConnection.Open
                workConnOpened = true
            End If
            Dim workTransaction As Global.System.Data.IDbTransaction = workConnection.BeginTransaction
            If (workTransaction Is Nothing) Then
                Throw New Global.System.ApplicationException("The transaction cannot begin. The current data connection does not support transa"& _ 
                        "ctions or the current state is not allowing the transaction to begin.")
            End If
            Dim allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)()
            Dim allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)()
            Dim adaptersWithAcceptChangesDuringUpdate As Global.System.Collections.Generic.List(Of Global.System.Data.Common.DataAdapter) = New Global.System.Collections.Generic.List(Of Global.System.Data.Common.DataAdapter)()
            Dim revertConnections As Global.System.Collections.Generic.Dictionary(Of Object, Global.System.Data.IDbConnection) = New Global.System.Collections.Generic.Dictionary(Of Object, Global.System.Data.IDbConnection)()
            Dim result As Integer = 0
            Dim backupDataSet As Global.System.Data.DataSet = Nothing
            If Me.BackupDataSetBeforeUpdate Then
                backupDataSet = New Global.System.Data.DataSet()
                backupDataSet.Merge(dataSet)
            End If
            Try 
                '---- Prepare for update -----------
                '
                If (Not (Me._pERSTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._pERSTableAdapter, Me._pERSTableAdapter.Connection)
                    Me._pERSTableAdapter.Connection = CType(workConnection,Global.System.Data.OleDb.OleDbConnection)
                    Me._pERSTableAdapter.Transaction = CType(workTransaction,Global.System.Data.OleDb.OleDbTransaction)
                    If Me._pERSTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._pERSTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._pERSTableAdapter.Adapter)
                    End If
                End If
                '
                '---- Perform updates -----------
                '
                If (Me.UpdateOrder = UpdateOrderOption.UpdateInsertDelete) Then
                    result = (result + Me.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows))
                    result = (result + Me.UpdateInsertedRows(dataSet, allAddedRows))
                Else
                    result = (result + Me.UpdateInsertedRows(dataSet, allAddedRows))
                    result = (result + Me.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows))
                End If
                result = (result + Me.UpdateDeletedRows(dataSet, allChangedRows))
                '
                '---- Commit updates -----------
                '
                workTransaction.Commit
                If (0 < allAddedRows.Count) Then
                    Dim rows((allAddedRows.Count) - 1) As Global.System.Data.DataRow
                    allAddedRows.CopyTo(rows)
                    Dim i As Integer = 0
                    Do While (i < rows.Length)
                        Dim row As Global.System.Data.DataRow = rows(i)
                        row.AcceptChanges
                        i = (i + 1)
                    Loop
                End If
                If (0 < allChangedRows.Count) Then
                    Dim rows((allChangedRows.Count) - 1) As Global.System.Data.DataRow
                    allChangedRows.CopyTo(rows)
                    Dim i As Integer = 0
                    Do While (i < rows.Length)
                        Dim row As Global.System.Data.DataRow = rows(i)
                        row.AcceptChanges
                        i = (i + 1)
                    Loop
                End If
            Catch ex As Global.System.Exception
                workTransaction.Rollback
                '---- Restore the dataset -----------
                If Me.BackupDataSetBeforeUpdate Then
                    Global.System.Diagnostics.Debug.Assert((Not (backupDataSet) Is Nothing))
                    dataSet.Clear
                    dataSet.Merge(backupDataSet)
                Else
                    If (0 < allAddedRows.Count) Then
                        Dim rows((allAddedRows.Count) - 1) As Global.System.Data.DataRow
                        allAddedRows.CopyTo(rows)
                        Dim i As Integer = 0
                        Do While (i < rows.Length)
                            Dim row As Global.System.Data.DataRow = rows(i)
                            row.AcceptChanges
                            row.SetAdded
                            i = (i + 1)
                        Loop
                    End If
                End If
                Throw ex
            Finally
                If workConnOpened Then
                    workConnection.Close
                End If
                If (Not (Me._pERSTableAdapter) Is Nothing) Then
                    Me._pERSTableAdapter.Connection = CType(revertConnections(Me._pERSTableAdapter),Global.System.Data.OleDb.OleDbConnection)
                    Me._pERSTableAdapter.Transaction = Nothing
                End If
                If (0 < adaptersWithAcceptChangesDuringUpdate.Count) Then
                    Dim adapters((adaptersWithAcceptChangesDuringUpdate.Count) - 1) As Global.System.Data.Common.DataAdapter
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters)
                    Dim i As Integer = 0
                    Do While (i < adapters.Length)
                        Dim adapter As Global.System.Data.Common.DataAdapter = adapters(i)
                        adapter.AcceptChangesDuringUpdate = true
                        i = (i + 1)
                    Loop
                End If
            End Try
            Return result
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overridable Sub SortSelfReferenceRows(ByVal rows() As Global.System.Data.DataRow, ByVal relation As Global.System.Data.DataRelation, ByVal childFirst As Boolean)
            Global.System.Array.Sort(Of Global.System.Data.DataRow)(rows, New SelfReferenceComparer(relation, childFirst))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overridable Function MatchTableAdapterConnection(ByVal inputConnection As Global.System.Data.IDbConnection) As Boolean
            If (Not (Me._connection) Is Nothing) Then
                Return true
            End If
            If ((Me.Connection Is Nothing)  _
                        OrElse (inputConnection Is Nothing)) Then
                Return true
            End If
            If String.Equals(Me.Connection.ConnectionString, inputConnection.ConnectionString, Global.System.StringComparison.Ordinal) Then
                Return true
            End If
            Return false
        End Function
        
        '''<summary>
        '''Update Order Option
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Enum UpdateOrderOption
            
            InsertUpdateDelete = 0
            
            UpdateInsertDelete = 1
        End Enum
        
        '''<summary>
        '''Used to sort self-referenced table's rows
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Class SelfReferenceComparer
            Inherits Object
            Implements Global.System.Collections.Generic.IComparer(Of Global.System.Data.DataRow)
            
            Private _relation As Global.System.Data.DataRelation
            
            Private _childFirst As Integer
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Friend Sub New(ByVal relation As Global.System.Data.DataRelation, ByVal childFirst As Boolean)
                MyBase.New
                Me._relation = relation
                If childFirst Then
                    Me._childFirst = -1
                Else
                    Me._childFirst = 1
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Private Function GetRoot(ByVal row As Global.System.Data.DataRow, ByRef distance As Integer) As Global.System.Data.DataRow
                Global.System.Diagnostics.Debug.Assert((Not (row) Is Nothing))
                Dim root As Global.System.Data.DataRow = row
                distance = 0

                Dim traversedRows As Global.System.Collections.Generic.IDictionary(Of Global.System.Data.DataRow, Global.System.Data.DataRow) = New Global.System.Collections.Generic.Dictionary(Of Global.System.Data.DataRow, Global.System.Data.DataRow)()
                traversedRows(row) = row

                Dim parent As Global.System.Data.DataRow = row.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.[Default])

                Do While ((Not (parent) Is Nothing)  _
                            AndAlso (traversedRows.ContainsKey(parent) = false))
                    distance = (distance + 1)
                    root = parent
                    traversedRows(parent) = parent
                    parent = parent.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.[Default])

                Loop

                If (distance = 0) Then
                    traversedRows.Clear
                    traversedRows(row) = row
                    parent = row.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.Original)

                    Do While ((Not (parent) Is Nothing)  _
                                AndAlso (traversedRows.ContainsKey(parent) = false))
                        distance = (distance + 1)
                        root = parent
                        traversedRows(parent) = parent
                        parent = parent.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.Original)

                    Loop
                End If

                Return root
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Function Compare(ByVal row1 As Global.System.Data.DataRow, ByVal row2 As Global.System.Data.DataRow) As Integer Implements Global.System.Collections.Generic.IComparer(Of Global.System.Data.DataRow).Compare
                If Object.ReferenceEquals(row1, row2) Then
                    Return 0
                End If
                If (row1 Is Nothing) Then
                    Return -1
                End If
                If (row2 Is Nothing) Then
                    Return 1
                End If

                Dim distance1 As Integer = 0
                Dim root1 As Global.System.Data.DataRow = Me.GetRoot(row1, distance1)

                Dim distance2 As Integer = 0
                Dim root2 As Global.System.Data.DataRow = Me.GetRoot(row2, distance2)

                If Object.ReferenceEquals(root1, root2) Then
                    Return (Me._childFirst * distance1.CompareTo(distance2))
                Else
                    Global.System.Diagnostics.Debug.Assert(((Not (root1.Table) Is Nothing)  _
                                    AndAlso (Not (root2.Table) Is Nothing)))
                    If (root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2)) Then
                        Return -1
                    Else
                        Return 1
                    End If
                End If
            End Function
        End Class
    End Class
End Namespace
